* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -8.0 x)) (* 14.0 (* x x))) (* -9.333333 (* (* x x) x))) (* 2.916667 (* (* (* x x) x) x))) (* -0.466667 (* (* (* (* x x) x) x) x))) (* 0.038889 (* (* (* (* (* x x) x) x) x) x))) (* -0.001587 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 2.5e-05 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (290 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (+ (* -0.001587 x) 0.038889) in x
* [misc]taylor:  Taking taylor expansion of (* -0.001587 x) in x
* [misc]taylor:  Taking taylor expansion of -0.001587 in x
* [misc]backup-simplify:  Simplify -0.001587 into -0.001587
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 0.038889 in x
* [misc]backup-simplify:  Simplify 0.038889 into 0.038889
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (+ (* -0.001587 x) 0.038889) in x
* [misc]taylor:  Taking taylor expansion of (* -0.001587 x) in x
* [misc]taylor:  Taking taylor expansion of -0.001587 in x
* [misc]backup-simplify:  Simplify -0.001587 into -0.001587
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 0.038889 in x
* [misc]backup-simplify:  Simplify 0.038889 into 0.038889
* [misc]backup-simplify:  Simplify (* -0.001587 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.038889) into 0.038889
* [misc]backup-simplify:  Simplify (* (pow x 6) 0.038889) into (* 0.038889 (pow x 6))
* [misc]backup-simplify:  Simplify (* 0.038889 (pow x 6)) into (* 0.038889 (pow x 6))
* [misc]backup-simplify:  Simplify (+ (* -0.001587 1) (* 0 0)) into (- 0.001587)
* [misc]backup-simplify:  Simplify (+ (- 0.001587) 0) into (- 0.001587)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) (- 0.001587)) (* 0 0.038889)) into (- (* 0.001587 (pow x 6)))
* [misc]backup-simplify:  Simplify (- (* 0.001587 (pow x 6))) into (- (* 0.001587 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 (- 0.001587)) (* 0 0.038889))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 (- 0.001587)) (* 0 0.038889)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.001587)) (* 0 0.038889))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.001587)) (* 0 0.038889)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.001587)) (* 0 0.038889))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.001587)) (* 0 0.038889)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.001587 (pow x 6))) x) (* 0.038889 (pow x 6))) into (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7)))
* [misc]approximate:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (+ (* -0.001587 (/ 1 x)) 0.038889)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (+ (* -0.001587 (/ 1 x)) 0.038889)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (+ (* -0.001587 (/ 1 x)) 0.038889) in x
* [misc]taylor:  Taking taylor expansion of (* -0.001587 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.001587 in x
* [misc]backup-simplify:  Simplify -0.001587 into -0.001587
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 0.038889 in x
* [misc]backup-simplify:  Simplify 0.038889 into 0.038889
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (+ (* -0.001587 (/ 1 x)) 0.038889)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (+ (* -0.001587 (/ 1 x)) 0.038889) in x
* [misc]taylor:  Taking taylor expansion of (* -0.001587 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.001587 in x
* [misc]backup-simplify:  Simplify -0.001587 into -0.001587
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 0.038889 in x
* [misc]backup-simplify:  Simplify 0.038889 into 0.038889
* [misc]backup-simplify:  Simplify (* -0.001587 1) into -0.001587
* [misc]backup-simplify:  Simplify (+ -0.001587 0) into (- 0.001587)
* [misc]backup-simplify:  Simplify (* (pow x -6) (- 0.001587)) into (/ -0.001587 (pow x 6))
* [misc]backup-simplify:  Simplify (/ -0.001587 (pow x 6)) into (/ -0.001587 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.038889) into 0.038889
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0.038889) (* 0 (- 0.001587))) into (* 0.038889 (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (* 0.038889 (/ 1 (pow x 6))) into (/ 0.038889 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0.038889) (* 0 (- 0.001587)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0.038889) (* 0 (- 0.001587))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.038889) (* 0 (- 0.001587)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.038889) (* 0 (- 0.001587))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.038889) (* 0 (- 0.001587)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.038889) (* 0 (- 0.001587))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (/ 0.038889 (pow (/ 1 x) 6)) (* (/ -0.001587 (pow (/ 1 x) 6)) (/ 1 (/ 1 x)))) into (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7)))
* [misc]approximate:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (+ (* -0.001587 (/ 1 (- x))) 0.038889)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (+ (* -0.001587 (/ 1 (- x))) 0.038889)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (+ (* -0.001587 (/ 1 (- x))) 0.038889) in x
* [misc]taylor:  Taking taylor expansion of (* -0.001587 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.001587 in x
* [misc]backup-simplify:  Simplify -0.001587 into -0.001587
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 0.038889 in x
* [misc]backup-simplify:  Simplify 0.038889 into 0.038889
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (+ (* -0.001587 (/ 1 (- x))) 0.038889)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (+ (* -0.001587 (/ 1 (- x))) 0.038889) in x
* [misc]taylor:  Taking taylor expansion of (* -0.001587 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.001587 in x
* [misc]backup-simplify:  Simplify -0.001587 into -0.001587
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 0.038889 in x
* [misc]backup-simplify:  Simplify 0.038889 into 0.038889
* [misc]backup-simplify:  Simplify (* -0.001587 -1) into 0.001587
* [misc]backup-simplify:  Simplify (+ 0.001587 0) into 0.001587
* [misc]backup-simplify:  Simplify (* (pow x -6) 0.001587) into (/ 0.001587 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 0.001587 (pow x 6)) into (/ 0.001587 (pow x 6))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.038889) into 0.038889
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0.038889) (* 0 0.001587)) into (* 0.038889 (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (* 0.038889 (/ 1 (pow x 6))) into (/ 0.038889 (pow x 6))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0.038889) (* 0 0.001587))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0.038889) (* 0 0.001587)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.038889) (* 0 0.001587))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.038889) (* 0 0.001587)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.038889) (* 0 0.001587))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.001587 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.038889) (* 0 0.001587)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (/ 0.038889 (pow (/ 1 (- x)) 6)) (* (/ 0.001587 (pow (/ 1 (- x)) 6)) (/ 1 (/ 1 (- x))))) into (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 2 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 3 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x (* 2 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 4 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) (* 1 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 5 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 6 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 7 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (pow (* x x) 3) 1) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 8 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (log (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 9 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (log (exp (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 10 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 11 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 12 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 13 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* x x) (* (* x x) (* x x))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 14 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 15 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 16 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* 1 (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 17 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 18 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 19 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 20 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) (* 1 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 21 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 22 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 23 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (pow (* x x) 3) 1) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 24 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (log (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 25 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (log (exp (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 26 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 27 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 28 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 29 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* x x) (* (* x x) (* x x))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 30 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 31 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 32 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* 1 (pow (* x x) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 33 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x (+ 2 2)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 34 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) (+ 1 1)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 35 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) 2) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 36 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* (* x x) (* x x)) 1) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 37 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) 2) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 38 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) (+ 1 1)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 39 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* (* x x) (* x x)) 1) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 40 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (exp (+ (log (* x x)) (log (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 41 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (exp (log (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 42 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (log (exp (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 43 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 44 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 45 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 46 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 47 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* 1 (* (* x x) (* x x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 48 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* (* x x) x) x) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 49 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x (* x (* x x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 50 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 51 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (pow (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)) 1)) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 52 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (exp (+ (* (log (* x x)) 3) (log (+ (* -0.001587 x) 0.038889))))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (log (* x x)) 3) (log (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 0.038889 (* -0.001587 x))) (* (log x) (+ 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ 0.038889 (* -0.001587 x))) (* (log x) (+ 3 3)))
* * * * [misc]progress:  [ 53 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (exp (+ (* (log (* x x)) 3) (log (+ (* -0.001587 x) 0.038889))))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (* (log (* x x)) 3) (log (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 0.038889 (* -0.001587 x))) (* (log x) (+ 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ 0.038889 (* -0.001587 x))) (* (log x) (+ 3 3)))
* * * * [misc]progress:  [ 54 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (exp (+ (log (pow (* x x) 3)) (log (+ (* -0.001587 x) 0.038889))))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (pow (* x x) 3)) (log (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (116 enodes)
* * [misc]simplify:  iters left: 1 (156 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 0.038889 (* -0.001587 x))) (* (log x) (+ 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ 0.038889 (* -0.001587 x))) (* (log x) (+ 3 3)))
* * * * [misc]progress:  [ 55 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (exp (log (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (262 enodes)
* * [misc]simplify:  iters left: 2 (474 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 0.038889 (* x -0.001587))) (* (+ 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ 0.038889 (* x -0.001587))) (* (+ 3 3) (log x)))
* * * * [misc]progress:  [ 56 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (log (exp (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (273 enodes)
* [exit]simplify:  Simplified to (exp (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587))))
* [exit]simplify:  Simplified to (exp (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587))))
* * * * [misc]progress:  [ 57 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (cbrt (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3)) (* (* (+ (* -0.001587 x) 0.038889) (+ (* -0.001587 x) 0.038889)) (+ (* -0.001587 x) 0.038889))))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3)) (* (* (+ (* -0.001587 x) 0.038889) (+ (* -0.001587 x) 0.038889)) (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (207 enodes)
* [exit]simplify:  Simplified to (* (pow (+ 0.038889 (* x -0.001587)) 3) (pow (pow (* x x) 3) 3))
* [exit]simplify:  Simplified to (* (pow (+ 0.038889 (* x -0.001587)) 3) (pow (pow (* x x) 3) 3))
* * * * [misc]progress:  [ 58 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (cbrt (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (cbrt (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)))) (cbrt (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (cbrt (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (213 enodes)
* * [misc]simplify:  iters left: 2 (372 enodes)
* * [misc]simplify:  iters left: 1 (485 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587)))) (cbrt (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587)))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587)))) (cbrt (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587)))))
* [enter]simplify:  Simplifying (cbrt (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (211 enodes)
* * [misc]simplify:  iters left: 2 (378 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* x -0.001587))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* x -0.001587))))
* * * * [misc]progress:  [ 59 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (cbrt (* (* (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587))) 3)
* * * * [misc]progress:  [ 60 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (sqrt (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (sqrt (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (211 enodes)
* * [misc]simplify:  iters left: 2 (378 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* x -0.001587))))
* [exit]simplify:  Simplified to (sqrt (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* x -0.001587))))
* [enter]simplify:  Simplifying (sqrt (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (211 enodes)
* * [misc]simplify:  iters left: 2 (378 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* x -0.001587))))
* [exit]simplify:  Simplified to (sqrt (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* x -0.001587))))
* * * * [misc]progress:  [ 61 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* 1 (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 62 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (+ (* (pow (* x x) 3) (* -0.001587 x)) (* (pow (* x x) 3) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) (* -0.001587 x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (118 enodes)
* * [misc]simplify:  iters left: 1 (162 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x -0.001587) (* x x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x -0.001587) (* x x)))
* [enter]simplify:  Simplifying (* (pow (* x x) 3) 0.038889)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (100 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x x) 0.038889))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x x) 0.038889))
* * * * [misc]progress:  [ 63 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (+ (* (* -0.001587 x) (pow (* x x) 3)) (* 0.038889 (pow (* x x) 3)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* -0.001587 x) (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (121 enodes)
* * [misc]simplify:  iters left: 1 (149 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* -0.001587 x) (* x x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* -0.001587 x) (* x x)))
* [enter]simplify:  Simplifying (* 0.038889 (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (105 enodes)
* [exit]simplify:  Simplified to (* (* 0.038889 (* x x)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* 0.038889 (* x x)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 64 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow (* x x) 3) (* (cbrt (+ (* -0.001587 x) 0.038889)) (cbrt (+ (* -0.001587 x) 0.038889)))) (cbrt (+ (* -0.001587 x) 0.038889)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) (* (cbrt (+ (* -0.001587 x) 0.038889)) (cbrt (+ (* -0.001587 x) 0.038889))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (222 enodes)
* * [misc]simplify:  iters left: 1 (346 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ 0.038889 (* x -0.001587)))) (* (cbrt (+ 0.038889 (* x -0.001587))) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ 0.038889 (* x -0.001587)))) (* (cbrt (+ 0.038889 (* x -0.001587))) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 65 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow (* x x) 3) (sqrt (+ (* -0.001587 x) 0.038889))) (sqrt (+ (* -0.001587 x) 0.038889)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) (sqrt (+ (* -0.001587 x) 0.038889)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (111 enodes)
* * [misc]simplify:  iters left: 1 (136 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (sqrt (+ 0.038889 (* x -0.001587))))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (sqrt (+ 0.038889 (* x -0.001587))))
* * * * [misc]progress:  [ 66 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow (* x x) 3) 1) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) 1)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (88 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 67 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 3) (* (pow x 3) (+ (* -0.001587 x) 0.038889)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (* -0.001587 x) 0.038889))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* -0.001587 x) 0.038889))
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* -0.001587 x) 0.038889))
* * * * [misc]progress:  [ 68 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* x x) (* x x)) (* (* x x) (+ (* -0.001587 x) 0.038889)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* -0.001587 x) 0.038889))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.001587) 0.038889) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -0.001587) 0.038889) (* x x))
* * * * [misc]progress:  [ 69 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (* (cbrt (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (85 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (+ 0.038889 (* -0.001587 x)) (* x x))
* [exit]simplify:  Simplified to (* (+ 0.038889 (* -0.001587 x)) (* x x))
* * * * [misc]progress:  [ 70 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 3) (* (pow x 3) (+ (* -0.001587 x) 0.038889)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (* -0.001587 x) 0.038889))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* -0.001587 x) 0.038889))
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* -0.001587 x) 0.038889))
* * * * [misc]progress:  [ 71 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* x x) (* (* (* x x) (* x x)) (+ (* -0.001587 x) 0.038889)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (+ (* -0.001587 x) 0.038889))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (223 enodes)
* * [misc]simplify:  iters left: 1 (240 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.001587 x) 0.038889))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.001587 x) 0.038889))
* * * * [misc]progress:  [ 72 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (sqrt (pow (* x x) 3)) (* (sqrt (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (sqrt (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (55 enodes)
* * [misc]simplify:  iters left: 1 (60 enodes)
* [exit]simplify:  Simplified to (* (+ 0.038889 (* -0.001587 x)) (fabs (pow x 3)))
* [exit]simplify:  Simplified to (* (+ 0.038889 (* -0.001587 x)) (fabs (pow x 3)))
* * * * [misc]progress:  [ 73 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* 1 (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (198 enodes)
* * [misc]simplify:  iters left: 2 (367 enodes)
* * [misc]simplify:  iters left: 1 (419 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* x -0.001587)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* x -0.001587)))
* * * * [misc]progress:  [ 74 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (/ (* (pow (* x x) 3) (+ (pow (* -0.001587 x) 3) (pow 0.038889 3))) (+ (* (* -0.001587 x) (* -0.001587 x)) (- (* 0.038889 0.038889) (* (* -0.001587 x) 0.038889))))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) (+ (pow (* -0.001587 x) 3) (pow 0.038889 3)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (456 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 0.038889 3) (pow (* x -0.001587) 3)) (pow (* x x) 3))
* [exit]simplify:  Simplified to (* (+ (pow 0.038889 3) (pow (* x -0.001587) 3)) (pow (* x x) 3))
* * * * [misc]progress:  [ 75 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (/ (* (pow (* x x) 3) (- (* (* -0.001587 x) (* -0.001587 x)) (* 0.038889 0.038889))) (- (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) (- (* (* -0.001587 x) (* -0.001587 x)) (* 0.038889 0.038889)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (249 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x -0.001587) 0.038889) (* x x)) (* (* (* x x) (* x x)) (- (* x -0.001587) 0.038889)))
* [exit]simplify:  Simplified to (* (* (+ (* x -0.001587) 0.038889) (* x x)) (* (* (* x x) (* x x)) (- (* x -0.001587) 0.038889)))
* * * * [misc]progress:  [ 76 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (+ (* -0.001587 x) 0.038889) (pow (* x x) 3))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 77 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (284 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (* x x) 3) (* (* x x) 2.5e-05)) (* (pow x 6) (+ 0.038889 (* -0.001587 x)))) (+ (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (+ 1.0 (* -8.0 x)))) (* (+ (* -9.333333 x) 14.0) (* x x)))
* * * * [misc]progress:  [ 78 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (292 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (+ (* x -9.333333) 14.0)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* -8.0 x)) (+ (+ 1.0 (* (pow (/ 1 x) -6) (+ 0.038889 (* x -0.001587)))) (* (pow (* x x) 3) (* (* x x) 2.5e-05))))
* * * * [misc]progress:  [ 79 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (298 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (+ (* (pow (/ -1 x) -6) (+ 0.038889 (* x -0.001587))) (* (* (* x x) 2.5e-05) (pow (* x x) 3)))) (+ (+ (* -8.0 x) (* (* x x) (+ (* x -9.333333) 14.0))) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 80 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (301 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (+ (* (* (* x x) (* x x)) (* (* -0.001587 x) (* x x))) (* 2.5e-05 (* (* x x) (pow x 6)))) (+ (* (* 0.038889 (* x x)) (* (* x x) (* x x))) (* (* x x) (+ (* -9.333333 x) 14.0)))))
* * * * [misc]progress:  [ 81 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (312 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (* x -8.0)) (+ (+ 1.0 (* (* (* x x) (* x x)) (* (* x x) (* x -0.001587)))) (+ (* (* (* x x) (* x x)) (* x (* x 0.038889))) (* (* (* 2.5e-05 x) x) (pow (/ 1 x) -6)))))
* * * * [misc]progress:  [ 82 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* (* (* x x) (* x -0.001587)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (* (* 0.038889 x) x)) (* (* (* 2.5e-05 x) x) (pow (/ -1 x) -6)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (* x -8.0)))
* * * * [misc]progress:  [ 83 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4)))
* * * * [misc]progress:  [ 84 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4)))
* * * * [misc]progress:  [ 85 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4)))
* * * * [misc]progress:  [ 86 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (291 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * * * [misc]progress:  [ 87 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (291 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * * * [misc]progress:  [ 88 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (291 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -8) into (pow (/ 1 x) -8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -8) into (pow (/ -1 x) -8)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* 0 2.916667) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 0.466667)) (* 0 2.916667)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 1 2.916667))))) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 (- 0.466667)) (* 0 2.916667)))))) into (- 0.466667)
* [misc]backup-simplify:  Simplify (- 0.466667) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) (pow x 5)) (* 2.916667 (pow x 4))) into (- (* 2.916667 (pow x 4)) (* 0.466667 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.466667)) into -0.466667
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 2.916667) (* 0 (- 0.466667))) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 (pow (/ 1 (/ 1 x)) 4)) (* -0.466667 (pow (/ 1 (/ 1 x)) 5))) into (- (* 2.916667 (pow x 4)) (* 0.466667 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 1 0.466667) into 0.466667
* [misc]backup-simplify:  Simplify 0.466667 into 0.466667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 2.916667) (* 0 0.466667)) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 2.916667) (* 0 0.466667))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 (pow (/ 1 (/ 1 (- x))) 4)) (* 0.466667 (pow (/ 1 (/ 1 (- x))) 5))) into (- (* 2.916667 (pow x 4)) (* 0.466667 (pow x 5)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* 0 2.916667) into 0
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 0.466667)) (* 0 2.916667)) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 8.0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 8.0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 1 2.916667))))) into 2.916667
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 2.916667 0) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (+ (* 2.916667 (pow x 4)) (+ (* (- 8.0) x) 1.0)) into (- (+ (* 2.916667 (pow x 4)) 1.0) (* 8.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) (+ 1.0 (* -8.0 (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) (+ 1.0 (* -8.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) (+ 1.0 (* -8.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.466667)) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (- 0.466667) into (- 0.466667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 2.916667) (* 0 (- 0.466667))) into 2.916667
* [misc]backup-simplify:  Simplify (+ 2.916667 0) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))))) into 0
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 8.0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 8.0) (/ 1 (/ 1 x))) (+ (* 2.916667 (pow (/ 1 (/ 1 x)) 4)) (* (- 0.466667) (pow (/ 1 (/ 1 x)) 5)))) into (- (* 2.916667 (pow x 4)) (+ (* 0.466667 (pow x 5)) (* 8.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (+ 1.0 (* -8.0 (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (+ 1.0 (* -8.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (+ 1.0 (* -8.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 1 0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify 0.466667 into 0.466667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 2.916667) (* 0 0.466667)) into 2.916667
* [misc]backup-simplify:  Simplify (+ 2.916667 0) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 2.916667) (* 0 0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667))))) into 0
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (+ (* 8.0 (/ 1 (/ 1 (- x)))) (+ (* 2.916667 (pow (/ 1 (/ 1 (- x))) 4)) (* 0.466667 (pow (/ 1 (/ 1 (- x))) 5)))) into (- (* 2.916667 (pow x 4)) (+ (* 0.466667 (pow x 5)) (* 8.0 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (exp (* (log (* x x)) (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 2 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (exp (* (log (* x x)) (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 3 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow x (* 2 (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* 2 (+ 3 1))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* * * * [misc]progress:  [ 4 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (* 1 (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* 1 (+ 3 1))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (+ 3 1)
* [exit]simplify:  Simplified to (+ 3 1)
* * * * [misc]progress:  [ 5 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1)))) (cbrt (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* * * * [misc]progress:  [ 6 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) (sqrt (+ 3 1))) (sqrt (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) (sqrt (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* * * * [misc]progress:  [ 7 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) 1) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 8 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (pow (* x x) 3) (pow (* x x) 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 9 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 10 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) (+ 3 1)) 1)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 11 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (exp (log (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* * * * [misc]progress:  [ 12 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (log (exp (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 13 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1)))) (cbrt (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 14 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (cbrt (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* * * * [misc]progress:  [ 15 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (sqrt (pow (* x x) (+ 3 1))) (sqrt (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 16 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* 1 (pow (* x x) (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 17 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow x (+ 2 2)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 18 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (* x x) (+ 1 1)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 19 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (* x x) 2) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 20 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (* (* x x) (* x x)) 1) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 21 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (* x x) 2) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 22 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (* x x) (+ 1 1)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 23 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (* (* x x) (* x x)) 1) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 24 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (exp (+ (log (* x x)) (log (* x x)))) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 25 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (exp (log (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 26 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (log (exp (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 27 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 28 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 29 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 30 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 31 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* 1 (* (* x x) (* x x))) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 32 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (* x x) x) x) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 33 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x (* x (* x x))) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 34 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 35 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 1) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (223 enodes)
* * [misc]simplify:  iters left: 1 (240 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))
* * * * [misc]progress:  [ 36 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 1) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (223 enodes)
* * [misc]simplify:  iters left: 1 (240 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))
* * * * [misc]progress:  [ 37 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 1) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 38 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (+ (+ (log (* x x)) (log (* x x))) (log (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (log (* x x)) (log (* x x))) (log (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 2.916667 (* x -0.466667))) (+ (log (* x x)) (log (* x x))))
* [exit]simplify:  Simplified to (+ (log (+ 2.916667 (* x -0.466667))) (+ (log (* x x)) (log (* x x))))
* * * * [misc]progress:  [ 39 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (+ (log (* (* x x) (* x x))) (log (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (log (* (* x x) (* x x))) (log (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 2.916667 (* x -0.466667))) (* (+ 3 1) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ 2.916667 (* x -0.466667))) (* (+ 3 1) (log x)))
* * * * [misc]progress:  [ 40 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (log (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* * [misc]simplify:  iters left: 2 (276 enodes)
* * [misc]simplify:  iters left: 1 (307 enodes)
* [exit]simplify:  Simplified to (log (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (log (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 41 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (log (exp (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* * [misc]simplify:  iters left: 2 (359 enodes)
* * [misc]simplify:  iters left: 1 (399 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ (* -0.466667 x) 2.916667))
* * * * [misc]progress:  [ 42 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (cbrt (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (* (pow (+ 2.916667 (* -0.466667 x)) 3) (pow (* (* x x) (* x x)) 3))
* [exit]simplify:  Simplified to (* (pow (+ 2.916667 (* -0.466667 x)) 3) (pow (* (* x x) (* x x)) 3))
* * * * [misc]progress:  [ 43 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (cbrt (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (* (pow (+ 2.916667 (* -0.466667 x)) 3) (pow (* (* x x) (* x x)) 3))
* [exit]simplify:  Simplified to (* (pow (+ 2.916667 (* -0.466667 x)) 3) (pow (* (* x x) (* x x)) 3))
* * * * [misc]progress:  [ 44 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* * [misc]simplify:  iters left: 1 (210 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [enter]simplify:  Simplifying (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (201 enodes)
* * [misc]simplify:  iters left: 1 (220 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 45 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (cbrt (* (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 3)
* [exit]simplify:  Simplified to (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 3)
* * * * [misc]progress:  [ 46 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (201 enodes)
* * [misc]simplify:  iters left: 1 (220 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (201 enodes)
* * [misc]simplify:  iters left: 1 (220 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 47 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* 1 (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 48 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* (* x x) (* x x)) (* -0.466667 x)) (* (* (* x x) (* x x)) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (* -0.466667 x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (70 enodes)
* * [misc]simplify:  iters left: 1 (73 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* -0.466667 x)) (* x x))
* [exit]simplify:  Simplified to (* (* (* x x) (* -0.466667 x)) (* x x))
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) 2.916667)
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (56 enodes)
* [exit]simplify:  Simplified to (* (* 2.916667 x) (pow x 3))
* [exit]simplify:  Simplified to (* (* 2.916667 x) (pow x 3))
* * * * [misc]progress:  [ 49 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -0.466667 x) (* (* x x) (* x x))) (* 2.916667 (* (* x x) (* x x)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* -0.466667 x) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* -0.466667 x))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* -0.466667 x))
* [enter]simplify:  Simplifying (* 2.916667 (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* 2.916667 x) (pow x 3))
* [exit]simplify:  Simplified to (* (* 2.916667 x) (pow x 3))
* * * * [misc]progress:  [ 50 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (cbrt (+ (* -0.466667 x) 2.916667)) (cbrt (+ (* -0.466667 x) 2.916667)))) (cbrt (+ (* -0.466667 x) 2.916667))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (* (cbrt (+ (* -0.466667 x) 2.916667)) (cbrt (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (76 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -0.466667 x) 2.916667)) (* x x)) (* (cbrt (+ (* -0.466667 x) 2.916667)) (* x x)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -0.466667 x) 2.916667)) (* x x)) (* (cbrt (+ (* -0.466667 x) 2.916667)) (* x x)))
* * * * [misc]progress:  [ 51 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (* x x) (* x x)) (sqrt (+ (* -0.466667 x) 2.916667))) (sqrt (+ (* -0.466667 x) 2.916667))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (sqrt (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (56 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (sqrt (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 52 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (* x x) (* x x)) 1) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) 1)
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 53 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (* (* x x) (+ (* -0.466667 x) 2.916667))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* -0.466667 x) 2.916667))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.466667) 2.916667) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -0.466667) 2.916667) (* x x))
* * * * [misc]progress:  [ 54 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (/ (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (pow (* -0.466667 x) 3)) (* (* (* x x) (* 2.916667 x)) (* 2.916667 (* 2.916667 x))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (pow (* -0.466667 x) 3)) (* (* (* x x) (* 2.916667 x)) (* 2.916667 (* 2.916667 x))))
* * * * [misc]progress:  [ 55 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (/ (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (- (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (269 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 56 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 57 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (log (* (exp (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (exp (+ 1.0 (* -8.0 x))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (exp (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (exp (+ 1.0 (* -8.0 x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (315 enodes)
* [exit]simplify:  Simplified to (* (exp (+ (* x -8.0) 1.0)) (pow (pow (exp x) (pow x 3)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (exp (+ (* x -8.0) 1.0)) (pow (pow (exp x) (pow x 3)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 58 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) 1) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 59 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (log (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* * [misc]simplify:  iters left: 2 (367 enodes)
* * [misc]simplify:  iters left: 1 (448 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 60 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (log (exp (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp x) (pow x 3)) (+ (* -0.466667 x) 2.916667)) (exp (+ 1.0 (* -8.0 x))))
* [exit]simplify:  Simplified to (* (pow (pow (exp x) (pow x 3)) (+ (* -0.466667 x) 2.916667)) (exp (+ 1.0 (* -8.0 x))))
* * * * [misc]progress:  [ 61 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (cbrt (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))) (cbrt (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))) (cbrt (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))) (cbrt (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* * [misc]simplify:  iters left: 2 (366 enodes)
* * [misc]simplify:  iters left: 1 (438 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (cbrt (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (cbrt (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* * [misc]simplify:  iters left: 2 (367 enodes)
* * [misc]simplify:  iters left: 1 (448 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 62 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (254 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) 3)
* * * * [misc]progress:  [ 63 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (sqrt (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))) (sqrt (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* * [misc]simplify:  iters left: 2 (367 enodes)
* * [misc]simplify:  iters left: 1 (448 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [enter]simplify:  Simplifying (sqrt (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* * [misc]simplify:  iters left: 2 (367 enodes)
* * [misc]simplify:  iters left: 1 (448 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 64 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (+ (* 1.0 1.0) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (* -8.0 x))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* 1.0 1.0) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (* -8.0 x)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (+ (* 1.0 1.0) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (* -8.0 x))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (105 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* -0.466667 x) (* -0.466667 x)) (* (* -0.466667 x) (* x x))) (* (* x x) (pow 2.916667 3))) (+ (* (- (* -8.0 x) 1.0) (* (* -8.0 x) (* x x))) (* (* 1.0 1.0) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* -0.466667 x) (* -0.466667 x)) (* (* -0.466667 x) (* x x))) (* (* x x) (pow 2.916667 3))) (+ (* (- (* -8.0 x) 1.0) (* (* -8.0 x) (* x x))) (* (* 1.0 1.0) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))))
* [enter]simplify:  Simplifying (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* 1.0 1.0) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (* -8.0 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (* (+ (* (- (* x -8.0) 1.0) (* x -8.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (+ (* (- (* x -8.0) 1.0) (* x -8.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 65 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (- 1.0 (* -8.0 x))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* 1.0 1.0) (* (* -8.0 x) (* -8.0 x))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- 1.0 (* -8.0 x)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (- 1.0 (* -8.0 x))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* 1.0 1.0) (* (* -8.0 x) (* -8.0 x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (249 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- 1.0 (* -8.0 x)) (* (* x x) (* x x))) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)) (* (+ 1.0 (* -8.0 x)) (- 1.0 (* -8.0 x)))))
* [exit]simplify:  Simplified to (+ (* (* (- 1.0 (* -8.0 x)) (* (* x x) (* x x))) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)) (* (+ 1.0 (* -8.0 x)) (- 1.0 (* -8.0 x)))))
* [enter]simplify:  Simplifying (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- 1.0 (* -8.0 x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)) (- 1.0 (* -8.0 x)))
* [exit]simplify:  Simplified to (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)) (- 1.0 (* -8.0 x)))
* * * * [misc]progress:  [ 66 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (+ (* 1.0 1.0) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (* -8.0 x))))) (* (- (* -0.466667 x) 2.916667) (+ (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (- (* -0.466667 x) 2.916667) (+ (* 1.0 1.0) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (* -8.0 x)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (* (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (+ (* 1.0 1.0) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (* -8.0 x))))) (* (- (* -0.466667 x) 2.916667) (+ (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))
* [enter]simplify:  Simplifying (* (- (* -0.466667 x) 2.916667) (+ (* 1.0 1.0) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (* -8.0 x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * * * [misc]progress:  [ 67 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (- 1.0 (* -8.0 x))) (* (- (* -0.466667 x) 2.916667) (- (* 1.0 1.0) (* (* -8.0 x) (* -8.0 x))))) (* (- (* -0.466667 x) 2.916667) (- 1.0 (* -8.0 x)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (* (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (- 1.0 (* -8.0 x))) (* (- (* -0.466667 x) 2.916667) (- (* 1.0 1.0) (* (* -8.0 x) (* -8.0 x)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* x -8.0) 1.0) (* (- (* -0.466667 x) 2.916667) (- 1.0 (* x -8.0)))) (* (* (- 1.0 (* x -8.0)) (* (* x x) (* x x))) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (+ (* (+ (* x -8.0) 1.0) (* (- (* -0.466667 x) 2.916667) (- 1.0 (* x -8.0)))) (* (* (- 1.0 (* x -8.0)) (* (* x x) (* x x))) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))))
* [enter]simplify:  Simplifying (* (- (* -0.466667 x) 2.916667) (- 1.0 (* -8.0 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* [exit]simplify:  Simplified to (* (- 1.0 (* -8.0 x)) (- (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (* (- 1.0 (* -8.0 x)) (- (* -0.466667 x) 2.916667))
* * * * [misc]progress:  [ 68 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 3) (pow (+ 1.0 (* -8.0 x)) 3)) (+ (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (- (* (+ 1.0 (* -8.0 x)) (+ 1.0 (* -8.0 x))) (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 3) (pow (+ 1.0 (* -8.0 x)) 3))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 3) (pow (+ (* x -8.0) 1.0) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 3) (pow (+ (* x -8.0) 1.0) 3))
* [enter]simplify:  Simplifying (+ (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (- (* (+ 1.0 (* -8.0 x)) (+ 1.0 (* -8.0 x))) (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (313 enodes)
* [exit]simplify:  Simplified to (- (* (+ (* x -8.0) 1.0) (+ (* x -8.0) 1.0)) (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (- (+ (* x -8.0) 1.0) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (- (* (+ (* x -8.0) 1.0) (+ (* x -8.0) 1.0)) (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (- (+ (* x -8.0) 1.0) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 69 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 1 (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 70 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (- (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* (+ 1.0 (* -8.0 x)) (+ 1.0 (* -8.0 x)))) (- (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (- (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* (+ 1.0 (* -8.0 x)) (+ 1.0 (* -8.0 x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (- (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* (+ (* x -8.0) 1.0) (+ (* x -8.0) 1.0)))
* [exit]simplify:  Simplified to (- (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* (+ (* x -8.0) 1.0) (+ (* x -8.0) 1.0)))
* [enter]simplify:  Simplifying (- (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (263 enodes)
* * [misc]simplify:  iters left: 2 (450 enodes)
* [exit]simplify:  Simplified to (- (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))
* [exit]simplify:  Simplified to (- (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))
* * * * [misc]progress:  [ 71 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 1.0) (* -8.0 x)) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 1.0)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (280 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (+ 1.0 (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 72 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* -0.466667 x)) (+ (* (* (* x x) (* x x)) 2.916667) (+ 1.0 (* -8.0 x)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (* (* (* x x) (* x x)) 2.916667) (+ 1.0 (* -8.0 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (106 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* 2.916667 x)) (+ 1.0 (* x -8.0)))
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* 2.916667 x)) (+ 1.0 (* x -8.0)))
* * * * [misc]progress:  [ 73 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* -0.466667 x) (* (* x x) (* x x))) (+ (* 2.916667 (* (* x x) (* x x))) (+ 1.0 (* -8.0 x)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (* 2.916667 (* (* x x) (* x x))) (+ 1.0 (* -8.0 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (94 enodes)
* [exit]simplify:  Simplified to (+ (* (* 2.916667 x) (pow x 3)) (+ 1.0 (* -8.0 x)))
* [exit]simplify:  Simplified to (+ (* (* 2.916667 x) (pow x 3)) (+ 1.0 (* -8.0 x)))
* * * * [misc]progress:  [ 74 / 86 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1.0 (* -8.0 x)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 75 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow x 8)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow x 8)))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (267 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 14.0 (* -9.333333 x)) (* x x)) (- (* (pow x 6) 0.038889) (* 0.001587 (pow x 7)))) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (* 2.5e-05 (pow x 8)))))
* * * * [misc]progress:  [ 76 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ 1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ 1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (271 enodes)
* [exit]simplify:  Simplified to (- (+ (* (+ (* x -9.333333) 14.0) (* x x)) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ (* (pow x 6) 0.038889) (+ 1.0 (* -8.0 x))))) (- (* 0.001587 (pow x 7)) (* 2.5e-05 (pow (/ 1 x) -8))))
* * * * [misc]progress:  [ 77 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ -1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ -1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (269 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (- (* (pow x 6) 0.038889) (* 0.001587 (pow x 7)))) (+ (+ 1.0 (* -8.0 x)) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* 2.5e-05 (pow (/ -1 x) -8)))))
* * * * [misc]progress:  [ 78 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (pow x 4) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (pow x 4) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* x x) (+ (* x -9.333333) 14.0)) (+ (* (pow x 4) (+ (* -0.466667 x) 2.916667)) (+ (* (pow x 6) 0.038889) (+ 1.0 (* -8.0 x))))) (- (* 0.001587 (pow x 7)) (* (pow (* x x) (+ 1 3)) 2.5e-05)))
* * * * [misc]progress:  [ 79 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (pow x 4) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (pow x 4) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* x x) (+ (* x -9.333333) 14.0)) (+ (* (pow x 4) (+ (* -0.466667 x) 2.916667)) (+ (* (pow x 6) 0.038889) (+ 1.0 (* -8.0 x))))) (- (* 0.001587 (pow x 7)) (* (pow (* x x) (+ 1 3)) 2.5e-05)))
* * * * [misc]progress:  [ 80 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (pow x 4) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (pow x 4) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* x x) (+ (* x -9.333333) 14.0)) (+ (* (pow x 4) (+ (* -0.466667 x) 2.916667)) (+ (* (pow x 6) 0.038889) (+ 1.0 (* -8.0 x))))) (- (* 0.001587 (pow x 7)) (* (pow (* x x) (+ 1 3)) 2.5e-05)))
* * * * [misc]progress:  [ 81 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (- (* 2.916667 (pow x 4)) (* 0.466667 (pow x 5))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (- (* 2.916667 (pow x 4)) (* 0.466667 (pow x 5))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (+ (+ (- (* 0.038889 (pow x 6)) (* (pow x 7) 0.001587)) (* (pow (* x x) (+ 1 3)) 2.5e-05)) (+ (- (* (pow x 4) 2.916667) (- (* 0.466667 (pow x 5)) 1.0)) (+ (* x -8.0) (* (* x x) (+ (* -9.333333 x) 14.0)))))
* * * * [misc]progress:  [ 82 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (- (* 2.916667 (pow x 4)) (* 0.466667 (pow x 5))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (- (* 2.916667 (pow x 4)) (* 0.466667 (pow x 5))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (+ (+ (- (* 0.038889 (pow x 6)) (* (pow x 7) 0.001587)) (* (pow (* x x) (+ 1 3)) 2.5e-05)) (+ (- (* (pow x 4) 2.916667) (- (* 0.466667 (pow x 5)) 1.0)) (+ (* x -8.0) (* (* x x) (+ (* -9.333333 x) 14.0)))))
* * * * [misc]progress:  [ 83 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (- (* 2.916667 (pow x 4)) (* 0.466667 (pow x 5))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (- (* 2.916667 (pow x 4)) (* 0.466667 (pow x 5))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (+ (+ (- (* 0.038889 (pow x 6)) (* (pow x 7) 0.001587)) (* (pow (* x x) (+ 1 3)) 2.5e-05)) (+ (- (* (pow x 4) 2.916667) (- (* 0.466667 (pow x 5)) 1.0)) (+ (* x -8.0) (* (* x x) (+ (* -9.333333 x) 14.0)))))
* * * * [misc]progress:  [ 84 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (+ (* 2.916667 (pow x 4)) 1.0) (* 8.0 x)) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (- (+ (* 2.916667 (pow x 4)) 1.0) (* 8.0 x)) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (202 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 4) 2.916667) (- 1.0 (* 8.0 x))) (* (* x x) (+ 14.0 (* x -9.333333)))) (+ (- (* (pow x 6) 0.038889) (* 0.001587 (pow x 7))) (* (pow (* x x) (+ 3 1)) 2.5e-05)))
* * * * [misc]progress:  [ 85 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 2.916667 (pow x 4)) (+ (* 0.466667 (pow x 5)) (* 8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 2.916667 (pow x 4)) (+ (* 0.466667 (pow x 5)) (* 8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* [exit]simplify:  Simplified to (+ (- (* (pow x 6) 0.038889) (* 0.001587 (pow x 7))) (+ (+ (* (pow (* x x) (+ 1 3)) 2.5e-05) (* (* x x) (+ (* -9.333333 x) 14.0))) (- (- (* (pow x 4) 2.916667) (* 8.0 x)) (* 0.466667 (pow x 5)))))
* * * * [misc]progress:  [ 86 / 86 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 2.916667 (pow x 4)) (+ (* 0.466667 (pow x 5)) (* 8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 2.916667 (pow x 4)) (+ (* 0.466667 (pow x 5)) (* 8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* [exit]simplify:  Simplified to (+ (- (* (pow x 6) 0.038889) (* 0.001587 (pow x 7))) (+ (+ (* (pow (* x x) (+ 1 3)) 2.5e-05) (* (* x x) (+ (* -9.333333 x) 14.0))) (- (- (* (pow x 4) 2.916667) (* 8.0 x)) (* 0.466667 (pow x 5)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 1 1 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -8) into (pow (/ 1 x) -8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -8) into (pow (/ -1 x) -8)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* 0 2.916667) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 0.466667)) (* 0 2.916667)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 1 2.916667))))) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 (- 0.466667)) (* 0 2.916667)))))) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* 0 2.916667) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 0.466667)) (* 0 2.916667)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 1 2.916667))))) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 (- 0.466667)) (* 0 2.916667)))))) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* 0 2.916667) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 0.466667)) (* 0 2.916667)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 1 2.916667))))) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 (- 0.466667)) (* 0 2.916667)))))) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* 0 2.916667) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 0.466667)) (* 0 2.916667)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 1 2.916667))))) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 (- 0.466667)) (* 0 2.916667)))))) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) (sqrt 2.916667)) into (pow (sqrt 2.916667) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 2.916667) 2) into (pow (sqrt 2.916667) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (/ -0.2333335 (sqrt 2.916667))) (* (/ -0.2333335 (sqrt 2.916667)) (sqrt 2.916667))) into (- 0.466667)
* [misc]backup-simplify:  Simplify (- 0.466667) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (/ -0.027222261111125 (pow (sqrt 2.916667) 3))) (+ (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.2333335 (sqrt 2.916667))) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) (sqrt 2.916667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))) (+ (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3))) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) (/ -0.2333335 (sqrt 2.916667))) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) (sqrt 2.916667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))) (+ (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3))) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) (/ -0.2333335 (sqrt 2.916667))) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) (sqrt 2.916667)))))) into (* 2.168404344971009e-19 (/ 1 (pow (sqrt 2.916667) 6)))
* [misc]backup-simplify:  Simplify (* 2.168404344971009e-19 (/ 1 (pow (sqrt 2.916667) 6))) into (/ 2.168404344971009e-19 (pow (sqrt 2.916667) 6))
* [misc]backup-simplify:  Simplify (+ (* (/ 2.168404344971009e-19 (pow (sqrt 2.916667) 6)) (pow x 8)) (+ (* (- 0.466667) (pow x 5)) (* (pow (sqrt 2.916667) 2) (pow x 4)))) into (- (+ (* 2.168404344971009e-19 (/ (pow x 8) (pow (sqrt 2.916667) 6))) (* (pow (sqrt 2.916667) 2) (pow x 4))) (* 0.466667 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667))) (sqrt (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667))) (sqrt (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.466667)) into -0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ -0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.466667)) into -0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ -0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667))) (sqrt (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.466667)) into -0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ -0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.466667)) into -0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ -0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 +nan.0) (* +nan.0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 2.916667) (* 0 (- 0.466667))) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 2.916667) (* 0 (- 0.466667))) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 +nan.0) (+ (* +nan.0 +nan.0) (* +nan.0 0))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 +nan.0) (+ (* +nan.0 +nan.0) (+ (* +nan.0 +nan.0) (* +nan.0 0)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667))))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 +nan.0) (+ (* +nan.0 +nan.0) (+ (* +nan.0 +nan.0) (+ (* +nan.0 +nan.0) (* +nan.0 0))))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (* (- +nan.0) (pow (/ 1 (/ 1 x)) 2)) (+ (* (- +nan.0) (pow (/ 1 (/ 1 x)) 3)) (* (- +nan.0) (pow (/ 1 (/ 1 x)) 4)))) into (- (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 4)) (- (* +nan.0 (pow x 3)))))))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667))) (sqrt (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667))) (sqrt (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 1 0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 1 0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667))) (sqrt (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 1 0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (sqrt (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 1 0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 +nan.0) (* +nan.0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 2.916667) (* 0 0.466667)) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 2.916667) (* 0 0.466667)) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 +nan.0) (+ (* +nan.0 +nan.0) (* +nan.0 0))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 2.916667) (* 0 0.466667))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 2.916667) (* 0 0.466667))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 +nan.0) (+ (* +nan.0 +nan.0) (+ (* +nan.0 +nan.0) (* +nan.0 0)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667)))) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 +nan.0) (+ (* +nan.0 +nan.0) (+ (* +nan.0 +nan.0) (+ (* +nan.0 +nan.0) (* +nan.0 0))))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (* (- +nan.0) (pow (/ 1 (/ 1 (- x))) 2)) (+ (* (- +nan.0) (pow (/ 1 (/ 1 (- x))) 3)) (* (- +nan.0) (pow (/ 1 (/ 1 (- x))) 4)))) into (- (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 4)) (- (* +nan.0 (pow x 3)))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 1 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (exp (* (log (* x x)) (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 2 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (exp (* (log (* x x)) (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 3 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow x (* 2 (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* 2 (+ 3 1))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* * * * [misc]progress:  [ 4 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (* 1 (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* 1 (+ 3 1))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (+ 3 1)
* [exit]simplify:  Simplified to (+ 3 1)
* * * * [misc]progress:  [ 5 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1)))) (cbrt (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* * * * [misc]progress:  [ 6 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) (sqrt (+ 3 1))) (sqrt (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) (sqrt (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* * * * [misc]progress:  [ 7 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) 1) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 8 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (pow (* x x) 3) (pow (* x x) 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 9 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 10 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) (+ 3 1)) 1)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 11 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (exp (log (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* * * * [misc]progress:  [ 12 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (log (exp (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 13 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1)))) (cbrt (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 14 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (cbrt (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* * * * [misc]progress:  [ 15 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (sqrt (pow (* x x) (+ 3 1))) (sqrt (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 16 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* 1 (pow (* x x) (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 17 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1/2 1/2)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1/2 1/2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* * * * [misc]progress:  [ 18 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (+ 1 1)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 19 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) 1/2) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 20 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) 1) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (162 enodes)
* * [misc]simplify:  iters left: 2 (195 enodes)
* * [misc]simplify:  iters left: 1 (201 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))
* * * * [misc]progress:  [ 21 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) 2) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 22 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (+ 1 1)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 23 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) 1) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 24 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (+ (log (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (log (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (log (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (log (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (164 enodes)
* * [misc]simplify:  iters left: 2 (226 enodes)
* * [misc]simplify:  iters left: 1 (237 enodes)
* [exit]simplify:  Simplified to (+ (log (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (log (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (+ (log (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (log (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 25 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (log (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (174 enodes)
* * [misc]simplify:  iters left: 2 (206 enodes)
* * [misc]simplify:  iters left: 1 (209 enodes)
* [exit]simplify:  Simplified to (log (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (log (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 26 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (log (exp (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* * [misc]simplify:  iters left: 1 (367 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ (* -0.466667 x) 2.916667))
* * * * [misc]progress:  [ 27 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (cbrt (* (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* [exit]simplify:  Simplified to (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 3)
* [exit]simplify:  Simplified to (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 3)
* * * * [misc]progress:  [ 28 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (cbrt (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))) (cbrt (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (cbrt (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (250 enodes)
* * [misc]simplify:  iters left: 1 (279 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [enter]simplify:  Simplifying (cbrt (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (167 enodes)
* * [misc]simplify:  iters left: 2 (223 enodes)
* * [misc]simplify:  iters left: 1 (242 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (cbrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 29 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (cbrt (* (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 3)
* [exit]simplify:  Simplified to (pow (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) 3)
* * * * [misc]progress:  [ 30 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (sqrt (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 31 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (sqrt (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (250 enodes)
* * [misc]simplify:  iters left: 1 (279 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [enter]simplify:  Simplifying (sqrt (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (250 enodes)
* * [misc]simplify:  iters left: 1 (279 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 32 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 33 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (/ (* (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)))) (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (sqrt (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (sqrt (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)))) (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (+ (* (* 2.916667 (* 2.916667 x)) (* (* 2.916667 x) (* x x))) (* (* (* x x) (* x x)) (pow (* -0.466667 x) 3)))
* [exit]simplify:  Simplified to (+ (* (* 2.916667 (* 2.916667 x)) (* (* 2.916667 x) (* x x))) (* (* (* x x) (* x x)) (pow (* -0.466667 x) 3)))
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (sqrt (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (153 enodes)
* * [misc]simplify:  iters left: 1 (220 enodes)
* [exit]simplify:  Simplified to (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 34 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (/ (* (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)))) (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (sqrt (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (sqrt (- (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)))) (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* x x) (* x x)))) (sqrt (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (* (sqrt (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* x x) (* x x)))) (sqrt (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* x x) (* x x)))))
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (sqrt (- (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (216 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- (* -0.466667 x) 2.916667)) (sqrt (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (sqrt (- (* -0.466667 x) 2.916667)) (sqrt (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 35 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (/ (* (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (sqrt (- (* -0.466667 x) 2.916667)) (sqrt (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (sqrt (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (* (sqrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (sqrt (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* x x) (* x x)))))
* [enter]simplify:  Simplifying (* (sqrt (- (* -0.466667 x) 2.916667)) (sqrt (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (152 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (sqrt (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (sqrt (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (sqrt (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 36 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (/ (* (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))) (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (sqrt (- (* -0.466667 x) 2.916667)) (sqrt (- (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))) (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (277 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* [enter]simplify:  Simplifying (* (sqrt (- (* -0.466667 x) 2.916667)) (sqrt (- (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (- (* -0.466667 x) 2.916667)
* [exit]simplify:  Simplified to (- (* -0.466667 x) 2.916667)
* * * * [misc]progress:  [ 37 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* 1 (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 38 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))) (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* * [misc]simplify:  iters left: 2 (220 enodes)
* * [misc]simplify:  iters left: 1 (223 enodes)
* [exit]simplify:  Simplified to (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 39 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* x x) (* x x)))) (sqrt (+ (* -0.466667 x) 2.916667))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (179 enodes)
* * [misc]simplify:  iters left: 2 (228 enodes)
* * [misc]simplify:  iters left: 1 (255 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (fabs (* x x)))
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (fabs (* x x)))
* * * * [misc]progress:  [ 40 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (sqrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (161 enodes)
* * [misc]simplify:  iters left: 2 (196 enodes)
* * [misc]simplify:  iters left: 1 (199 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 41 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) 1) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) 1)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (173 enodes)
* * [misc]simplify:  iters left: 2 (203 enodes)
* * [misc]simplify:  iters left: 1 (212 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 42 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (* (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (161 enodes)
* * [misc]simplify:  iters left: 2 (196 enodes)
* * [misc]simplify:  iters left: 1 (199 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (cbrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 43 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* x x) (* x x))) (* (sqrt (+ (* -0.466667 x) 2.916667)) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* -0.466667 x) 2.916667)) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (208 enodes)
* * [misc]simplify:  iters left: 1 (223 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 44 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (* (sqrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (161 enodes)
* * [misc]simplify:  iters left: 2 (196 enodes)
* * [misc]simplify:  iters left: 1 (199 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 45 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* 1 (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (162 enodes)
* * [misc]simplify:  iters left: 2 (195 enodes)
* * [misc]simplify:  iters left: 1 (201 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))
* * * * [misc]progress:  [ 46 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (/ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (sqrt (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (407 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* (* x x) (* x x)) (pow (* -0.466667 x) 3)) (* (* 2.916667 (* 2.916667 x)) (* (* x x) (* 2.916667 x))))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* (* x x) (* x x)) (pow (* -0.466667 x) 3)) (* (* 2.916667 (* 2.916667 x)) (* (* x x) (* 2.916667 x))))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 47 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (/ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (sqrt (- (* -0.466667 x) 2.916667))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* * [misc]simplify:  iters left: 3 (384 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (sqrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 48 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (/ (* (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (sqrt (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (403 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (sqrt (+ (* (* 2.916667 (* x x)) (* (* 2.916667 2.916667) (* x x))) (* (* (* x x) (* x x)) (pow (* -0.466667 x) 3)))))
* [exit]simplify:  Simplified to (* (sqrt (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (sqrt (+ (* (* 2.916667 (* x x)) (* (* 2.916667 2.916667) (* x x))) (* (* (* x x) (* x x)) (pow (* -0.466667 x) 3)))))
* * * * [misc]progress:  [ 49 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (/ (* (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (sqrt (- (* -0.466667 x) 2.916667))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (sqrt (* (* (* x x) (* x x)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* * [misc]simplify:  iters left: 3 (384 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x)))) (sqrt (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (* (sqrt (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x)))) (sqrt (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 50 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 51 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow x (+ 2 2)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 52 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow (* x x) (+ 1 1)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 53 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow (* x x) 2) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 54 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow (* (* x x) (* x x)) 1) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 55 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow (* x x) 2) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 56 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow (* x x) (+ 1 1)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 57 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow (* (* x x) (* x x)) 1) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 58 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (exp (+ (log (* x x)) (log (* x x)))) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 59 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (exp (log (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 60 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (log (exp (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 61 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 62 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 63 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 64 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 65 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* 1 (* (* x x) (* x x))) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 66 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* (* x x) x) x) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 67 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* x (* x (* x x))) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 68 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 69 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (pow x (+ 2 2)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 70 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (pow (* x x) (+ 1 1)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 71 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (pow (* x x) 2) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 72 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (pow (* (* x x) (* x x)) 1) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 73 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (pow (* x x) 2) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 74 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (pow (* x x) (+ 1 1)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 75 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (pow (* (* x x) (* x x)) 1) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 76 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (exp (+ (log (* x x)) (log (* x x)))) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 77 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (exp (log (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 78 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (log (exp (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 79 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 80 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 81 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 82 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 83 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* 1 (* (* x x) (* x x))) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 84 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* (* x x) x) x) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 85 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* x (* x (* x x))) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 86 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 87 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow x 8)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow x 8)))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (270 enodes)
* [exit]simplify:  Simplified to (+ (+ (- (* 0.038889 (pow x 6)) (* (pow x 7) 0.001587)) (* (+ (* x -9.333333) 14.0) (* x x))) (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ (* 2.5e-05 (pow x 8)) (+ (* x -8.0) 1.0))))
* * * * [misc]progress:  [ 88 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ 1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ 1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (274 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (+ (* x -9.333333) 14.0) (* x x))) (+ (* 0.038889 (pow x 6)) (+ (* x -8.0) 1.0))) (- (* (pow x 7) 0.001587) (* 2.5e-05 (pow (/ 1 x) -8))))
* * * * [misc]progress:  [ 89 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ -1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ -1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (272 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* x -8.0) 1.0) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (- (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* 0.038889 (pow x 6))) (- (* (pow x 7) 0.001587) (* 2.5e-05 (pow (/ -1 x) -8)))))
* * * * [misc]progress:  [ 90 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (- (+ (* 2.168404344971009e-19 (/ (pow x 8) (pow (sqrt 2.916667) 6))) (* (pow (sqrt 2.916667) 2) (pow x 4))) (* 0.466667 (pow x 5))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (- (+ (* 2.168404344971009e-19 (/ (pow x 8) (pow (sqrt 2.916667) 6))) (* (pow (sqrt 2.916667) 2) (pow x 4))) (* 0.466667 (pow x 5))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (274 enodes)
* [exit]simplify:  Simplified to (+ (- (+ (/ (* (pow x 8) 2.168404344971009e-19) (pow (sqrt 2.916667) 6)) (* 2.916667 (pow x 4))) (- (- (* 0.466667 (pow x 5)) (+ (* -8.0 x) 1.0)) (* (+ (* -9.333333 x) 14.0) (* x x)))) (+ (* 2.5e-05 (pow (* x x) (+ 3 1))) (- (* 0.038889 (pow x 6)) (* (pow x 7) 0.001587))))
* * * * [misc]progress:  [ 91 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (- (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 4)) (- (* +nan.0 (pow x 3))))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (- (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 4)) (- (* +nan.0 (pow x 3))))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * * * [misc]progress:  [ 92 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (- (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 4)) (- (* +nan.0 (pow x 3))))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (- (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 4)) (- (* +nan.0 (pow x 3))))))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * * * [misc]progress:  [ 93 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (272 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667)))) (+ (- (+ (+ (* -8.0 x) 1.0) (* (pow x 6) 0.038889)) (* 0.001587 (pow x 7))) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (* 2.5e-05 (pow (* x x) (+ 1 3))))))
* * * * [misc]progress:  [ 94 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (272 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667)))) (+ (- (+ (+ (* -8.0 x) 1.0) (* (pow x 6) 0.038889)) (* 0.001587 (pow x 7))) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (* 2.5e-05 (pow (* x x) (+ 1 3))))))
* * * * [misc]progress:  [ 95 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (272 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667)))) (+ (- (+ (+ (* -8.0 x) 1.0) (* (pow x 6) 0.038889)) (* 0.001587 (pow x 7))) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (* 2.5e-05 (pow (* x x) (+ 1 3))))))
* * * * [misc]progress:  [ 96 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ (- (+ (+ (* -8.0 x) 1.0) (* (pow x 6) 0.038889)) (* 0.001587 (pow x 7))) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (* 2.5e-05 (pow (* x x) (+ 1 3))))))
* * * * [misc]progress:  [ 97 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ (- (+ (+ (* -8.0 x) 1.0) (* (pow x 6) 0.038889)) (* 0.001587 (pow x 7))) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (* 2.5e-05 (pow (* x x) (+ 1 3))))))
* * * * [misc]progress:  [ 98 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ 1.0 (* -8.0 x))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (* (pow x 4) (+ (* -0.466667 x) 2.916667))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)))) (+ (- (+ (+ (* -8.0 x) 1.0) (* (pow x 6) 0.038889)) (* 0.001587 (pow x 7))) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (* 2.5e-05 (pow (* x x) (+ 1 3))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1 1 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 1 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -8) into (pow (/ 1 x) -8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -8) into (pow (/ -1 x) -8)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -8.0 x) 1.0) (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 x) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 1.0 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow 1.0 3) (pow (* -8.0 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 1.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 3 (log 1.0)) into (* 3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 1.0))) into (pow 1.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* -8.0 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* -8.0 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* -8.0 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 8.0))) into (+ (log x) (log (- 8.0)))
* [misc]backup-simplify:  Simplify (* 3 (+ (log x) (log (- 8.0)))) into (* 3 (+ (log x) (log (- 8.0))))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log x) (log (- 8.0))))) into (exp (* 3 (+ (log x) (log (- 8.0)))))
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -8.0 x) (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 1.0 (- (* -8.0 x) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 x) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (* (- 1.0) 0) into 0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* (- 2.916667) 2.916667) into -8.506946388889
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -8.506946388889 0) into 0
* [misc]backup-simplify:  Simplify (* 1.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (pow 1.0 3) (exp (* 3 (+ (log x) (log (- 8.0)))))) into (+ 1.0 (exp (* 3 (+ (log x) (log (- 8.0))))))
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (* (+ 1.0 (exp (* 3 (+ (log x) (log (- 8.0)))))) (- 2.916667)) into (* -2.916667 (+ 1.0 (exp (* 3 (+ (log x) (log (- 8.0)))))))
* [misc]backup-simplify:  Simplify (+ 0 (* -2.916667 (+ 1.0 (exp (* 3 (+ (log x) (log (- 8.0)))))))) into (- (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (* 1.0 (- 1.0)) into -1.0
* [misc]backup-simplify:  Simplify (- -1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* (- 2.916667) 1.0) into -2.916667
* [misc]backup-simplify:  Simplify (/ (- (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0)))))))) -2.916667) into (* 0.3428571036734739 (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]taylor:  Taking taylor expansion of (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -8.0 x) 1.0) (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 x) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 1.0 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow 1.0 3) (pow (* -8.0 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 1.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 3 (log 1.0)) into (* 3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 1.0))) into (pow 1.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* -8.0 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* -8.0 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* -8.0 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (log (- 8.0)) into (log (- 8.0))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 8.0))) into (+ (log x) (log (- 8.0)))
* [misc]backup-simplify:  Simplify (* 3 (+ (log x) (log (- 8.0)))) into (* 3 (+ (log x) (log (- 8.0))))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log x) (log (- 8.0))))) into (exp (* 3 (+ (log x) (log (- 8.0)))))
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -8.0 x) (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 1.0 (- (* -8.0 x) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 x) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (* (- 1.0) 0) into 0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* (- 2.916667) 2.916667) into -8.506946388889
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -8.506946388889 0) into 0
* [misc]backup-simplify:  Simplify (* 1.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (pow 1.0 3) (exp (* 3 (+ (log x) (log (- 8.0)))))) into (+ 1.0 (exp (* 3 (+ (log x) (log (- 8.0))))))
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (* (+ 1.0 (exp (* 3 (+ (log x) (log (- 8.0)))))) (- 2.916667)) into (* -2.916667 (+ 1.0 (exp (* 3 (+ (log x) (log (- 8.0)))))))
* [misc]backup-simplify:  Simplify (+ 0 (* -2.916667 (+ 1.0 (exp (* 3 (+ (log x) (log (- 8.0)))))))) into (- (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (* 1.0 (- 1.0)) into -1.0
* [misc]backup-simplify:  Simplify (- -1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* (- 2.916667) 1.0) into -2.916667
* [misc]backup-simplify:  Simplify (/ (- (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0)))))))) -2.916667) into (* 0.3428571036734739 (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]backup-simplify:  Simplify (* 0.3428571036734739 (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0)))))))) into (* 0.3428571036734739 (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) (- 0.466667)) (* (- 0.466667) 2.916667)) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 8.0) 0) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1.0) (- 8.0)) (* (- 8.0) 0)) into 8.0
* [misc]backup-simplify:  Simplify (+ (* 1.0 0) (* 0 1.0)) into 0
* [misc]backup-simplify:  Simplify (+ 8.0 0) into 8.0
* [misc]backup-simplify:  Simplify (+ (* 1.0 0) (* 8.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 1.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 1.0))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 8.0))) into (+ (log x) (log (- 8.0)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (+ (log x) (log (- 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log (- 8.0))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (+ 1.0 (exp (* 3 (+ (log x) (log (- 8.0)))))) (- 0.466667)) (* 0 (- 2.916667))) into (- (+ 0.466667 (* 0.466667 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]backup-simplify:  Simplify (+ 0 (- (+ 0.466667 (* 0.466667 (exp (* 3 (+ (log x) (log (- 8.0))))))))) into (- (+ 0.466667 (* 0.466667 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 8.0)) (* (- 8.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 8.0) 0) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (* 1.0 (- 8.0)) (* 0 (- 1.0))) into (- 8.0)
* [misc]backup-simplify:  Simplify (- (- 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 8.0) (* (- 0.466667) 1.0)) into (- 23.800003)
* [misc]backup-simplify:  Simplify (- (/ (- (+ 0.466667 (* 0.466667 (exp (* 3 (+ (log x) (log (- 8.0)))))))) -2.916667) (+ (* (* 0.3428571036734739 (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0)))))))) (/ (- 23.800003) -2.916667)))) into (- (+ 7.999999999999999 (* 7.999999999999999 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]backup-simplify:  Simplify (- (+ 7.999999999999999 (* 7.999999999999999 (exp (* 3 (+ (log x) (log (- 8.0)))))))) into (- (+ 7.999999999999999 (* 7.999999999999999 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) (- 0.466667)) (* 0 2.916667))) into 0.217778088889
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 0) (* 0.217778088889 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.0) 0) (+ (* (- 8.0) (- 8.0)) (* 0 0))) into 64.0
* [misc]backup-simplify:  Simplify (+ (* 1.0 0) (+ (* 0 0) (* 0 1.0))) into 0
* [misc]backup-simplify:  Simplify (+ 64.0 0) into 64.0
* [misc]backup-simplify:  Simplify (+ (* 1.0 0) (+ (* 8.0 0) (* 64.0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log 1.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 1.0))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (- 8.0))) into (+ (log x) (log (- 8.0)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (+ (log x) (log (- 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log x) (log (- 8.0))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (+ 1.0 (exp (* 3 (+ (log x) (log (- 8.0)))))) 0) (+ (* 0 (- 0.466667)) (* 0 (- 2.916667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 8.0) (- 8.0)) (* 0 0))) into 64.0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.0 0) (+ (* 0 (- 8.0)) (* 0 (- 1.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 64.0 0) into 64.0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 64.0) (+ (* (- 0.466667) 8.0) (* 0 1.0))) into (- 190.400024)
* [misc]backup-simplify:  Simplify (- (/ 0 -2.916667) (+ (* (* 0.3428571036734739 (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0)))))))) (/ (- 190.400024) -2.916667)) (* (- (+ 7.999999999999999 (* 7.999999999999999 (exp (* 3 (+ (log x) (log (- 8.0)))))))) (/ (- 23.800003) -2.916667)))) into (- (+ 1.4210854715202004e-14 (* 1.4210854715202004e-14 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]backup-simplify:  Simplify (- (+ 1.4210854715202004e-14 (* 1.4210854715202004e-14 (exp (* 3 (+ (log x) (log (- 8.0)))))))) into (- (+ 1.4210854715202004e-14 (* 1.4210854715202004e-14 (exp (* 3 (+ (log x) (log (- 8.0))))))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ 1.4210854715202004e-14 (* 1.4210854715202004e-14 (exp (* 3 (+ (log x) (log (- 8.0)))))))) (pow x 2)) (+ (* (- (+ 7.999999999999999 (* 7.999999999999999 (exp (* 3 (+ (log x) (log (- 8.0)))))))) x) (* 0.3428571036734739 (+ 2.916667 (* 2.916667 (exp (* 3 (+ (log x) (log (- 8.0)))))))))) into (- (+ 1.0 (* 1.0 (exp (* 3 (+ (log x) (log (- 8.0))))))) (+ (* 1.4210854715202004e-14 (pow x 2)) (+ (* 1.4210854715202004e-14 (* (exp (* 3 (+ (log x) (log (- 8.0))))) (pow x 2))) (+ (* 7.999999999999999 (* (exp (* 3 (+ (log x) (log (- 8.0))))) x)) (* 7.999999999999999 x)))))
* [misc]approximate:  Taking taylor expansion of (/ (+ (* (+ (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))))) (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 x)) 3)) (- (* -0.466667 (/ 1 x)) 2.916667))) (* (- (* -0.466667 (/ 1 x)) 2.916667) (- (* (* -8.0 (/ 1 x)) (* -8.0 (/ 1 x))) (* 1.0 (- (* -8.0 (/ 1 x)) 1.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (* (+ (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))))) (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 x)) 3)) (- (* -0.466667 (/ 1 x)) 2.916667))) (* (- (* -0.466667 (/ 1 x)) 2.916667) (- (* (* -8.0 (/ 1 x)) (* -8.0 (/ 1 x))) (* 1.0 (- (* -8.0 (/ 1 x)) 1.0))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (+ (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))))) (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 x)) 3)) (- (* -0.466667 (/ 1 x)) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) (* 1.0 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 (/ 1 x)) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 1.0 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 x)) 3)) (- (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow 1.0 3) (pow (* -8.0 (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 1.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 3 (log 1.0)) into (* 3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 1.0))) into (pow 1.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* -8.0 (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* -8.0 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* -8.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (log -8.0) into (log -8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -8.0)) into (- (log -8.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -8.0) (log x))) into (* 3 (- (log -8.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -8.0) (log x)))) into (exp (* 3 (- (log -8.0) (log x))))
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 x)) 2.916667) (- (* (* -8.0 (/ 1 x)) (* -8.0 (/ 1 x))) (* 1.0 (- (* -8.0 (/ 1 x)) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (- (* (* -8.0 (/ 1 x)) (* -8.0 (/ 1 x))) (* 1.0 (- (* -8.0 (/ 1 x)) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -8.0 (/ 1 x)) (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 1.0 (- (* -8.0 (/ 1 x)) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 (/ 1 x)) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (+ -8.0 0) into (- 8.0)
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (* (- 8.0) -8.0) into 64.0
* [misc]backup-simplify:  Simplify (+ 64.0 0) into 64.0
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* (- 0.466667) (- 0.466667)) into 0.217778088889
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.217778088889 1) into 0.217778088889
* [misc]backup-simplify:  Simplify (* 64.0 0.217778088889) into 13.937797688896
* [misc]backup-simplify:  Simplify (+ 13.937797688896 0) into 13.937797688896
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (* -8.0 -8.0) into 64.0
* [misc]backup-simplify:  Simplify (+ 64.0 0) into 64.0
* [misc]backup-simplify:  Simplify (* (- 0.466667) 64.0) into -29.866688
* [misc]backup-simplify:  Simplify (/ 13.937797688896 -29.866688) into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ (+ (* (+ (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))))) (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 x)) 3)) (- (* -0.466667 (/ 1 x)) 2.916667))) (* (- (* -0.466667 (/ 1 x)) 2.916667) (- (* (* -8.0 (/ 1 x)) (* -8.0 (/ 1 x))) (* 1.0 (- (* -8.0 (/ 1 x)) 1.0))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (+ (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))))) (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 x)) 3)) (- (* -0.466667 (/ 1 x)) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) (* 1.0 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -8.0 (/ 1 x)) 1.0) (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 (/ 1 x)) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 1.0 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 x)) 3)) (- (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow 1.0 3) (pow (* -8.0 (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 1.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 3 (log 1.0)) into (* 3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 1.0))) into (pow 1.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* -8.0 (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* -8.0 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* -8.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (log -8.0) into (log -8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -8.0)) into (- (log -8.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -8.0) (log x))) into (* 3 (- (log -8.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -8.0) (log x)))) into (exp (* 3 (- (log -8.0) (log x))))
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 x)) 2.916667) (- (* (* -8.0 (/ 1 x)) (* -8.0 (/ 1 x))) (* 1.0 (- (* -8.0 (/ 1 x)) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (- (* (* -8.0 (/ 1 x)) (* -8.0 (/ 1 x))) (* 1.0 (- (* -8.0 (/ 1 x)) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -8.0 (/ 1 x)) (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 1.0 (- (* -8.0 (/ 1 x)) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 (/ 1 x)) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (+ -8.0 0) into (- 8.0)
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (* (- 8.0) -8.0) into 64.0
* [misc]backup-simplify:  Simplify (+ 64.0 0) into 64.0
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* (- 0.466667) (- 0.466667)) into 0.217778088889
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.217778088889 1) into 0.217778088889
* [misc]backup-simplify:  Simplify (* 64.0 0.217778088889) into 13.937797688896
* [misc]backup-simplify:  Simplify (+ 13.937797688896 0) into 13.937797688896
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (* -8.0 -8.0) into 64.0
* [misc]backup-simplify:  Simplify (+ 64.0 0) into 64.0
* [misc]backup-simplify:  Simplify (* (- 0.466667) 64.0) into -29.866688
* [misc]backup-simplify:  Simplify (/ 13.937797688896 -29.866688) into -0.466667
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 2.916667) (* (- 2.916667) (- 0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ (* (- 8.0) 0) (* (- 1.0) -8.0)) into 8.0
* [misc]backup-simplify:  Simplify (+ 8.0 0) into 8.0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (* 8.0 0.217778088889)) into 1.742224711112
* [misc]backup-simplify:  Simplify (+ 1.742224711112 0) into 1.742224711112
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 -8.0)) into 0
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (+ -8.0 0) into (- 8.0)
* [misc]backup-simplify:  Simplify (* 1.0 (- 8.0)) into -8.0
* [misc]backup-simplify:  Simplify (- -8.0) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 8.0) (* (- 2.916667) 64.0)) into (- 190.400024)
* [misc]backup-simplify:  Simplify (- (/ 1.742224711112 -29.866688) (+ (* -0.466667 (/ (- 190.400024) -29.866688)))) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 0) (+ (* (- 2.916667) 2.916667) (* 0 (- 0.466667)))) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (* (- 8.506946388889) 1))) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 8.0) 0) (+ (* (- 1.0) 0) (* 0 -8.0))) into 0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ (* 64.0 (- 8.506946388889)) (+ (* 8.0 0) (* 1.0 0.217778088889))) into (- 544.226790800007)
* [misc]backup-simplify:  Simplify (+ (- 544.226790800007) 0) into (- 544.226790800007)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (* 0 -8.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ (* 1.0 (- 1.0)) (* 0 (- 8.0))) into (- 1.0)
* [misc]backup-simplify:  Simplify (- (- 1.0)) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 1.0) (+ (* (- 2.916667) 8.0) (* 0 64.0))) into (- 23.800003)
* [misc]backup-simplify:  Simplify (- (/ (- 544.226790800007) -29.866688) (+ (* -0.466667 (/ (- 23.800003) -29.866688)) (* 2.916667 (/ (- 190.400024) -29.866688)))) into 3.552713678800501e-15
* [misc]backup-simplify:  Simplify 3.552713678800501e-15 into 3.552713678800501e-15
* [misc]backup-simplify:  Simplify (+ (* 3.552713678800501e-15 (pow (/ 1 (/ 1 x)) 3)) (+ (* 2.916667 (pow (/ 1 (/ 1 x)) 4)) (* -0.466667 (pow (/ 1 (/ 1 x)) 5)))) into (- (+ (* 2.916667 (pow x 4)) (* 3.552713678800501e-15 (pow x 3))) (* 0.466667 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (/ (+ (* (+ (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 (- x))) 3)) (- (* -0.466667 (/ 1 (- x))) 2.916667))) (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (- (* (* -8.0 (/ 1 (- x))) (* -8.0 (/ 1 (- x)))) (* 1.0 (- (* -8.0 (/ 1 (- x))) 1.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (* (+ (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 (- x))) 3)) (- (* -0.466667 (/ 1 (- x))) 2.916667))) (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (- (* (* -8.0 (/ 1 (- x))) (* -8.0 (/ 1 (- x)))) (* 1.0 (- (* -8.0 (/ 1 (- x))) 1.0))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (+ (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 (- x))) 3)) (- (* -0.466667 (/ 1 (- x))) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) (* 1.0 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 (/ 1 (- x))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 1.0 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 (- x))) 3)) (- (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow 1.0 3) (pow (* -8.0 (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 1.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 3 (log 1.0)) into (* 3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 1.0))) into (pow 1.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* -8.0 (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* -8.0 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* -8.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 8.0)) into (- (log 8.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 8.0) (log x))) into (* 3 (- (log 8.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 8.0) (log x)))) into (exp (* 3 (- (log 8.0) (log x))))
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (- (* (* -8.0 (/ 1 (- x))) (* -8.0 (/ 1 (- x)))) (* 1.0 (- (* -8.0 (/ 1 (- x))) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (- (* (* -8.0 (/ 1 (- x))) (* -8.0 (/ 1 (- x)))) (* 1.0 (- (* -8.0 (/ 1 (- x))) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -8.0 (/ 1 (- x))) (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 1.0 (- (* -8.0 (/ 1 (- x))) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 (/ 1 (- x))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (+ 8.0 0) into 8.0
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (* 8.0 8.0) into 64.0
* [misc]backup-simplify:  Simplify (+ 64.0 0) into 64.0
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 0.466667 0.466667) into 0.217778088889
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.217778088889 1) into 0.217778088889
* [misc]backup-simplify:  Simplify (* 64.0 0.217778088889) into 13.937797688896
* [misc]backup-simplify:  Simplify (+ 13.937797688896 0) into 13.937797688896
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (* 8.0 8.0) into 64.0
* [misc]backup-simplify:  Simplify (+ 64.0 0) into 64.0
* [misc]backup-simplify:  Simplify (* 0.466667 64.0) into 29.866688
* [misc]backup-simplify:  Simplify (/ 13.937797688896 29.866688) into 0.466667
* [misc]taylor:  Taking taylor expansion of (/ (+ (* (+ (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 (- x))) 3)) (- (* -0.466667 (/ 1 (- x))) 2.916667))) (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (- (* (* -8.0 (/ 1 (- x))) (* -8.0 (/ 1 (- x)))) (* 1.0 (- (* -8.0 (/ 1 (- x))) 1.0))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (+ (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 (- x))) 3)) (- (* -0.466667 (/ 1 (- x))) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) (* 1.0 1.0)) (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) (* 1.0 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -8.0 (/ 1 (- x))) 1.0) (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 (/ 1 (- x))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 1.0 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ (pow 1.0 3) (pow (* -8.0 (/ 1 (- x))) 3)) (- (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow 1.0 3) (pow (* -8.0 (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 1.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 1.0) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 3 (log 1.0)) into (* 3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 1.0))) into (pow 1.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* -8.0 (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* -8.0 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* -8.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (log 8.0) into (log 8.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 8.0)) into (- (log 8.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 8.0) (log x))) into (* 3 (- (log 8.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 8.0) (log x)))) into (exp (* 3 (- (log 8.0) (log x))))
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (- (* (* -8.0 (/ 1 (- x))) (* -8.0 (/ 1 (- x)))) (* 1.0 (- (* -8.0 (/ 1 (- x))) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (- (* (* -8.0 (/ 1 (- x))) (* -8.0 (/ 1 (- x)))) (* 1.0 (- (* -8.0 (/ 1 (- x))) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -8.0 (/ 1 (- x))) (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 1.0 (- (* -8.0 (/ 1 (- x))) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (- (* -8.0 (/ 1 (- x))) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (+ 8.0 0) into 8.0
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (* 8.0 8.0) into 64.0
* [misc]backup-simplify:  Simplify (+ 64.0 0) into 64.0
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 0.466667 0.466667) into 0.217778088889
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.217778088889 1) into 0.217778088889
* [misc]backup-simplify:  Simplify (* 64.0 0.217778088889) into 13.937797688896
* [misc]backup-simplify:  Simplify (+ 13.937797688896 0) into 13.937797688896
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (* 8.0 8.0) into 64.0
* [misc]backup-simplify:  Simplify (+ 64.0 0) into 64.0
* [misc]backup-simplify:  Simplify (* 0.466667 64.0) into 29.866688
* [misc]backup-simplify:  Simplify (/ 13.937797688896 29.866688) into 0.466667
* [misc]backup-simplify:  Simplify 0.466667 into 0.466667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0.466667 2.916667) (* (- 2.916667) 0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* (- 1.0) 8.0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (- 8.0) 0) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (* (- 8.0) 0.217778088889)) into (- 1.742224711112)
* [misc]backup-simplify:  Simplify (+ (- 1.742224711112) 0) into (- 1.742224711112)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (+ 8.0 0) into 8.0
* [misc]backup-simplify:  Simplify (* 1.0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (- 8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 8.0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0.466667 (- 8.0)) (* (- 2.916667) 64.0)) into (- 190.400024)
* [misc]backup-simplify:  Simplify (- (/ (- 1.742224711112) 29.866688) (+ (* 0.466667 (/ (- 190.400024) 29.866688)))) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.466667 0) (+ (* (- 2.916667) 2.916667) (* 0 0.466667))) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (* (- 8.506946388889) 1))) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* (- 1.0) 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ (* 64.0 (- 8.506946388889)) (+ (* (- 8.0) 0) (* 1.0 0.217778088889))) into (- 544.226790800007)
* [misc]backup-simplify:  Simplify (+ (- 544.226790800007) 0) into (- 544.226790800007)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ (* 1.0 (- 1.0)) (* 0 8.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (- (- 1.0)) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.466667 1.0) (+ (* (- 2.916667) (- 8.0)) (* 0 64.0))) into 23.800003
* [misc]backup-simplify:  Simplify (- (/ (- 544.226790800007) 29.866688) (+ (* 0.466667 (/ 23.800003 29.866688)) (* 2.916667 (/ (- 190.400024) 29.866688)))) into (- 3.552713678800501e-15)
* [misc]backup-simplify:  Simplify (- 3.552713678800501e-15) into (- 3.552713678800501e-15)
* [misc]backup-simplify:  Simplify (+ (* (- 3.552713678800501e-15) (pow (/ 1 (/ 1 (- x))) 3)) (+ (* 2.916667 (pow (/ 1 (/ 1 (- x))) 4)) (* 0.466667 (pow (/ 1 (/ 1 (- x))) 5)))) into (- (+ (* 2.916667 (pow x 4)) (* 3.552713678800501e-15 (pow x 3))) (* 0.466667 (pow x 5)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 x) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* (- 2.916667) 2.916667) into -8.506946388889
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -8.506946388889 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) (- 0.466667)) (* (- 0.466667) 2.916667)) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) (- 0.466667)) (* 0 2.916667))) into 0.217778088889
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 0) (* 0.217778088889 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 0) (+ (* 0.217778088889 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 1) (+ (* 0 0) (+ (* 0.217778088889 0) (+ (* 0 0) (* 0 0))))) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (- 8.506946388889) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 1) (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 0) (+ (* 0.217778088889 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0.217778088889
* [misc]backup-simplify:  Simplify 0.217778088889 into 0.217778088889
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 0) (+ (* 0.217778088889 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 0) (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 0) (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 0) (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 0) (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.916667) 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.506946388889 0) (+ (* 0 0) (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 (pow x 6)) (* (- 8.506946388889) (pow x 4))) into (- (* 0.217778088889 (pow x 6)) (* 8.506946388889 (pow x 4)))
* [misc]approximate:  Taking taylor expansion of (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 x)) 2.916667) (+ (* -0.466667 (/ 1 x)) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 x)) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* (- 0.466667) (- 0.466667)) into 0.217778088889
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.217778088889 1) into 0.217778088889
* [misc]backup-simplify:  Simplify 0.217778088889 into 0.217778088889
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 2.916667) (* (- 2.916667) (- 0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 0) (+ (* (- 2.916667) 2.916667) (* 0 (- 0.466667)))) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (* (- 8.506946388889) 1))) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (- 8.506946388889) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 0) (+ (* (- 2.916667) 0) (+ (* 0 2.916667) (* 0 (- 0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 0) (+ (* (- 2.916667) 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 0) (+ (* (- 2.916667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 0) (+ (* (- 2.916667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 0) (+ (* (- 2.916667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.466667) 0) (+ (* (- 2.916667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 8.506946388889) (pow (/ 1 (/ 1 x)) 4)) (* 0.217778088889 (pow (/ 1 (/ 1 x)) 6))) into (- (* 0.217778088889 (pow x 6)) (* 8.506946388889 (pow x 4)))
* [misc]approximate:  Taking taylor expansion of (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* -0.466667 (/ 1 (- x))) 2.916667) (+ (* -0.466667 (/ 1 (- x))) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (- (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (+ (* -0.466667 (/ 1 (- x))) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 0.466667 0.466667) into 0.217778088889
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.217778088889 1) into 0.217778088889
* [misc]backup-simplify:  Simplify 0.217778088889 into 0.217778088889
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 2.916667) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.916667)) into (- 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0.466667 2.916667) (* (- 2.916667) 0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.466667 0) (+ (* (- 2.916667) 2.916667) (* 0 0.466667))) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (* (- 8.506946388889) 1))) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (- 8.506946388889) into (- 8.506946388889)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.466667 0) (+ (* (- 2.916667) 0) (+ (* 0 2.916667) (* 0 0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.466667 0) (+ (* (- 2.916667) 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.466667 0) (+ (* (- 2.916667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.466667 0) (+ (* (- 2.916667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.466667 0) (+ (* (- 2.916667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.466667 0) (+ (* (- 2.916667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.916667) (* 0 0.466667))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.217778088889 0) (+ (* 0 0) (+ (* (- 8.506946388889) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 8.506946388889) (pow (/ 1 (/ 1 (- x))) 4)) (* 0.217778088889 (pow (/ 1 (/ 1 (- x))) 6))) into (- (* 0.217778088889 (pow x 6)) (* 8.506946388889 (pow x 4)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (exp (* (log (* x x)) (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 2 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (exp (* (log (* x x)) (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 3 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow x (* 2 (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* 2 (+ 3 1))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* * * * [misc]progress:  [ 4 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (* 1 (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* 1 (+ 3 1))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (+ 3 1)
* [exit]simplify:  Simplified to (+ 3 1)
* * * * [misc]progress:  [ 5 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1)))) (cbrt (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* * * * [misc]progress:  [ 6 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) (sqrt (+ 3 1))) (sqrt (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) (sqrt (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* * * * [misc]progress:  [ 7 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) 1) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 8 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (pow (* x x) 3) (pow (* x x) 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 9 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 10 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (pow (* x x) (+ 3 1)) 1)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 11 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (exp (log (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* * * * [misc]progress:  [ 12 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (log (exp (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 13 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1)))) (cbrt (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 14 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (cbrt (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* * * * [misc]progress:  [ 15 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* (sqrt (pow (* x x) (+ 3 1))) (sqrt (pow (* x x) (+ 3 1))))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 16 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (* 1 (pow (* x x) (+ 3 1)))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 17 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow x (+ 2 2)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 18 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow (* x x) (+ 1 1)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 19 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow (* x x) 2))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 20 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow (* (* x x) (* x x)) 1))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 21 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow (* x x) 2))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 22 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow (* x x) (+ 1 1)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 23 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow (* (* x x) (* x x)) 1))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 24 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (exp (+ (log (* x x)) (log (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 25 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (exp (log (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 26 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (log (exp (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 27 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 28 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 29 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 30 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 31 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* 1 (* (* x x) (* x x))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 32 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) x) x))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 33 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* x (* x (* x x))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 34 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 35 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) 1) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 36 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (- (log (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (+ (log (- (* -0.466667 x) 2.916667)) (log (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (- (log (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (+ (log (- (* -0.466667 x) 2.916667)) (log (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (- (log (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (+ (log (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (log (- (* x -0.466667) 2.916667))))
* [exit]simplify:  Simplified to (- (log (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (+ (log (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (log (- (* x -0.466667) 2.916667))))
* * * * [misc]progress:  [ 37 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (- (log (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (log (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (- (log (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (log (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (262 enodes)
* [exit]simplify:  Simplified to (- (log (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (log (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* x -0.466667) 2.916667))))
* [exit]simplify:  Simplified to (- (log (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (log (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* x -0.466667) 2.916667))))
* * * * [misc]progress:  [ 38 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (log (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (256 enodes)
* [exit]simplify:  Simplified to (log (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (log (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 39 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (log (exp (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (exp (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (exp (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 40 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (/ (* (* (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* -0.466667 x) 2.916667)) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (* (* (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* -0.466667 x) 2.916667)) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (109 enodes)
* * [misc]simplify:  iters left: 4 (467 enodes)
* [exit]simplify:  Simplified to (/ (* (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (/ (* (* (pow (- (* x -0.466667) 2.916667) 3) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (/ (* (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (/ (* (* (pow (- (* x -0.466667) 2.916667) 3) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))))
* * * * [misc]progress:  [ 41 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (/ (* (* (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (* (* (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (465 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) 3)
* * * * [misc]progress:  [ 42 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (cbrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (cbrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (cbrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (cbrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (252 enodes)
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (cbrt (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (cbrt (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))))
* [enter]simplify:  Simplifying (cbrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (cbrt (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (cbrt (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 43 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (317 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) 3)
* * * * [misc]progress:  [ 44 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (sqrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (sqrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (sqrt (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [enter]simplify:  Simplifying (sqrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (sqrt (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 45 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (- (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (- (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (- (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (232 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (- (* x -0.466667) 2.916667)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (- (* x -0.466667) 2.916667)) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (- (* x -0.466667) 2.916667)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (- (* x -0.466667) 2.916667)) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))
* [enter]simplify:  Simplifying (- (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (289 enodes)
* [exit]simplify:  Simplified to (* (- 2.916667 (* -0.466667 x)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (- 2.916667 (* -0.466667 x)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * * * [misc]progress:  [ 46 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ (* (cbrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (cbrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))) (- (* -0.466667 x) 2.916667)) (/ (cbrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (cbrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))) (- (* -0.466667 x) 2.916667))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (216 enodes)
* [exit]simplify:  Simplified to (* (/ (cbrt (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (- (* x -0.466667) 2.916667)) (cbrt (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (* (/ (cbrt (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (- (* x -0.466667) 2.916667)) (cbrt (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))))
* [enter]simplify:  Simplifying (/ (cbrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (235 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (/ (cbrt (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * * * [misc]progress:  [ 47 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ (sqrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (- (* -0.466667 x) 2.916667)) (/ (sqrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (sqrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (- (* -0.466667 x) 2.916667))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (- (* x -0.466667) 2.916667))
* [exit]simplify:  Simplified to (/ (sqrt (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (- (* x -0.466667) 2.916667))
* [enter]simplify:  Simplifying (/ (sqrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (235 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * * * [misc]progress:  [ 48 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ 1 (- (* -0.466667 x) 2.916667)) (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ 1 (- (* -0.466667 x) 2.916667))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (/ 1 (- (* x -0.466667) 2.916667))
* [exit]simplify:  Simplified to (/ 1 (- (* x -0.466667) 2.916667))
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (* x x)) (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (* x x)) (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * * * [misc]progress:  [ 49 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 1 (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 50 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (/ 1 (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ 1 (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* [exit]simplify:  Simplified to (/ (/ 1 (- (* x -0.466667) 2.916667)) (- (* (* x -8.0) (* x -8.0)) (* (- (* x -8.0) 1.0) 1.0)))
* [exit]simplify:  Simplified to (/ (/ 1 (- (* x -0.466667) 2.916667)) (- (* (* x -8.0) (* x -8.0)) (* (- (* x -8.0) 1.0) 1.0)))
* * * * [misc]progress:  [ 51 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ 1 (/ (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (/ (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (/ (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))))
* * * * [misc]progress:  [ 52 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (211 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (- (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (- (* x -0.466667) 2.916667))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (- (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (- (* x -0.466667) 2.916667))
* * * * [misc]progress:  [ 53 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (* (cbrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (cbrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))) (/ (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (cbrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (cbrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (252 enodes)
* [exit]simplify:  Simplified to (/ (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (cbrt (+ (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))))))
* [exit]simplify:  Simplified to (/ (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (cbrt (+ (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))))))
* * * * [misc]progress:  [ 54 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (sqrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (/ (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (sqrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (sqrt (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (252 enodes)
* [exit]simplify:  Simplified to (/ (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (sqrt (+ (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))))))
* [exit]simplify:  Simplified to (/ (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (sqrt (+ (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))))))
* * * * [misc]progress:  [ 55 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ 1 (/ (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (/ (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (/ (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))))
* * * * [misc]progress:  [ 56 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (+ (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (362 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (+ (pow (* x -0.466667) 3) (* (- 2.916667) (* 2.916667 2.916667))) (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (* (* (- 1.0) (* 1.0 1.0)) (- (* -8.0 x) 1.0)) (* (- (* -8.0 x) 1.0) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (+ (pow (* x -0.466667) 3) (* (- 2.916667) (* 2.916667 2.916667))) (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (* (* (- 1.0) (* 1.0 1.0)) (- (* -8.0 x) 1.0)) (* (- (* -8.0 x) 1.0) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 57 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0)))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (335 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (+ (pow (* x -0.466667) 3) (* (- 2.916667) (* 2.916667 2.916667))) (* (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (+ (pow (* x -0.466667) 3) (* (- 2.916667) (* 2.916667 2.916667))) (* (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 58 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (+ (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (99 enodes)
* * [misc]simplify:  iters left: 4 (377 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667)) (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (* (* (* 1.0 1.0) (- 1.0)) (- (* -8.0 x) 1.0)) (* (- (* -8.0 x) 1.0) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (- (* x -0.466667) 2.916667) (* (* x x) (* x x))) (+ (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667)) (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (* (* (* 1.0 1.0) (- 1.0)) (- (* -8.0 x) 1.0)) (* (- (* -8.0 x) 1.0) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 59 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0)))))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (99 enodes)
* * [misc]simplify:  iters left: 4 (350 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 60 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3)))) (+ (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (+ (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (322 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (* x x)) (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (+ (* (* (- (* x -0.466667) 2.916667) (* (* 1.0 1.0) (- 1.0))) (pow (- (* -8.0 x) 1.0) 3)) (* (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* x -0.466667) 2.916667))))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (* x x)) (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (+ (* (* (- (* x -0.466667) 2.916667) (* (* 1.0 1.0) (- 1.0))) (pow (- (* -8.0 x) 1.0) 3)) (* (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* x -0.466667) 2.916667))))
* * * * [misc]progress:  [ 61 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0)))))) (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (297 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (+ (* (pow (* -8.0 x) (+ 1 3)) (- (* x -0.466667) 2.916667)) (* (* (- (* -8.0 x) 1.0) (* 1.0 (- 1.0))) (* (- (* -8.0 x) 1.0) (- (* x -0.466667) 2.916667)))))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (+ (* (pow (* -8.0 x) (+ 1 3)) (- (* x -0.466667) 2.916667)) (* (* (- (* -8.0 x) 1.0) (* 1.0 (- 1.0))) (* (- (* -8.0 x) 1.0) (- (* x -0.466667) 2.916667)))))
* * * * [misc]progress:  [ 62 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (288 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (- (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (+ (pow (* x -0.466667) 3) (* (* 2.916667 2.916667) (- 2.916667))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (- (* x -0.466667) 2.916667))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (+ (pow (* x -0.466667) 3) (* (* 2.916667 2.916667) (- 2.916667))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 63 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (* -0.466667 x) 2.916667)) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (303 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667))))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667))))
* * * * [misc]progress:  [ 64 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (136 enodes)
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 65 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (137 enodes)
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))) (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))) (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 66 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (126 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))))))
* * * * [misc]progress:  [ 67 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (127 enodes)
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))) (* (* (+ 2.916667 (* -0.466667 x)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))) (* (* (+ 2.916667 (* -0.466667 x)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 68 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))))
* * * * [misc]progress:  [ 69 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (486 enodes)
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 70 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (132 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))))
* * * * [misc]progress:  [ 71 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* * [misc]simplify:  iters left: 4 (471 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 72 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3))))))
* * * * [misc]progress:  [ 73 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (123 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))))) (* (+ 2.916667 (* -0.466667 x)) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (* (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))))) (* (+ 2.916667 (* -0.466667 x)) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))))))
* * * * [misc]progress:  [ 74 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 75 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (474 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 76 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (420 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 77 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (395 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 78 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (118 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 79 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (381 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 80 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (137 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)))))
* * * * [misc]progress:  [ 81 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (131 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 82 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (127 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667))) (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667))) (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* * * * [misc]progress:  [ 83 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (121 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ 2.916667 (* -0.466667 x)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ 2.916667 (* -0.466667 x)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)))))
* * * * [misc]progress:  [ 84 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (490 enodes)
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x)))) (+ (* 2.916667 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x)))) (+ (* 2.916667 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 85 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (442 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 86 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (127 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 87 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* * [misc]simplify:  iters left: 4 (435 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* * * * [misc]progress:  [ 88 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (123 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (+ (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (+ (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 89 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (493 enodes)
* [exit]simplify:  Simplified to (* (+ (* (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* 1.0 1.0) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (+ (* (+ (* (* 1.0 1.0) (- 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3)) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (+ (* (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* 1.0 1.0) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (+ (* (+ (* (* 1.0 1.0) (- 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3)) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 90 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (484 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)) (* 2.916667 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (+ (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* 1.0 1.0)) (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)) (* 2.916667 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (+ (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* 1.0 1.0)) (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 91 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (427 enodes)
* [exit]simplify:  Simplified to (* (+ (* (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* 1.0 1.0) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (+ (* (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* 1.0 1.0) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 92 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (412 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (- (* -0.466667 x) 2.916667)) (+ (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* 1.0 1.0) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))))))
* [exit]simplify:  Simplified to (* (* (* (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (- (* -0.466667 x) 2.916667)) (+ (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* 1.0 1.0) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))))))
* * * * [misc]progress:  [ 93 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (338 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (+ (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* 1.0 1.0)) (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (+ (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* 1.0 1.0)) (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 94 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (454 enodes)
* [exit]simplify:  Simplified to (* (+ (* (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* 1.0 1.0) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (+ (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0)))) (pow (* 1.0 1.0) 3)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (+ (* (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* 1.0 1.0) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (+ (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0)))) (pow (* 1.0 1.0) 3)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 95 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (332 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* 1.0 1.0)) (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* 1.0 1.0)) (- (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 96 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (132 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 97 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (127 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 98 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 99 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (117 enodes)
* * [misc]simplify:  iters left: 4 (497 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 100 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (480 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 101 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (434 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ 2.916667 (* -0.466667 x))) (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ 2.916667 (* -0.466667 x))) (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 102 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (121 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (+ (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (- 2.916667 (* -0.466667 x)) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (+ (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 103 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (105 enodes)
* * [misc]simplify:  iters left: 4 (402 enodes)
* [exit]simplify:  Simplified to (* (* (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* [exit]simplify:  Simplified to (* (* (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * * * [misc]progress:  [ 104 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (118 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 105 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (450 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (* (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3)))) (* (- (* -0.466667 x) 2.916667) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (* (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3)))) (* (- (* -0.466667 x) 2.916667) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 106 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (447 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 107 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (384 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 108 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (369 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 109 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (298 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 110 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 111 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (289 enodes)
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * * * [misc]progress:  [ 112 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (124 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 113 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (125 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))) (+ (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))) (+ (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 114 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (114 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 115 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (485 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 116 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (99 enodes)
* * [misc]simplify:  iters left: 4 (449 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 117 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (423 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 118 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (120 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 119 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (398 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 120 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (125 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ 2.916667 (* -0.466667 x)) (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ 2.916667 (* -0.466667 x)) (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))))))
* * * * [misc]progress:  [ 121 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (497 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ 2.916667 (* -0.466667 x))) (+ (pow (* 1.0 1.0) 3) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0)))))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ 2.916667 (* -0.466667 x))) (+ (pow (* 1.0 1.0) 3) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0)))))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 122 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (491 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 123 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (431 enodes)
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x)))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (- (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x)))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (- (* -0.466667 x) 2.916667))
* * * * [misc]progress:  [ 124 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (437 enodes)
* [exit]simplify:  Simplified to (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x)))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x)))) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 125 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (360 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 126 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (479 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (pow (* 1.0 1.0) 3) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (+ (pow (* 1.0 1.0) 3) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 127 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (341 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 128 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (* (+ (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (* (+ (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 129 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (117 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3))))) (* (* (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3))))) (* (* (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* * * * [misc]progress:  [ 130 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 131 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (472 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))))
* * * * [misc]progress:  [ 132 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (89 enodes)
* * [misc]simplify:  iters left: 4 (416 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 133 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (393 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))))))
* * * * [misc]progress:  [ 134 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (+ (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (+ (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 135 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (379 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)))) (* (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)))) (* (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 136 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (478 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))))) (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))))) (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))))
* * * * [misc]progress:  [ 137 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (450 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667))) (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667))) (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 138 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (410 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* * * * [misc]progress:  [ 139 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (382 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (* (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 140 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (327 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 141 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (302 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (+ 2.916667 (* -0.466667 x)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (+ 2.916667 (* -0.466667 x)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* * * * [misc]progress:  [ 142 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (413 enodes)
* [exit]simplify:  Simplified to (* (* (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 143 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (289 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * * * [misc]progress:  [ 144 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (117 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 145 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3))) (+ 2.916667 (* -0.466667 x)))) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3))) (+ 2.916667 (* -0.466667 x)))) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 146 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (471 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))) (* (* (+ 2.916667 (* -0.466667 x)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (+ (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)) (* 2.916667 2.916667)))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))) (* (* (+ 2.916667 (* -0.466667 x)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (+ (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)) (* 2.916667 2.916667)))))
* * * * [misc]progress:  [ 147 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (101 enodes)
* * [misc]simplify:  iters left: 4 (438 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x)))) (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 148 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (397 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 149 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (349 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x))) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)))
* [exit]simplify:  Simplified to (* (* (* (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x))) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)))
* * * * [misc]progress:  [ 150 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (467 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0)))) (* (pow 1.0 3) (pow 1.0 3)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0)))) (* (pow 1.0 3) (pow 1.0 3)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 151 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (343 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 152 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (460 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3)))) (+ (* 2.916667 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)))) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3)))) (+ (* 2.916667 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)))) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 153 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (pow 1.0 3)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (pow 1.0 3)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 154 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (392 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 155 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (335 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 156 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (319 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)))) (* (+ (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)))) (* (+ (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* * * * [misc]progress:  [ 157 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (245 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 158 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (364 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0))) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0))) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 159 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (240 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* * * * [misc]progress:  [ 160 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)))) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (- (pow (* -8.0 x) 3) (pow 1.0 3)) (pow (* -8.0 x) 3)))) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 161 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (469 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3))))))
* * * * [misc]progress:  [ 162 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (440 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))) (* (- (* -0.466667 x) 2.916667) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x)))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))))) (* (- (* -0.466667 x) 2.916667) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x)))))))
* * * * [misc]progress:  [ 163 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (401 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 164 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (383 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (- (* -0.466667 x) 2.916667)) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (- (* -0.466667 x) 2.916667)) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* * * * [misc]progress:  [ 165 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (337 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 166 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (101 enodes)
* * [misc]simplify:  iters left: 4 (446 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (pow 1.0 3)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3))))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (pow 1.0 3)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3))))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 167 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (306 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 168 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (423 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3))) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))))))
* [exit]simplify:  Simplified to (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3))) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))))))
* * * * [misc]progress:  [ 169 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (360 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0))) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0))) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 170 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (355 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 171 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (72 enodes)
* * [misc]simplify:  iters left: 4 (292 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* * * * [misc]progress:  [ 172 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (276 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 173 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (205 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 174 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (313 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 175 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 176 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (486 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (pow 1.0 3)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (pow 1.0 3)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3))))))
* * * * [misc]progress:  [ 177 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (105 enodes)
* * [misc]simplify:  iters left: 4 (457 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (- (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (pow 1.0 3))))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (- (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (pow 1.0 3))))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 178 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (418 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 179 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (389 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (- (pow 1.0 3) (pow (* -8.0 x) 3)))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (- (pow 1.0 3) (pow (* -8.0 x) 3)))
* * * * [misc]progress:  [ 180 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (352 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))))
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))))
* * * * [misc]progress:  [ 181 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (326 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 182 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (442 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (pow 1.0 3))))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (pow 1.0 3))))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 183 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (302 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 184 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (105 enodes)
* * [misc]simplify:  iters left: 4 (463 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)))))
* * * * [misc]progress:  [ 185 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ 2.916667 (* -0.466667 x))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3))))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ 2.916667 (* -0.466667 x))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3))))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* * * * [misc]progress:  [ 186 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (395 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 187 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (335 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* * * * [misc]progress:  [ 188 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (340 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* * * * [misc]progress:  [ 189 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 190 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (385 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0))) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3)))) (* (+ 2.916667 (* -0.466667 x)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0))) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3)))) (* (+ 2.916667 (* -0.466667 x)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* * * * [misc]progress:  [ 191 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (245 enodes)
* [exit]simplify:  Simplified to (* (* (+ 2.916667 (* -0.466667 x)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (+ 2.916667 (* -0.466667 x)) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 192 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (105 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x)))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (* (- 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x)))) (+ (* (pow (* -8.0 x) 3) (- (pow (* -8.0 x) 3) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 193 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (485 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)))) (* (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x)))) (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)))) (* (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x)))) (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 194 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (441 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 195 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (417 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)))))
* * * * [misc]progress:  [ 196 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (363 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 197 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (352 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 198 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (101 enodes)
* * [misc]simplify:  iters left: 4 (466 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0)))) (* (pow 1.0 3) (pow 1.0 3))) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0)))) (* (pow 1.0 3) (pow 1.0 3))) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 199 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (326 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 200 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (409 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (pow 1.0 3)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (pow 1.0 3)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3))))))
* * * * [misc]progress:  [ 201 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (385 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (pow 1.0 3))) (* (pow 1.0 3) (pow 1.0 3)))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 202 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (337 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 203 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (317 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)))) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)))) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 204 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (241 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 205 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 206 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (342 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (pow 1.0 3)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (pow 1.0 3)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))))
* * * * [misc]progress:  [ 207 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 208 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (490 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)) (* 2.916667 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0)))))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (+ (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)) (* 2.916667 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0)))))))
* * * * [misc]progress:  [ 209 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (451 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0)))))) (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0)))))) (* (+ 2.916667 (* -0.466667 x)) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 210 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (422 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))) (* (+ (* 2.916667 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))) (* (+ (* 2.916667 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 211 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (383 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 212 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (364 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* 2.916667 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* 2.916667 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 213 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x))) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x))) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 214 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (436 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3))))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3))))))
* * * * [misc]progress:  [ 215 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (296 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 216 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (401 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* -0.466667 x) 2.916667))) (- (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x)))))
* [exit]simplify:  Simplified to (* (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* -0.466667 x) 2.916667))) (- (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x)))))
* * * * [misc]progress:  [ 217 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (338 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* (pow 1.0 3) (pow 1.0 3)) (+ 2.916667 (* -0.466667 x))) (* (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0))) (* (pow (* -8.0 x) 3) (+ 2.916667 (* -0.466667 x))))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (+ (* (* (pow 1.0 3) (pow 1.0 3)) (+ 2.916667 (* -0.466667 x))) (* (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0))) (* (pow (* -8.0 x) 3) (+ 2.916667 (* -0.466667 x))))) (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 218 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (333 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (+ (* 2.916667 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (+ (* 2.916667 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* -0.466667 x)))))
* * * * [misc]progress:  [ 219 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (272 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* * * * [misc]progress:  [ 220 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (253 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 221 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 222 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (299 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 223 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 224 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (396 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0)))) (* (pow 1.0 3) (pow 1.0 3))) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0)))) (* (pow 1.0 3) (pow 1.0 3))) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 225 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (357 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 226 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (328 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (- (* 2.916667 2.916667) (* (* -0.466667 x) (- 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 227 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (289 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 228 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (256 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 229 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 230 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (325 enodes)
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x)))))))
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (- 2.916667 (* -0.466667 x)))))))
* * * * [misc]progress:  [ 231 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (207 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 232 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* -0.466667 x) 2.916667) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (364 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0))) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)))))
* [exit]simplify:  Simplified to (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0))) (pow (* -8.0 x) 3))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 233 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (301 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ 2.916667 (* -0.466667 x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (* (* 1.0 1.0) (- 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (+ 2.916667 (* -0.466667 x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (* (* 1.0 1.0) (- 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3))))
* * * * [misc]progress:  [ 234 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* -0.466667 x) 2.916667) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (296 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 235 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (233 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 236 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* -0.466667 x) 2.916667) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (221 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 237 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (- (* -0.466667 x) 2.916667) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 238 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (- (* -0.466667 x) 2.916667) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (265 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (* (* 1.0 1.0) (- 1.0)) (pow (* -8.0 x) 3)))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (* (* 1.0 1.0) (- 1.0)) (pow (* -8.0 x) 3)))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 239 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* -0.466667 x) 2.916667) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * * * [misc]progress:  [ 240 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (351 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))) (+ (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0)))) (* (pow 1.0 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))) (+ (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0)))) (* (pow 1.0 3) (pow 1.0 3))))
* * * * [misc]progress:  [ 241 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (355 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 242 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (285 enodes)
* [exit]simplify:  Simplified to (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (* (* (- (* -0.466667 x) 2.916667) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 243 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (287 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 244 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 245 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))))
* * * * [misc]progress:  [ 246 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (339 enodes)
* [exit]simplify:  Simplified to (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))))))
* [exit]simplify:  Simplified to (* (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))))))
* * * * [misc]progress:  [ 247 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (209 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * * * [misc]progress:  [ 248 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* -0.466667 x) 2.916667) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (365 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 249 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (+ (* -0.466667 x) 2.916667) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (282 enodes)
* [exit]simplify:  Simplified to (* (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (- (+ (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3))) (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 250 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* -0.466667 x) 2.916667) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (297 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * * * [misc]progress:  [ 251 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (+ (* -0.466667 x) 2.916667) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (216 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 252 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* -0.466667 x) 2.916667) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (+ 2.916667 (* -0.466667 x)))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 253 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (+ (* -0.466667 x) 2.916667) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))
* * * * [misc]progress:  [ 254 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (+ (* -0.466667 x) 2.916667) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (278 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x)))) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 255 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* -0.466667 x) 2.916667) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (160 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ 2.916667 (* -0.466667 x))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * * * [misc]progress:  [ 256 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (114 enodes)
* * [misc]simplify:  iters left: 4 (477 enodes)
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0)))))) (* (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (* 1.0 1.0) (- 1.0)))))) (* (* (+ (* 2.916667 (+ 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 257 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (414 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3)))))
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (* (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3)))))
* * * * [misc]progress:  [ 258 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (411 enodes)
* [exit]simplify:  Simplified to (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 259 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (348 enodes)
* [exit]simplify:  Simplified to (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 260 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (89 enodes)
* * [misc]simplify:  iters left: 4 (342 enodes)
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))))
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x)))))))
* * * * [misc]progress:  [ 261 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 262 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (382 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* [exit]simplify:  Simplified to (* (* (+ (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (+ (pow (* -8.0 x) 3) (* (- 1.0) (* 1.0 1.0))))) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* -0.466667 x) 2.916667) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (* 1.0 1.0) (* -8.0 x)) (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 263 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (266 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* [exit]simplify:  Simplified to (* (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0)))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* * * * [misc]progress:  [ 264 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (385 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (* (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (+ (* (+ 2.916667 (* -0.466667 x)) 2.916667) (* (* -0.466667 x) (* -0.466667 x))) (+ (* (+ (* (- 1.0) (* 1.0 1.0)) (pow (* -8.0 x) 3)) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow 1.0 3)))))
* * * * [misc]progress:  [ 265 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3)))) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (322 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (* -8.0 x) (* -8.0 x)) (* (pow 1.0 3) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))
* * * * [misc]progress:  [ 266 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (317 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3)))))
* * * * [misc]progress:  [ 267 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (254 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ 2.916667 (* -0.466667 x)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 268 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (243 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (+ (* (* -0.466667 x) (+ 2.916667 (* -0.466667 x))) (* 2.916667 2.916667))) (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 269 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* -0.466667 x) 2.916667)) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* -0.466667 x) 2.916667)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 270 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (+ (pow (pow 1.0 3) 3) (pow (pow (* -8.0 x) 3) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (+ (* (pow 1.0 3) (pow 1.0 3)) (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (* (pow 1.0 3) (pow (* -8.0 x) 3))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (72 enodes)
* * [misc]simplify:  iters left: 4 (286 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (- (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3)) (- (* (* (pow 1.0 3) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (* (pow 1.0 3) (pow 1.0 3)))) (* (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 271 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (- (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* 1.0 1.0) (* 1.0 1.0))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (* (- (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (pow 1.0 3) (pow (* -8.0 x) 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (- (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* 1.0 1.0))))
* * * * [misc]progress:  [ 272 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (pow (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) 3) (pow (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) 3)) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))) (- (* (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (+ (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))) (- (* (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (109 enodes)
* * [misc]simplify:  iters left: 4 (462 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))))) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)))) (- (* (- (* -0.466667 x) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (* (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))))) (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)))) (- (* (- (* -0.466667 x) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3))) (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))))))
* * * * [misc]progress:  [ 273 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (- (* (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))) (* (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667)))) (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (- (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))) (- (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (273 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (- (* (+ (* 1.0 1.0) (* (* -8.0 x) (- (* -8.0 x) 1.0))) (* (* (- (* -0.466667 x) 2.916667) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 274 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (pow (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) 1)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (401 enodes)
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 275 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (pow (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) 1)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (401 enodes)
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 276 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (pow (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) 1)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (401 enodes)
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 277 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (pow (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) 1)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (401 enodes)
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 278 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (pow (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) 1)) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 279 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (exp (+ (+ (log (- (* -0.466667 x) 2.916667)) (log (+ (* -0.466667 x) 2.916667))) (+ (log (* x x)) (log (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (log (- (* -0.466667 x) 2.916667)) (log (+ (* -0.466667 x) 2.916667))) (+ (log (* x x)) (log (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (log x) (log x)) (+ (log x) (log x))) (+ (log (- (* -0.466667 x) 2.916667)) (log (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (+ (+ (+ (log x) (log x)) (+ (log x) (log x))) (+ (log (- (* -0.466667 x) 2.916667)) (log (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 280 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (exp (+ (+ (log (- (* -0.466667 x) 2.916667)) (log (+ (* -0.466667 x) 2.916667))) (log (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (log (- (* -0.466667 x) 2.916667)) (log (+ (* -0.466667 x) 2.916667))) (log (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (* x x)) (log (- (* -0.466667 x) 2.916667))) (+ (log (* x x)) (log (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (+ (+ (log (* x x)) (log (- (* -0.466667 x) 2.916667))) (+ (log (* x x)) (log (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 281 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (exp (+ (log (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (+ (log (* x x)) (log (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (log (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (+ (log (* x x)) (log (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (187 enodes)
* * [misc]simplify:  iters left: 2 (328 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (* x x)) (log (* x x))) (log (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (+ (+ (log (* x x)) (log (* x x))) (log (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 282 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (exp (+ (log (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (log (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (log (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (log (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (176 enodes)
* * [misc]simplify:  iters left: 2 (334 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 1 3)) (log (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 1 3)) (log (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 283 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (exp (log (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (log (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (465 enodes)
* [exit]simplify:  Simplified to (log (* (* (* x x) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (* x x))))
* [exit]simplify:  Simplified to (log (* (* (* x x) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (* x x))))
* * * * [misc]progress:  [ 284 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (log (exp (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (exp (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (427 enodes)
* [exit]simplify:  Simplified to (pow (exp (* (* x x) (* x x))) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (pow (exp (* (* x x) (* x x))) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 285 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (cbrt (* (* (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* -0.466667 x) 2.916667)) (* (* (+ (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667))) (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* -0.466667 x) 2.916667)) (* (* (+ (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667))) (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (286 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x)))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x)))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 286 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (cbrt (* (* (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* -0.466667 x) 2.916667)) (* (* (+ (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (- (* -0.466667 x) 2.916667)) (* (* (+ (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (+ (* -0.466667 x) 2.916667))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (286 enodes)
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (* (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))) (* (* (pow (* x x) 3) (pow (* x x) 3)) (* (+ 2.916667 (* -0.466667 x)) (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 287 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (cbrt (* (* (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (231 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3)))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3)))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 288 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (cbrt (* (* (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (235 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (pow (* x x) 3) (pow (* x x) 3))) (* (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667)) (* (+ 2.916667 (* -0.466667 x)) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 289 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (cbrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (cbrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))) (cbrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (cbrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (372 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (cbrt (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (cbrt (* (- (* -0.466667 x) 2.916667) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))))
* [enter]simplify:  Simplifying (cbrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ 2.916667 (* -0.466667 x)) (* x x)) (* (* x x) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ 2.916667 (* -0.466667 x)) (* x x)) (* (* x x) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 290 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (cbrt (* (* (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (pow (* (+ 2.916667 (* -0.466667 x)) (* (* (* x x) (* x x)) (- (* -0.466667 x) 2.916667))) 3)
* [exit]simplify:  Simplified to (pow (* (+ 2.916667 (* -0.466667 x)) (* (* (* x x) (* x x)) (- (* -0.466667 x) 2.916667))) 3)
* * * * [misc]progress:  [ 291 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (sqrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (sqrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (+ 2.916667 (* -0.466667 x)) (* x x)) (* (* x x) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (sqrt (* (* (+ 2.916667 (* -0.466667 x)) (* x x)) (* (* x x) (- (* -0.466667 x) 2.916667))))
* [enter]simplify:  Simplifying (sqrt (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (+ 2.916667 (* -0.466667 x)) (* x x)) (* (* x x) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (sqrt (* (* (+ 2.916667 (* -0.466667 x)) (* x x)) (* (* x x) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 292 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* 1 (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 293 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* x x)) (* x x))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (271 enodes)
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* x x)))
* [exit]simplify:  Simplified to (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* x x)))
* * * * [misc]progress:  [ 294 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (- (* -0.466667 x) 2.916667) (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (213 enodes)
* * [misc]simplify:  iters left: 1 (248 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* * * * [misc]progress:  [ 295 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (/ (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)) (* (* (* x x) (* x x)) (+ (* (* 2.916667 2.916667) (- 2.916667)) (pow (* -0.466667 x) 3))))
* [exit]simplify:  Simplified to (* (+ (pow (* -0.466667 x) 3) (pow 2.916667 3)) (* (* (* x x) (* x x)) (+ (* (* 2.916667 2.916667) (- 2.916667)) (pow (* -0.466667 x) 3))))
* * * * [misc]progress:  [ 296 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (/ (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (- (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (464 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (* (- 2.916667) (* 2.916667 2.916667)))))
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (pow (* -0.466667 x) 3) (* (- 2.916667) (* 2.916667 2.916667)))))
* * * * [misc]progress:  [ 297 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (/ (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667)))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* x x))) (* (* x x) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))))
* [exit]simplify:  Simplified to (* (* (- (* -0.466667 x) 2.916667) (* (+ 2.916667 (* -0.466667 x)) (* x x))) (* (* x x) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))))
* * * * [misc]progress:  [ 298 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (/ (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x))) (* (+ (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (316 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (- (* -0.466667 x) 2.916667)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (- (* -0.466667 x) 2.916667)) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (* (* (* x x) (- (* -0.466667 x) 2.916667)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (- (* -0.466667 x) 2.916667)) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 299 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (/ (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* (* x x) (* x x)) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* (* x x) (* x x)) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 300 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (/ (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x))) (- (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* -0.466667 x) 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (* (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (* (- (* -0.466667 x) 2.916667) (- (* -0.466667 x) 2.916667)))
* * * * [misc]progress:  [ 301 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (/ (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x))) (+ (* (* 2.916667 2.916667) (- 2.916667)) (pow (* -0.466667 x) 3)))
* [exit]simplify:  Simplified to (* (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x))) (+ (* (* 2.916667 2.916667) (- 2.916667)) (pow (* -0.466667 x) 3)))
* * * * [misc]progress:  [ 302 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (/ (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x))) (+ (* -0.466667 x) 2.916667))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (* (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)))
* * * * [misc]progress:  [ 303 / 315 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (* x x) (* x x)) (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* * * * [misc]progress:  [ 304 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow x 8)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow x 8)))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (125 enodes)
* * [misc]simplify:  iters left: 4 (373 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (- (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (+ (* (pow x 6) 0.038889) (* 2.5e-05 (pow x 8)))) (* (pow x 7) 0.001587)))
* * * * [misc]progress:  [ 305 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ 1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ 1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (129 enodes)
* * [misc]simplify:  iters left: 4 (377 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (- (* x -0.466667) 2.916667) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (* (pow (/ 1 x) -8) 2.5e-05)) (- (* (pow x 6) 0.038889) (* (pow x 7) 0.001587))))
* * * * [misc]progress:  [ 306 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ -1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (/ -1 x) -8)))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (127 enodes)
* * [misc]simplify:  iters left: 4 (375 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (- (* x -0.466667) 2.916667)) (* (+ (* x -0.466667) 2.916667) (* x x)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* (pow x 6) 0.038889) (* (pow x 7) 0.001587)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (* (pow (/ -1 x) -8) 2.5e-05))))
* * * * [misc]progress:  [ 307 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow x 4))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow x 4))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (124 enodes)
* * [misc]simplify:  iters left: 4 (353 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (pow x 4)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (- (+ (* (pow (* x x) (+ 3 1)) 2.5e-05) (* (pow x 6) 0.038889)) (- (* (pow x 7) 0.001587) (* (* x x) (+ (* -9.333333 x) 14.0)))))
* * * * [misc]progress:  [ 308 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow x 4))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow x 4))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (124 enodes)
* * [misc]simplify:  iters left: 4 (353 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (pow x 4)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (- (+ (* (pow (* x x) (+ 3 1)) 2.5e-05) (* (pow x 6) 0.038889)) (- (* (pow x 7) 0.001587) (* (* x x) (+ (* -9.333333 x) 14.0)))))
* * * * [misc]progress:  [ 309 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow x 4))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (pow x 4))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (124 enodes)
* * [misc]simplify:  iters left: 4 (353 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (+ (* x -0.466667) 2.916667) (* (- (* x -0.466667) 2.916667) (pow x 4)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* x -0.466667) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (- (+ (* (pow (* x x) (+ 3 1)) 2.5e-05) (* (pow x 6) 0.038889)) (- (* (pow x 7) 0.001587) (* (* x x) (+ (* -9.333333 x) 14.0)))))
* * * * [misc]progress:  [ 310 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (+ 1.0 (* 1.0 (exp (* 3 (+ (log x) (log (- 8.0))))))) (+ (* 1.4210854715202004e-14 (pow x 2)) (+ (* 1.4210854715202004e-14 (* (exp (* 3 (+ (log x) (log (- 8.0))))) (pow x 2))) (+ (* 7.999999999999999 (* (exp (* 3 (+ (log x) (log (- 8.0))))) x)) (* 7.999999999999999 x))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (- (+ 1.0 (* 1.0 (exp (* 3 (+ (log x) (log (- 8.0))))))) (+ (* 1.4210854715202004e-14 (pow x 2)) (+ (* 1.4210854715202004e-14 (* (exp (* 3 (+ (log x) (log (- 8.0))))) (pow x 2))) (+ (* 7.999999999999999 (* (exp (* 3 (+ (log x) (log (- 8.0))))) x)) (* 7.999999999999999 x))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* * [misc]simplify:  iters left: 4 (353 enodes)
* [exit]simplify:  Simplified to (+ (- (- (+ (* (* 1.0 (pow x 3)) (pow (- 8.0) 3)) 1.0) (* (* (pow (- 8.0) 3) (pow x 3)) (* x (+ 7.999999999999999 (* x 1.4210854715202004e-14))))) (* x (+ 7.999999999999999 (* x 1.4210854715202004e-14)))) (+ (* 2.5e-05 (pow (* x x) (+ 3 1))) (+ (- (* (pow x 6) 0.038889) (* 0.001587 (pow x 7))) (* (* x x) (+ (* x -9.333333) 14.0)))))
* * * * [misc]progress:  [ 311 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (+ (* 2.916667 (pow x 4)) (* 3.552713678800501e-15 (pow x 3))) (* 0.466667 (pow x 5))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (- (+ (* 2.916667 (pow x 4)) (* 3.552713678800501e-15 (pow x 3))) (* 0.466667 (pow x 5))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (215 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* (pow x 4) 2.916667) (* (* x x) (* 3.552713678800501e-15 x))) (* (* x x) (+ (* x -9.333333) 14.0))) (- (- (* (pow x 5) 0.466667) (* 2.5e-05 (pow (* x x) (+ 3 1)))) (- (* 0.038889 (pow x 6)) (* (pow x 7) 0.001587))))
* * * * [misc]progress:  [ 312 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (+ (* 2.916667 (pow x 4)) (* 3.552713678800501e-15 (pow x 3))) (* 0.466667 (pow x 5))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (- (+ (* 2.916667 (pow x 4)) (* 3.552713678800501e-15 (pow x 3))) (* 0.466667 (pow x 5))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (215 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* (pow x 4) 2.916667) (* (* x x) (* 3.552713678800501e-15 x))) (* (* x x) (+ (* x -9.333333) 14.0))) (- (- (* (pow x 5) 0.466667) (* 2.5e-05 (pow (* x x) (+ 3 1)))) (- (* 0.038889 (pow x 6)) (* (pow x 7) 0.001587))))
* * * * [misc]progress:  [ 313 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* 0.217778088889 (pow x 6)) (* 8.506946388889 (pow x 4)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* 0.217778088889 (pow x 6)) (* 8.506946388889 (pow x 4)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (117 enodes)
* * [misc]simplify:  iters left: 4 (289 enodes)
* [exit]simplify:  Simplified to (+ (+ (- (* (pow x 6) 0.038889) (* 0.001587 (pow x 7))) (+ (* (* x x) (+ (* x -9.333333) 14.0)) (* (pow (* x x) (+ 1 3)) 2.5e-05))) (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (pow x 6) 0.217778088889) (* 8.506946388889 (pow x 4)))) (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 314 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* 0.217778088889 (pow x 6)) (* 8.506946388889 (pow x 4)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* 0.217778088889 (pow x 6)) (* 8.506946388889 (pow x 4)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (117 enodes)
* * [misc]simplify:  iters left: 4 (289 enodes)
* [exit]simplify:  Simplified to (+ (+ (- (* (pow x 6) 0.038889) (* 0.001587 (pow x 7))) (+ (* (* x x) (+ (* x -9.333333) 14.0)) (* (pow (* x x) (+ 1 3)) 2.5e-05))) (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (pow x 6) 0.217778088889) (* 8.506946388889 (pow x 4)))) (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * * [misc]progress:  [ 315 / 315 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* 0.217778088889 (pow x 6)) (* 8.506946388889 (pow x 4)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>
* [enter]simplify:  Simplifying (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (- (* 0.217778088889 (pow x 6)) (* 8.506946388889 (pow x 4)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (117 enodes)
* * [misc]simplify:  iters left: 4 (289 enodes)
* [exit]simplify:  Simplified to (+ (+ (- (* (pow x 6) 0.038889) (* 0.001587 (pow x 7))) (+ (* (* x x) (+ (* x -9.333333) 14.0)) (* (pow (* x x) (+ 1 3)) 2.5e-05))) (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (pow x 6) 0.217778088889) (* 8.506946388889 (pow x 4)))) (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ (/ (+ (* (* (+ (pow (* (- (* -8.0 x) 1.0) (* -8.0 x)) 3) (pow (* 1.0 1.0) 3)) (* (* (- (pow (* -0.466667 x) 3) (pow 2.916667 3)) (+ (pow (* -0.466667 x) 3) (pow 2.916667 3))) (* (* x x) (* x x)))) (* (- (pow 1.0 3) (pow (* -8.0 x) 3)) (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (* (+ (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (+ (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))) (+ (* (* -0.466667 x) (* -0.466667 x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) 2.916667))))) (* (- (* (pow 1.0 3) (pow 1.0 3)) (* (pow (* -8.0 x) 3) (pow (* -8.0 x) 3))) (- (pow (* -0.466667 x) 3) (pow 2.916667 3))))) (* (* (* (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))) (- (* -0.466667 x) 2.916667)) (+ (- (* (* 1.0 1.0) (* 1.0 1.0)) (* (- (* -8.0 x) 1.0) (* (* 1.0 1.0) (* -8.0 x)))) (* (* (* -8.0 x) (- (* -8.0 x) 1.0)) (* (* -8.0 x) (- (* -8.0 x) 1.0))))) (* (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (- (pow 1.0 3) (pow (* -8.0 x) 3))) (* (+ (* (* -0.466667 x) (* -0.466667 x)) (* (+ 2.916667 (* -0.466667 x)) 2.916667)) (+ (* 2.916667 (- 2.916667 (* -0.466667 x))) (* (* -0.466667 x) (* -0.466667 x))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))> #<alt-delta (Î» (x) (+ (+ (* (sqrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0)))))) (sqrt (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))> #<alt-delta (Î» (x) (+ (+ (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (cbrt (pow (pow x 3) (+ 3 1))))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* -0.466667 x) 2.916667) (- (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))> #<alt-delta (Î» (x) (+ (+ (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (+ (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x (+ 2 2)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))> #<alt-delta (Î» (x) (+ (+ (/ (- (* (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* (+ 1.0 (* -8.0 x)) (+ 1.0 (* -8.0 x)))) (- (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667)) (+ 1.0 (* -8.0 x)))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))> #<alt-event (Î» (x) (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -8.0 x)) (* 14.0 (* x x))) (* -9.333333 (* (* x x) x))) (* 2.916667 (* (* (* x x) x) x))) (* -0.466667 (* (* (* (* x x) x) x) x))) (* 0.038889 (* (* (* (* (* x x) x) x) x) x))) (* -0.001587 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 2.5e-05 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -8.0 x)) (* 14.0 (* x x))) (* -9.333333 (* (* x x) x))) (* 2.916667 (* (* (* x x) x) x))) (* -0.466667 (* (* (* (* x x) x) x) x))) (* 0.038889 (* (* (* (* (* x x) x) x) x) x))) (* -0.001587 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 2.5e-05 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (* (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3)))) (* (+ (* -0.466667 x) 2.916667) (+ (* (* (* -8.0 x) (* -8.0 x)) (* (* -8.0 x) (* -8.0 x))) (+ (* (* 1.0 (- (* -8.0 x) 1.0)) (* 1.0 (- (* -8.0 x) 1.0))) (* (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- (* -8.0 x) 1.0))))))) (+ (- (* 0.038889 (pow x 6)) (* 0.001587 (pow x 7))) (* 2.5e-05 (pow (* x x) (+ 3 1))))) (* (* x x) (+ (* x -9.333333) 14.0))))>)
* [enter]simplify:  Simplifying (/ (+ (* (+ (* (- (* -8.0 x) 1.0) (* -8.0 x)) (* 1.0 1.0)) (* (* (- (* -0.466667 x) 2.916667) (+ (* -0.466667 x) 2.916667)) (* (* x x) (* x x)))) (* (+ (pow 1.0 3) (pow (* -8.0 x) 3)) (- (* -0.466667 x) 2.916667))) (* (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 2.916667)) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (* x x)) (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* (* x -0.466667) (* x -0.466667)) (* 2.916667 2.916667)) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3))))
* [exit]simplify:  Simplified to (/ (+ (* (+ (* 1.0 1.0) (* (- (* -8.0 x) 1.0) (* -8.0 x))) (* (* (* x x) (* x x)) (* (- (* x -0.466667) 2.916667) (+ (* x -0.466667) 2.916667)))) (* (- (* x -0.466667) 2.916667) (+ (pow (* -8.0 x) 3) (pow 1.0 3)))) (* (- (* (* x -0.466667) (* x -0.466667)) (* 2.916667 2.916667)) (- (pow (* (* -8.0 x) (* -8.0 x)) 3) (pow (* 1.0 (- (* -8.0 x) 1.0)) 3))))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
