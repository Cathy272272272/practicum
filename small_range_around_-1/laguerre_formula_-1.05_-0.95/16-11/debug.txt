* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -11.0 x)) (* 27.5 (* x x))) (* -27.5 (* (* x x) x))) (* 13.75 (* (* (* x x) x) x))) (* -3.85 (* (* (* (* x x) x) x) x))) (* 0.641667 (* (* (* (* (* x x) x) x) x) x))) (* -0.065476 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 0.004092 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -0.000152 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 3e-06 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (384 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow x (+ 3 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 2 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow (* x x) 3) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 3 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow (pow x 3) 2) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 4 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow (* (pow x 3) (pow x 3)) 1) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 5 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (exp (+ (* (log x) 3) (* (log x) 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 6 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (exp (+ (* (log x) 3) (log (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 7 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (exp (+ (log (pow x 3)) (* (log x) 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 8 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (exp (+ (log (pow x 3)) (log (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 9 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (exp (log (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 10 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (log (exp (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 11 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 12 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 13 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 14 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 15 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* 1 (* (pow x 3) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 16 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (* x x)) x) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 17 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 18 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) x) (* x x)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 19 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 20 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) 1) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 21 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* x x) (* x (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 22 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 23 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* x (* (* x x) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 24 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 25 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* 1 (* (pow x 3) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 26 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 27 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x (+ 2 2))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 28 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) (+ 1 1))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 29 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) 2)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 30 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* (* x x) (* x x)) 1)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 31 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) 2)) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 32 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) (+ 1 1))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 33 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* (* x x) (* x x)) 1)) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 34 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (exp (+ (log (* x x)) (log (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 35 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (exp (log (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 36 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (log (exp (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 37 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 38 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 39 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 40 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 41 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* 1 (* (* x x) (* x x)))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 42 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* (* x x) x) x)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 43 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* x (* x (* x x)))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 44 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 45 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow x (+ 2 2)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 46 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow (* x x) (+ 1 1)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 47 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow (* x x) 2) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 48 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow (* (* x x) (* x x)) 1) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 49 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow (* x x) 2) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 50 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow (* x x) (+ 1 1)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 51 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow (* (* x x) (* x x)) 1) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 52 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (exp (+ (log (* x x)) (log (* x x)))) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 53 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (exp (log (* (* x x) (* x x)))) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 54 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (log (exp (* (* x x) (* x x)))) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 55 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 56 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 57 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 58 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 59 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* 1 (* (* x x) (* x x))) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 60 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* (* x x) x) x) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 61 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* x (* x (* x x))) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 62 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 63 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow x (+ 2 2))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 64 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow (* x x) (+ 1 1))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 65 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow (* x x) 2)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 66 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow (* (* x x) (* x x)) 1)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 67 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow (* x x) 2)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 68 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow (* x x) (+ 1 1))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 69 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow (* (* x x) (* x x)) 1)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 70 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (exp (+ (log (* x x)) (log (* x x))))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 71 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (exp (log (* (* x x) (* x x))))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 72 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (log (exp (* (* x x) (* x x))))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 73 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 74 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x))))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 75 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 76 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x))))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 77 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* 1 (* (* x x) (* x x)))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 78 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* (* x x) x) x)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 79 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* x (* x (* x x)))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 80 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 81 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (457 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x))))
* * * * [misc]progress:  [ 82 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (457 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x))))
* * * * [misc]progress:  [ 83 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (131 enodes)
* * [misc]simplify:  iters left: 4 (488 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (+ (* (pow (* x x) (+ 3 1)) (+ (+ (* x -0.000152) 0.004092) (* x (* 3e-06 x)))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (exp (* (+ 0 (log x)) (+ 3 3))) (+ 0.641667 (* x -0.065476)))))
* * * * [misc]progress:  [ 84 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (489 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* 3e-06 x) (pow x 3)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (* (+ (* x -0.000152) 0.004092) (* (* (* x x) (* x x)) (pow x 4)))) (+ (+ (* -11.0 x) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* * * * [misc]progress:  [ 85 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (489 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* 3e-06 x) (pow x 3)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (* (+ (* x -0.000152) 0.004092) (* (* (* x x) (* x x)) (pow x 4)))) (+ (+ (* -11.0 x) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* * * * [misc]progress:  [ 86 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (489 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* 3e-06 x) (pow x 3)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (* (+ (* x -0.000152) 0.004092) (* (* (* x x) (* x x)) (pow x 4)))) (+ (+ (* -11.0 x) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* * * * [misc]progress:  [ 87 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow x 4) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow x 4) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (484 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (pow x 4) (+ (* x -0.000152) 0.004092)) (* (* (* 3e-06 x) x) (* (* x x) (* x x))))) (+ (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (+ (* -11.0 x) 1.0))))
* * * * [misc]progress:  [ 88 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow x 4) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow x 4) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (484 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (pow x 4) (+ (* x -0.000152) 0.004092)) (* (* (* 3e-06 x) x) (* (* x x) (* x x))))) (+ (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (+ (* -11.0 x) 1.0))))
* * * * [misc]progress:  [ 89 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow x 4) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (pow x 4) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (484 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (pow x 4) (+ (* x -0.000152) 0.004092)) (* (* (* 3e-06 x) x) (* (* x x) (* x x))))) (+ (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (+ (* -11.0 x) 1.0))))
* * * * [misc]progress:  [ 90 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow x 4)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow x 4)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (481 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.000152) 0.004092) (pow (* x x) (+ 1 3))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (+ (* (* (pow x 3) (pow x 3)) (* 3e-06 (pow x 4))) (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)))))
* * * * [misc]progress:  [ 91 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow x 4)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow x 4)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (481 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.000152) 0.004092) (pow (* x x) (+ 1 3))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (+ (* (* (pow x 3) (pow x 3)) (* 3e-06 (pow x 4))) (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)))))
* * * * [misc]progress:  [ 92 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow x 4)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (pow x 4)) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (481 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.000152) 0.004092) (pow (* x x) (+ 1 3))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (+ (* (* (pow x 3) (pow x 3)) (* 3e-06 (pow x 4))) (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -8) into (pow (/ 1 x) -8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -8) into (pow (/ -1 x) -8)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) in x
* [misc]taylor:  Taking taylor expansion of (* (* 3e-06 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 3e-06 x) in x
* [misc]taylor:  Taking taylor expansion of 3e-06 in x
* [misc]backup-simplify:  Simplify 3e-06 into 3e-06
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.000152) 0.004092) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.000152) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.000152 in x
* [misc]backup-simplify:  Simplify -0.000152 into -0.000152
* [misc]taylor:  Taking taylor expansion of 0.004092 in x
* [misc]backup-simplify:  Simplify 0.004092 into 0.004092
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) in x
* [misc]taylor:  Taking taylor expansion of (* (* 3e-06 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 3e-06 x) in x
* [misc]taylor:  Taking taylor expansion of 3e-06 in x
* [misc]backup-simplify:  Simplify 3e-06 into 3e-06
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.000152) 0.004092) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.000152) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.000152 in x
* [misc]backup-simplify:  Simplify -0.000152 into -0.000152
* [misc]taylor:  Taking taylor expansion of 0.004092 in x
* [misc]backup-simplify:  Simplify 0.004092 into 0.004092
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]backup-simplify:  Simplify (* 3e-06 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.000152) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.004092) into 0.004092
* [misc]backup-simplify:  Simplify (+ 0 0.004092) into 0.004092
* [misc]backup-simplify:  Simplify (* 0.004092 (pow x 8)) into (* 0.004092 (pow x 8))
* [misc]backup-simplify:  Simplify (* 0.004092 (pow x 8)) into (* 0.004092 (pow x 8))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3e-06 1) (* 0 0)) into 3e-06
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 3e-06 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.000152)) into (- 0.000152)
* [misc]backup-simplify:  Simplify (+ (- 0.000152) 0) into (- 0.000152)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.000152)) into (- 0.000152)
* [misc]backup-simplify:  Simplify (+ (* 0.004092 0) (* (- 0.000152) (pow x 8))) into (- (* 0.000152 (pow x 8)))
* [misc]backup-simplify:  Simplify (- (* 0.000152 (pow x 8))) into (- (* 0.000152 (pow x 8)))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 3e-06 1) (* 0 0))) into 3e-06
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.000152))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 3e-06 0) into 3e-06
* [misc]backup-simplify:  Simplify (+ (* 0.004092 0) (+ (* (- 0.000152) 0) (* 3e-06 (pow x 8)))) into (* 3e-06 (pow x 8))
* [misc]backup-simplify:  Simplify (* 3e-06 (pow x 8)) into (* 3e-06 (pow x 8))
* [misc]backup-simplify:  Simplify (+ (* (* 3e-06 (pow x 8)) (pow x 2)) (+ (* (- (* 0.000152 (pow x 8))) x) (* 0.004092 (pow x 8)))) into (- (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8))) (* 0.000152 (pow x 9)))
* [misc]approximate:  Taking taylor expansion of (* (+ (* (* 3e-06 (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) -0.000152) 0.004092)) (pow (* (/ 1 x) (/ 1 x)) (+ 3 1))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* 3e-06 (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) -0.000152) 0.004092)) (pow (* (/ 1 x) (/ 1 x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* 3e-06 (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) -0.000152) 0.004092)) in x
* [misc]taylor:  Taking taylor expansion of (* (* 3e-06 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 3e-06 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 3e-06 in x
* [misc]backup-simplify:  Simplify 3e-06 into 3e-06
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.000152) 0.004092) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.000152) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.000152 in x
* [misc]backup-simplify:  Simplify -0.000152 into -0.000152
* [misc]taylor:  Taking taylor expansion of 0.004092 in x
* [misc]backup-simplify:  Simplify 0.004092 into 0.004092
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* 3e-06 (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) -0.000152) 0.004092)) (pow (* (/ 1 x) (/ 1 x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* 3e-06 (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) -0.000152) 0.004092)) in x
* [misc]taylor:  Taking taylor expansion of (* (* 3e-06 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 3e-06 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 3e-06 in x
* [misc]backup-simplify:  Simplify 3e-06 into 3e-06
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.000152) 0.004092) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.000152) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.000152 in x
* [misc]backup-simplify:  Simplify -0.000152 into -0.000152
* [misc]taylor:  Taking taylor expansion of 0.004092 in x
* [misc]backup-simplify:  Simplify 0.004092 into 0.004092
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (* 3e-06 1) into 3e-06
* [misc]backup-simplify:  Simplify (* 3e-06 1) into 3e-06
* [misc]backup-simplify:  Simplify (+ 3e-06 0) into 3e-06
* [misc]backup-simplify:  Simplify (* 3e-06 (pow x -8)) into (/ 3e-06 (pow x 8))
* [misc]backup-simplify:  Simplify (/ 3e-06 (pow x 8)) into (/ 3e-06 (pow x 8))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (* 1 -0.000152) into -0.000152
* [misc]backup-simplify:  Simplify (+ -0.000152 0) into (- 0.000152)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.000152)) into (- 0.000152)
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (* (- 0.000152) (pow x -8))) into (- (* 0.000152 (/ 1 (pow x 8))))
* [misc]backup-simplify:  Simplify (- (* 0.000152 (/ 1 (pow x 8)))) into (- (* 0.000152 (/ 1 (pow x 8))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -0.000152)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.004092) into 0.004092
* [misc]backup-simplify:  Simplify (+ 0 0.004092) into 0.004092
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (+ (* (- 0.000152) 0) (* 0.004092 (pow x -8)))) into (* 0.004092 (/ 1 (pow x 8)))
* [misc]backup-simplify:  Simplify (* 0.004092 (/ 1 (pow x 8))) into (/ 0.004092 (pow x 8))
* [misc]backup-simplify:  Simplify (+ (/ 0.004092 (pow (/ 1 x) 8)) (+ (* (- (* 0.000152 (/ 1 (pow (/ 1 x) 8)))) (/ 1 (/ 1 x))) (* (/ 3e-06 (pow (/ 1 x) 8)) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8))) (* 0.000152 (pow x 9)))
* [misc]approximate:  Taking taylor expansion of (* (+ (* (* 3e-06 (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) -0.000152) 0.004092)) (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* 3e-06 (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) -0.000152) 0.004092)) (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* 3e-06 (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) -0.000152) 0.004092)) in x
* [misc]taylor:  Taking taylor expansion of (* (* 3e-06 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 3e-06 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 3e-06 in x
* [misc]backup-simplify:  Simplify 3e-06 into 3e-06
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.000152) 0.004092) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.000152) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.000152 in x
* [misc]backup-simplify:  Simplify -0.000152 into -0.000152
* [misc]taylor:  Taking taylor expansion of 0.004092 in x
* [misc]backup-simplify:  Simplify 0.004092 into 0.004092
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* 3e-06 (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) -0.000152) 0.004092)) (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* 3e-06 (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) -0.000152) 0.004092)) in x
* [misc]taylor:  Taking taylor expansion of (* (* 3e-06 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 3e-06 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 3e-06 in x
* [misc]backup-simplify:  Simplify 3e-06 into 3e-06
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.000152) 0.004092) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.000152) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.000152 in x
* [misc]backup-simplify:  Simplify -0.000152 into -0.000152
* [misc]taylor:  Taking taylor expansion of 0.004092 in x
* [misc]backup-simplify:  Simplify 0.004092 into 0.004092
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (* 3e-06 -1) into -3e-06
* [misc]backup-simplify:  Simplify (* -3e-06 -1) into 3e-06
* [misc]backup-simplify:  Simplify (+ 3e-06 0) into 3e-06
* [misc]backup-simplify:  Simplify (* 3e-06 (pow x -8)) into (/ 3e-06 (pow x 8))
* [misc]backup-simplify:  Simplify (/ 3e-06 (pow x 8)) into (/ 3e-06 (pow x 8))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3e-06 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (* -1 -0.000152) into 0.000152
* [misc]backup-simplify:  Simplify (+ 0.000152 0) into 0.000152
* [misc]backup-simplify:  Simplify (+ 0 0.000152) into 0.000152
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (* 0.000152 (pow x -8))) into (* 0.000152 (/ 1 (pow x 8)))
* [misc]backup-simplify:  Simplify (* 0.000152 (/ 1 (pow x 8))) into (/ 0.000152 (pow x 8))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3e-06 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -0.000152)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.004092) into 0.004092
* [misc]backup-simplify:  Simplify (+ 0 0.004092) into 0.004092
* [misc]backup-simplify:  Simplify (+ (* 3e-06 0) (+ (* 0.000152 0) (* 0.004092 (pow x -8)))) into (* 0.004092 (/ 1 (pow x 8)))
* [misc]backup-simplify:  Simplify (* 0.004092 (/ 1 (pow x 8))) into (/ 0.004092 (pow x 8))
* [misc]backup-simplify:  Simplify (+ (/ 0.004092 (pow (/ 1 (- x)) 8)) (+ (* (/ 0.000152 (pow (/ 1 (- x)) 8)) (/ 1 (/ 1 (- x)))) (* (/ 3e-06 (pow (/ 1 (- x)) 8)) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8))) (* 0.000152 (pow x 9)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (+ (* x -27.5) 27.5) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -27.5) 27.5) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -27.5) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* x -27.5) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -27.5) 27.5) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -27.5) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* x -27.5) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -27.5) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 27.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -27.5)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (- 27.5) 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (* (- 27.5) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 1) (+ (* (- 27.5) 0) (* 0 0))) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -27.5)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* (- 27.5) 1) (+ (* 0 0) (* 0 0)))) into (- 27.5)
* [misc]backup-simplify:  Simplify (- 27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* (- 27.5) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* (- 27.5) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* (- 27.5) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* (- 27.5) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* (- 27.5) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* (- 27.5) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) (pow x 3)) (* 27.5 (pow x 2))) into (- (* 27.5 (pow x 2)) (* 27.5 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ (* (/ 1 x) -27.5) 27.5) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -27.5) 27.5) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -27.5) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -27.5) 27.5) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -27.5) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -27.5) into -27.5
* [misc]backup-simplify:  Simplify (+ -27.5 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 27.5) 1) into -27.5
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -27.5)) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 0) (* 27.5 1)) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 0) (+ (* 27.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 0) (+ (* 27.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 0) (+ (* 27.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 0) (+ (* 27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 0) (+ (* 27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 0) (+ (* 27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 (pow (/ 1 (/ 1 x)) 2)) (* -27.5 (pow (/ 1 (/ 1 x)) 3))) into (- (* 27.5 (pow x 2)) (* 27.5 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -27.5) 27.5) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -27.5) 27.5) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -27.5) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -27.5) 27.5) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -27.5) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -27.5) into 27.5
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 27.5 1) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -27.5)) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (* 27.5 1)) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* 27.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* 27.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* 27.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* 27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* 27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -27.5)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* 27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 27.5 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 27.5 (pow x 2)) (* 27.5 (pow x 3)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (exp (* (log (* x x)) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 2 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (exp (* (log (* x x)) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 3 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x (* 2 (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* 2 (+ 3 1))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* * * * [misc]progress:  [ 4 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (* 1 (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* 1 (+ 3 1))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (+ 3 1)
* [exit]simplify:  Simplified to (+ 3 1)
* * * * [misc]progress:  [ 5 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1)))) (cbrt (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* * * * [misc]progress:  [ 6 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) (sqrt (+ 3 1))) (sqrt (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (pow (* x x) (sqrt (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* * * * [misc]progress:  [ 7 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) 1) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 8 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (pow (* x x) 3) (pow (* x x) 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 9 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 10 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) (+ 3 1)) 1)) (* (+ (* x -27.5) 27.5) (* x x)))))>
* * * * [misc]progress:  [ 11 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (exp (log (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (log (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* * * * [misc]progress:  [ 12 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (log (exp (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 13 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1)))) (cbrt (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 14 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (cbrt (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* * * * [misc]progress:  [ 15 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (sqrt (pow (* x x) (+ 3 1))) (sqrt (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 16 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* 1 (pow (* x x) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* * * * [misc]progress:  [ 17 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x (+ 2 2))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 18 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* x x) (+ 1 1))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 19 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* x x) 2)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 20 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* (* x x) (* x x)) 1)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 21 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* x x) 2)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* * * * [misc]progress:  [ 22 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* x x) (+ 1 1))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 23 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* (* x x) (* x x)) 1)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* * * * [misc]progress:  [ 24 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (exp (+ (log (* x x)) (log (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 25 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (exp (log (* (* x x) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 26 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (log (exp (* (* x x) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 27 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 28 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 29 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 30 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 31 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* 1 (* (* x x) (* x x)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* * * * [misc]progress:  [ 32 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* (* x x) x) x)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 33 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* x (* x (* x x)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 34 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* * * * [misc]progress:  [ 35 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (pow (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) 1) (* (+ (* x -27.5) 27.5) (* x x)))))>
* * * * [misc]progress:  [ 36 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (exp (+ (log (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (* (log (* x x)) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (log (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (* (log (* x x)) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (284 enodes)
* * [misc]simplify:  iters left: 1 (456 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (* (+ 1 3) (log (* x x))))
* [exit]simplify:  Simplified to (+ (log (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (* (+ 1 3) (log (* x x))))
* * * * [misc]progress:  [ 37 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (exp (+ (log (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (* (log (* x x)) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (log (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (* (log (* x x)) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (284 enodes)
* * [misc]simplify:  iters left: 1 (456 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (* (+ 1 3) (log (* x x))))
* [exit]simplify:  Simplified to (+ (log (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (* (+ 1 3) (log (* x x))))
* * * * [misc]progress:  [ 38 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (exp (+ (log (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (log (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (log (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (log (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (207 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (* (+ 3 1) (+ (log x) (log x))))
* [exit]simplify:  Simplified to (+ (log (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (* (+ 3 1) (+ (log x) (log x))))
* * * * [misc]progress:  [ 39 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (exp (log (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (log (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (102 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (* (log x) (+ (+ 1 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (* (log x) (+ (+ 1 3) (+ 1 3))))
* * * * [misc]progress:  [ 40 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (log (exp (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (exp (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (238 enodes)
* * [misc]simplify:  iters left: 1 (330 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) (+ 1 3))) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))))
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) (+ 1 3))) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))))
* * * * [misc]progress:  [ 41 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (cbrt (* (* (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (* (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow (* x x) (+ 1 3)) 3) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (* (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* [exit]simplify:  Simplified to (* (* (pow (pow (* x x) (+ 1 3)) 3) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (* (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* * * * [misc]progress:  [ 42 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (* (cbrt (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1)))) (cbrt (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))) (cbrt (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1)))) (cbrt (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (127 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))))) (cbrt (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))))) (cbrt (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (123 enodes)
* * [misc]simplify:  iters left: 1 (146 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* [exit]simplify:  Simplified to (cbrt (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* * * * [misc]progress:  [ 43 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (cbrt (* (* (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1)))) (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (* (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1)))) (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) 3)
* * * * [misc]progress:  [ 44 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (sqrt (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1)))) (sqrt (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (123 enodes)
* * [misc]simplify:  iters left: 1 (146 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* [enter]simplify:  Simplifying (sqrt (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (123 enodes)
* * [misc]simplify:  iters left: 1 (146 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* * * * [misc]progress:  [ 45 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* 1 (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* * * * [misc]progress:  [ 46 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) 3)) (pow (* x x) 1)) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (278 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))) (pow (* x x) 3))
* [exit]simplify:  Simplified to (* (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))) (pow (* x x) 3))
* * * * [misc]progress:  [ 47 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x (+ 3 1))) (pow x (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x (+ 3 1)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (127 enodes)
* * [misc]simplify:  iters left: 1 (145 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))) (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))) (pow x (+ 3 1)))
* * * * [misc]progress:  [ 48 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1))))) (cbrt (pow (* x x) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (139 enodes)
* * [misc]simplify:  iters left: 2 (268 enodes)
* * [misc]simplify:  iters left: 1 (398 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (pow (* x x) (+ 1 3))) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (cbrt (pow (* x x) (+ 1 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (pow (* x x) (+ 1 3))) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))) (cbrt (pow (* x x) (+ 1 3))))
* * * * [misc]progress:  [ 49 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (sqrt (pow (* x x) (+ 3 1)))) (sqrt (pow (* x x) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (sqrt (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (121 enodes)
* * [misc]simplify:  iters left: 1 (137 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (* x x) (+ 1 3))) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))))
* [exit]simplify:  Simplified to (* (sqrt (pow (* x x) (+ 1 3))) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))))
* * * * [misc]progress:  [ 50 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) 1) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) 1)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))
* [exit]simplify:  Simplified to (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))
* * * * [misc]progress:  [ 51 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (* (cbrt (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (cbrt (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)))) (* (cbrt (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (pow (* x x) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (cbrt (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (cbrt (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* * * * [misc]progress:  [ 52 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (sqrt (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (* (sqrt (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (pow (* x x) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (sqrt (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (sqrt (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152)))))
* * * * [misc]progress:  [ 53 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* 1 (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1)))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (125 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* x -0.000152))))
* * * * [misc]progress:  [ 54 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (/ (* (+ (pow (* (* 3e-06 x) x) 3) (pow (+ (* x -0.000152) 0.004092) 3)) (pow (* x x) (+ 3 1))) (+ (* (* (* 3e-06 x) x) (* (* 3e-06 x) x)) (- (* (+ (* x -0.000152) 0.004092) (+ (* x -0.000152) 0.004092)) (* (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ (pow (* (* 3e-06 x) x) 3) (pow (+ (* x -0.000152) 0.004092) 3)) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (358 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow (* x x) (+ 1 3)) 3e-06) (* (* (* 3e-06 x) (* x x)) (* (* 3e-06 x) (* x x)))) (* (* (+ 0.004092 (* -0.000152 x)) (+ 0.004092 (* -0.000152 x))) (* (pow (* x x) (+ 1 3)) (+ 0.004092 (* -0.000152 x)))))
* [exit]simplify:  Simplified to (+ (* (* (pow (* x x) (+ 1 3)) 3e-06) (* (* (* 3e-06 x) (* x x)) (* (* 3e-06 x) (* x x)))) (* (* (+ 0.004092 (* -0.000152 x)) (+ 0.004092 (* -0.000152 x))) (* (pow (* x x) (+ 1 3)) (+ 0.004092 (* -0.000152 x)))))
* * * * [misc]progress:  [ 55 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (/ (* (- (* (* (* 3e-06 x) x) (* (* 3e-06 x) x)) (* (+ (* x -0.000152) 0.004092) (+ (* x -0.000152) 0.004092))) (pow (* x x) (+ 3 1))) (- (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (* (- (* (* (* 3e-06 x) x) (* (* 3e-06 x) x)) (* (+ (* x -0.000152) 0.004092) (+ (* x -0.000152) 0.004092))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (351 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) (+ 1 3)) (+ (+ 0.004092 (* -0.000152 x)) (* (* 3e-06 x) x))) (- (* (* 3e-06 x) x) (+ 0.004092 (* -0.000152 x))))
* [exit]simplify:  Simplified to (* (* (pow (* x x) (+ 1 3)) (+ (+ 0.004092 (* -0.000152 x)) (* (* 3e-06 x) x))) (- (* (* 3e-06 x) x) (+ 0.004092 (* -0.000152 x))))
* * * * [misc]progress:  [ 56 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (pow (* x x) (+ 3 1)) (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* * * * [misc]progress:  [ 57 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (pow (* (+ (* x -27.5) 27.5) (* x x)) 1))))>
* [enter]simplify:  Simplifying (* (+ (* x -27.5) 27.5) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ 27.5 (* x -27.5)))
* [exit]simplify:  Simplified to (* (* x x) (+ 27.5 (* x -27.5)))
* * * * [misc]progress:  [ 58 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (pow (* (+ (* x -27.5) 27.5) (* x x)) 1))))>
* * * * [misc]progress:  [ 59 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (exp (+ (log (+ (* x -27.5) 27.5)) (log (* x x)))))))>
* [enter]simplify:  Simplifying (+ (log (+ (* x -27.5) 27.5)) (log (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 27.5 (* x -27.5))) (log (* x x)))
* [exit]simplify:  Simplified to (+ (log (+ 27.5 (* x -27.5))) (log (* x x)))
* * * * [misc]progress:  [ 60 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (exp (log (* (+ (* x -27.5) 27.5) (* x x)))))))>
* [enter]simplify:  Simplifying (log (* (+ (* x -27.5) 27.5) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (log (* (* x x) (+ 27.5 (* x -27.5))))
* * * * [misc]progress:  [ 61 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (log (exp (* (+ (* x -27.5) 27.5) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (* (+ (* x -27.5) 27.5) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ 27.5 (* x -27.5)))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ 27.5 (* x -27.5)))
* * * * [misc]progress:  [ 62 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (+ (* x -27.5) 27.5) (+ (* x -27.5) 27.5)) (+ (* x -27.5) 27.5)) (* (* (* x x) (* x x)) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (+ (* x -27.5) 27.5) (+ (* x -27.5) 27.5)) (+ (* x -27.5) 27.5)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * * * [misc]progress:  [ 63 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (* (cbrt (* (+ (* x -27.5) 27.5) (* x x))) (cbrt (* (+ (* x -27.5) 27.5) (* x x)))) (cbrt (* (+ (* x -27.5) 27.5) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* x -27.5) 27.5) (* x x))) (cbrt (* (+ (* x -27.5) 27.5) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ 27.5 (* x -27.5)))) (cbrt (* (* x x) (+ 27.5 (* x -27.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ 27.5 (* x -27.5)))) (cbrt (* (* x x) (+ 27.5 (* x -27.5)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* x -27.5) 27.5) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ 27.5 (* x -27.5))))
* * * * [misc]progress:  [ 64 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -27.5) 27.5) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -27.5) 27.5) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (387 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ 27.5 (* x -27.5))) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ 27.5 (* x -27.5))) 3)
* * * * [misc]progress:  [ 65 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (sqrt (* (+ (* x -27.5) 27.5) (* x x))) (sqrt (* (+ (* x -27.5) 27.5) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ (* x -27.5) 27.5) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ 27.5 (* x -27.5))))
* [enter]simplify:  Simplifying (sqrt (* (+ (* x -27.5) 27.5) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ 27.5 (* x -27.5))))
* * * * [misc]progress:  [ 66 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* 1 (* (+ (* x -27.5) 27.5) (* x x))))))>
* * * * [misc]progress:  [ 67 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (* (+ (* x -27.5) 27.5) x) x))))>
* [enter]simplify:  Simplifying (* (+ (* x -27.5) 27.5) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* x (+ 27.5 (* x -27.5)))
* [exit]simplify:  Simplified to (* x (+ 27.5 (* x -27.5)))
* * * * [misc]progress:  [ 68 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (* (cbrt (+ (* x -27.5) 27.5)) (cbrt (+ (* x -27.5) 27.5))) (* (cbrt (+ (* x -27.5) 27.5)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* x -27.5) 27.5)) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ 27.5 (* x -27.5))))
* * * * [misc]progress:  [ 69 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (sqrt (+ (* x -27.5) 27.5)) (* (sqrt (+ (* x -27.5) 27.5)) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* x -27.5) 27.5)) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ 27.5 (* x -27.5))))
* * * * [misc]progress:  [ 70 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* 1 (* (+ (* x -27.5) 27.5) (* x x))))))>
* [enter]simplify:  Simplifying (* (+ (* x -27.5) 27.5) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ 27.5 (* x -27.5)))
* [exit]simplify:  Simplified to (* (* x x) (+ 27.5 (* x -27.5)))
* * * * [misc]progress:  [ 71 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (/ (* (+ (pow (* x -27.5) 3) (pow 27.5 3)) (* x x)) (+ (* (* x -27.5) (* x -27.5)) (- (* 27.5 27.5) (* (* x -27.5) 27.5)))))))>
* [enter]simplify:  Simplifying (* (+ (pow (* x -27.5) 3) (pow 27.5 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (246 enodes)
* * [misc]simplify:  iters left: 1 (306 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (pow 27.5 3)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))
* [exit]simplify:  Simplified to (+ (* (* x x) (pow 27.5 3)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))
* * * * [misc]progress:  [ 72 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (/ (* (- (* (* x -27.5) (* x -27.5)) (* 27.5 27.5)) (* x x)) (- (* x -27.5) 27.5)))))>
* [enter]simplify:  Simplifying (* (- (* (* x -27.5) (* x -27.5)) (* 27.5 27.5)) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (410 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (* (* x x) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5))))
* * * * [misc]progress:  [ 73 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (* x x) (+ (* x -27.5) 27.5)))))>
* * * * [misc]progress:  [ 74 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x 8)) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x 8)) (* (+ (* x -27.5) 27.5) (* x x))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x))))) (+ (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (+ (* x -0.000152) 0.004092) (pow x 8))) (* 3e-06 (* (* x x) (pow x 8)))))
* * * * [misc]progress:  [ 75 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ 1 x) -8)) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ 1 x) -8)) (* (+ (* x -27.5) 27.5) (* x x))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* x x) (+ (* x -27.5) 27.5))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (/ 1 x) -8))) (+ (+ (* x -11.0) 1.0) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 76 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ -1 x) -8)) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ -1 x) -8)) (* (+ (* x -27.5) 27.5) (* x x))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (* x x) (+ (* x -27.5) 27.5))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (/ -1 x) -8))) (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))
* * * * [misc]progress:  [ 77 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (* (+ 13.75 (* -3.85 x)) (pow x 4)) (* (+ (* -27.5 x) 27.5) (* x x))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))))
* * * * [misc]progress:  [ 78 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (* (+ 13.75 (* -3.85 x)) (pow x 4)) (* (+ (* -27.5 x) 27.5) (* x x))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))))
* * * * [misc]progress:  [ 79 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (* (+ 13.75 (* -3.85 x)) (pow x 4)) (* (+ (* -27.5 x) 27.5) (* x x))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))))
* * * * [misc]progress:  [ 80 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (- (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8))) (* 0.000152 (pow x 9))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (- (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8))) (* 0.000152 (pow x 9))) (* (+ (* x -27.5) 27.5) (* x x))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (+ (- (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8)))) (- (* 0.000152 (pow x 9)) (* (+ (* -27.5 x) 27.5) (* x x)))) (+ (+ (* x -11.0) 1.0) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 81 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (- (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8))) (* 0.000152 (pow x 9))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (- (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8))) (* 0.000152 (pow x 9))) (* (+ (* x -27.5) 27.5) (* x x))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (+ (- (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8)))) (- (* 0.000152 (pow x 9)) (* (+ (* -27.5 x) 27.5) (* x x)))) (+ (+ (* x -11.0) 1.0) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 82 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (- (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8))) (* 0.000152 (pow x 9))) (* (+ (* x -27.5) 27.5) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (- (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8))) (* 0.000152 (pow x 9))) (* (+ (* x -27.5) 27.5) (* x x))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (+ (- (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (+ (* 3e-06 (pow x 10)) (* 0.004092 (pow x 8)))) (- (* 0.000152 (pow x 9)) (* (+ (* -27.5 x) 27.5) (* x x)))) (+ (+ (* x -11.0) 1.0) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 83 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (- (* 27.5 (pow x 2)) (* 27.5 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (- (* 27.5 (pow x 2)) (* 27.5 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (+ (* x -11.0) 1.0) (* (* x x) (- 27.5 (* x 27.5)))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))))
* * * * [misc]progress:  [ 84 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (- (* 27.5 (pow x 2)) (* 27.5 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (- (* 27.5 (pow x 2)) (* 27.5 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (+ (* x -11.0) 1.0) (* (* x x) (- 27.5 (* x 27.5)))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))))
* * * * [misc]progress:  [ 85 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (- (* 27.5 (pow x 2)) (* 27.5 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (- (* 27.5 (pow x 2)) (* 27.5 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (+ (* x -11.0) 1.0) (* (* x x) (- 27.5 (* x 27.5)))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -8) into (pow (/ 1 x) -8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -8) into (pow (/ -1 x) -8)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* x -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* x -27.5) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* x -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* x -27.5) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* x -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* x -27.5) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* x -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* x -27.5) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]backup-simplify:  Simplify (* 0 -27.5) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (* 0 -27.5) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (* 27.5 27.5) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -27.5)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ 0 (- 27.5)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -27.5)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ 0 (- 27.5)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* 27.5 (- 27.5)) (* (- 27.5) 27.5)) into (- 1512.5)
* [misc]backup-simplify:  Simplify (- 1512.5) into (- 1512.5)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* (- 27.5) (- 27.5)) (* 0 27.5))) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (+ (* 756.25 (pow x 2)) (+ (* (- 1512.5) x) 756.25)) into (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))
* [misc]approximate:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 x) -27.5)) (+ 27.5 (* (/ 1 x) -27.5))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 x) -27.5)) (+ 27.5 (* (/ 1 x) -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 x) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 x) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 x) -27.5)) (+ 27.5 (* (/ 1 x) -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 x) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 x) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]backup-simplify:  Simplify (* 1 -27.5) into -27.5
* [misc]backup-simplify:  Simplify (+ 0 -27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (* 1 -27.5) into -27.5
* [misc]backup-simplify:  Simplify (+ 0 -27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (* (- 27.5) (- 27.5)) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -27.5)) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -27.5)) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 27.5) (* 27.5 (- 27.5))) into (- 1512.5)
* [misc]backup-simplify:  Simplify (- 1512.5) into (- 1512.5)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 0) (+ (* 27.5 27.5) (* 0 (- 27.5)))) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (+ 756.25 (+ (* (- 1512.5) (/ 1 (/ 1 x))) (* 756.25 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))
* [misc]approximate:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 (- x)) -27.5)) (+ 27.5 (* (/ 1 (- x)) -27.5))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 (- x)) -27.5)) (+ 27.5 (* (/ 1 (- x)) -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 (- x)) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 (- x)) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 (- x)) -27.5)) (+ 27.5 (* (/ 1 (- x)) -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 (- x)) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 (- x)) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]backup-simplify:  Simplify (* -1 -27.5) into 27.5
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify (* -1 -27.5) into 27.5
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify (* 27.5 27.5) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -27.5)) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -27.5)) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (+ (* 27.5 27.5) (* 27.5 27.5)) into 1512.5
* [misc]backup-simplify:  Simplify 1512.5 into 1512.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* 27.5 27.5) (* 0 27.5))) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (+ 756.25 (+ (* 1512.5 (/ 1 (/ 1 (- x)))) (* 756.25 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (exp (* (log (* x x)) (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 2 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (exp (* (log (* x x)) (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 3 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x (* 2 (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* 2 (+ 3 1))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* * * * [misc]progress:  [ 4 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (* 1 (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* 1 (+ 3 1))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (+ 3 1)
* [exit]simplify:  Simplified to (+ 3 1)
* * * * [misc]progress:  [ 5 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1)))) (cbrt (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* * * * [misc]progress:  [ 6 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) (sqrt (+ 3 1))) (sqrt (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (sqrt (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* * * * [misc]progress:  [ 7 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) 1) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 8 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (pow (* x x) 3) (pow (* x x) 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 9 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 10 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) (+ 3 1)) 1)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 11 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (exp (log (pow (* x x) (+ 3 1))))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* * * * [misc]progress:  [ 12 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (log (exp (pow (* x x) (+ 3 1))))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 13 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1)))) (cbrt (pow (* x x) (+ 3 1))))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 14 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (cbrt (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1))))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* * * * [misc]progress:  [ 15 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (sqrt (pow (* x x) (+ 3 1))) (sqrt (pow (* x x) (+ 3 1))))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 16 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* 1 (pow (* x x) (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 17 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (exp (* (log (* x x)) 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 18 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (exp (* (log (* x x)) 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 19 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow x (* 2 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 20 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) (* 1 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 21 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 22 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (* (* x x) (* x x)) (* x x)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 23 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (pow (* x x) 3) 1) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 24 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (exp (log (pow (* x x) 3))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 25 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (log (exp (pow (* x x) 3))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 26 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 27 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 28 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 29 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (* x x) (* (* x x) (* x x))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 30 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (* (* x x) (* x x)) (* x x)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 31 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 32 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* 1 (pow (* x x) 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 33 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x (+ 2 2))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 34 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* x x) (+ 1 1))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 35 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* x x) 2)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 36 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* (* x x) (* x x)) 1)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 37 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* x x) 2)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 38 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* x x) (+ 1 1))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 39 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow (* (* x x) (* x x)) 1)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 40 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (exp (+ (log (* x x)) (log (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 41 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (exp (log (* (* x x) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 42 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (log (exp (* (* x x) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 43 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 44 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 45 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 46 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 47 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* 1 (* (* x x) (* x x)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 48 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* (* x x) x) x)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 49 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* x (* x (* x x)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 50 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 51 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (pow (+ 27.5 (* x -27.5)) (+ 1 1)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 52 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (pow (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) 1))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 53 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (pow (+ 27.5 (* x -27.5)) 2))))))>
* * * * [misc]progress:  [ 54 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (pow (+ 27.5 (* x -27.5)) (+ 1 1)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 55 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (pow (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) 1))))))>
* * * * [misc]progress:  [ 56 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (exp (+ (log (+ 27.5 (* x -27.5))) (log (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (+ (log (+ 27.5 (* x -27.5))) (log (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* -27.5 x) 27.5)) (log (+ (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (+ (log (+ (* -27.5 x) 27.5)) (log (+ (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 57 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (exp (log (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (log (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (136 enodes)
* * [misc]simplify:  iters left: 1 (194 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* -27.5 x) 27.5)) (log (+ (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (+ (log (+ (* -27.5 x) 27.5)) (log (+ (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 58 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (log (exp (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (exp (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (275 enodes)
* * [misc]simplify:  iters left: 1 (463 enodes)
* [exit]simplify:  Simplified to (exp (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (exp (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 59 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (cbrt (* (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5))) (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5))) (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) 3)
* * * * [misc]progress:  [ 60 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (* (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))) (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))) (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))) (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))) (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))) (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))))
* [enter]simplify:  Simplifying (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 61 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (cbrt (* (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* -27.5 x) 27.5) 3) (pow (+ (* -27.5 x) 27.5) 3))
* [exit]simplify:  Simplified to (* (pow (+ (* -27.5 x) 27.5) 3) (pow (+ (* -27.5 x) 27.5) 3))
* * * * [misc]progress:  [ 62 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (sqrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))) (sqrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (fabs (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (fabs (+ (* -27.5 x) 27.5))
* [enter]simplify:  Simplifying (sqrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (fabs (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (fabs (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 63 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ (pow 27.5 3) (pow (* x -27.5) 3))) (* (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))))))))))>
* [enter]simplify:  Simplifying (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* [enter]simplify:  Simplifying (* (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (382 enodes)
* [exit]simplify:  Simplified to (* (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))) (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))))
* [exit]simplify:  Simplified to (* (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))) (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))))
* * * * [misc]progress:  [ 64 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5)))) (* (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))) (- 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (289 enodes)
* [exit]simplify:  Simplified to (* (* (+ 27.5 (* x -27.5)) (- 27.5 (* x -27.5))) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* [exit]simplify:  Simplified to (* (* (+ 27.5 (* x -27.5)) (- 27.5 (* x -27.5))) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* [enter]simplify:  Simplifying (* (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))) (- 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (233 enodes)
* [exit]simplify:  Simplified to (* (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))) (- 27.5 (* x -27.5)))
* [exit]simplify:  Simplified to (* (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))) (- 27.5 (* x -27.5)))
* * * * [misc]progress:  [ 65 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (+ (pow 27.5 3) (pow (* x -27.5) 3))) (* (- 27.5 (* x -27.5)) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))))))))))>
* [enter]simplify:  Simplifying (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))))
* [enter]simplify:  Simplifying (* (- 27.5 (* x -27.5)) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- 27.5 (* -27.5 x)) (- 27.5 (* -27.5 x))) 27.5) (* (* (* -27.5 x) (* -27.5 x)) (- 27.5 (* -27.5 x))))
* [exit]simplify:  Simplified to (+ (* (* (- 27.5 (* -27.5 x)) (- 27.5 (* -27.5 x))) 27.5) (* (* (* -27.5 x) (* -27.5 x)) (- 27.5 (* -27.5 x))))
* * * * [misc]progress:  [ 66 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5)))) (* (- 27.5 (* x -27.5)) (- 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (179 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))) (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (* (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))) (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))))
* [enter]simplify:  Simplifying (* (- 27.5 (* x -27.5)) (- 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (162 enodes)
* * [misc]simplify:  iters left: 1 (362 enodes)
* [exit]simplify:  Simplified to (* (- 27.5 (* -27.5 x)) (- 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (* (- 27.5 (* -27.5 x)) (- 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 67 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* 1 (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))))>
* * * * [misc]progress:  [ 68 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (+ (* (+ 27.5 (* x -27.5)) 27.5) (* (+ 27.5 (* x -27.5)) (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) 27.5)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* 27.5 (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* 27.5 (+ (* -27.5 x) 27.5))
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (* x -27.5))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (75 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (* (* -27.5 x) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (* -27.5 x) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 69 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (+ (* 27.5 (+ 27.5 (* x -27.5))) (* (* x -27.5) (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* 27.5 (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* [exit]simplify:  Simplified to (* 27.5 (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* 27.5 (+ (* -27.5 x) 27.5))
* [enter]simplify:  Simplifying (* (* x -27.5) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* [exit]simplify:  Simplified to (* (+ 27.5 (* x -27.5)) (* x -27.5))
* [exit]simplify:  Simplified to (* (+ 27.5 (* x -27.5)) (* x -27.5))
* * * * [misc]progress:  [ 70 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (* (+ 27.5 (* x -27.5)) (* (cbrt (+ 27.5 (* x -27.5))) (cbrt (+ 27.5 (* x -27.5))))) (cbrt (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (* (cbrt (+ 27.5 (* x -27.5))) (cbrt (+ 27.5 (* x -27.5)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (55 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 71 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (* (+ 27.5 (* x -27.5)) (sqrt (+ 27.5 (* x -27.5)))) (sqrt (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (sqrt (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (sqrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 72 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (* (+ 27.5 (* x -27.5)) 1) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) 1)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* [exit]simplify:  Simplified to (+ (* -27.5 x) 27.5)
* [exit]simplify:  Simplified to (+ (* -27.5 x) 27.5)
* * * * [misc]progress:  [ 73 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (* (cbrt (+ 27.5 (* x -27.5))) (cbrt (+ 27.5 (* x -27.5)))) (* (cbrt (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 74 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (sqrt (+ 27.5 (* x -27.5))) (* (sqrt (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (sqrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 75 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* 1 (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 76 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ 27.5 (* x -27.5)) (+ (pow 27.5 3) (pow (* x -27.5) 3))) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* -27.5 x) 3) (pow 27.5 3)) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (+ (pow (* -27.5 x) 3) (pow 27.5 3)) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 77 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ 27.5 (* x -27.5)) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5)))) (- 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (184 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (- 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (- 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 78 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ 27.5 (* x -27.5))) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (288 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ 27.5 (* x -27.5)))
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ 27.5 (* x -27.5)))
* * * * [misc]progress:  [ 79 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (+ 27.5 (* x -27.5))) (- 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (307 enodes)
* [exit]simplify:  Simplified to (* (- 27.5 (* x -27.5)) (* (+ (* x -27.5) 27.5) (+ (* x -27.5) 27.5)))
* [exit]simplify:  Simplified to (* (- 27.5 (* x -27.5)) (* (+ (* x -27.5) 27.5) (+ (* x -27.5) 27.5)))
* * * * [misc]progress:  [ 80 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 81 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x 8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x 8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (336 enodes)
* [exit]simplify:  Simplified to (+ (+ (cbrt (* (* (+ 27.5 (* -27.5 x)) (+ 27.5 (* -27.5 x))) (* (pow (* x x) 3) (+ 27.5 (* -27.5 x))))) (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x))))) (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (pow x 8) (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)))))
* * * * [misc]progress:  [ 82 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ 1 x) -8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ 1 x) -8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ (* x -11.0) 1.0) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (/ 1 x) -8))) (cbrt (* (* (pow (* x x) 3) (+ (* -27.5 x) 27.5)) (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))))) (* (pow x 6) (+ 0.641667 (* -0.065476 x))))
* * * * [misc]progress:  [ 83 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ -1 x) -8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ -1 x) -8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (105 enodes)
* * [misc]simplify:  iters left: 4 (338 enodes)
* [exit]simplify:  Simplified to (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (* -27.5 x) 27.5)) (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))) (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x))))) (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (/ -1 x) -8))))
* * * * [misc]progress:  [ 84 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow x 6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow x 6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (293 enodes)
* [exit]simplify:  Simplified to (+ (+ (cbrt (* (* (+ 27.5 (* -27.5 x)) (+ 27.5 (* -27.5 x))) (* (+ 27.5 (* -27.5 x)) (pow x 6)))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (+ (* x -11.0) 1.0) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))))
* * * * [misc]progress:  [ 85 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (/ 1 x) -6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (/ 1 x) -6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (47 enodes)
* * [misc]simplify:  iters left: 5 (105 enodes)
* * [misc]simplify:  iters left: 4 (300 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (+ (cbrt (* (* (+ 27.5 (* -27.5 x)) (+ 27.5 (* -27.5 x))) (* (+ 27.5 (* -27.5 x)) (pow (/ 1 x) -6)))) (+ (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3))) (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))))
* * * * [misc]progress:  [ 86 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (/ -1 x) -6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (/ -1 x) -6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (300 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))) (cbrt (* (* (+ (* -27.5 x) 27.5) (pow (/ -1 x) -6)) (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))))))
* * * * [misc]progress:  [ 87 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (333 enodes)
* [exit]simplify:  Simplified to (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (* -27.5 x) 27.5)) (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))) (+ (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3))) (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))) (* (+ 13.75 (* -3.85 x)) (pow x 4)))
* * * * [misc]progress:  [ 88 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (333 enodes)
* [exit]simplify:  Simplified to (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (* -27.5 x) 27.5)) (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))) (+ (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3))) (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))) (* (+ 13.75 (* -3.85 x)) (pow x 4)))
* * * * [misc]progress:  [ 89 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (pow x 4)))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (333 enodes)
* [exit]simplify:  Simplified to (+ (+ (cbrt (* (* (* (pow x 3) (pow x 3)) (+ (* -27.5 x) 27.5)) (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))) (+ (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3))) (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))) (* (+ 13.75 (* -3.85 x)) (pow x 4)))
* * * * [misc]progress:  [ 90 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))))))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* * [misc]simplify:  iters left: 4 (313 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x -11.0) 1.0) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))) (cbrt (* (* (+ 27.5 (* x -27.5)) (* (pow x 3) (pow x 3))) (+ (* (* x x) 756.25) (- 756.25 (* 1512.5 x)))))) (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))
* * * * [misc]progress:  [ 91 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))))))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* * [misc]simplify:  iters left: 4 (313 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x -11.0) 1.0) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))) (cbrt (* (* (+ 27.5 (* x -27.5)) (* (pow x 3) (pow x 3))) (+ (* (* x x) 756.25) (- 756.25 (* 1512.5 x)))))) (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))
* * * * [misc]progress:  [ 92 / 92 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))))))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* * [misc]simplify:  iters left: 4 (313 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x -11.0) 1.0) (* (+ (+ (* x -0.000152) 0.004092) (* (* 3e-06 x) x)) (pow (* x x) (+ 1 3)))) (cbrt (* (* (+ 27.5 (* x -27.5)) (* (pow x 3) (pow x 3))) (+ (* (* x x) 756.25) (- 756.25 (* 1512.5 x)))))) (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 2 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (pow x 3) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 3 (log x))) into (* 12 (log x))
* [misc]backup-simplify:  Simplify (exp (* 12 (log x))) into (pow x 12)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 3 (log x))) into (* 12 (log x))
* [misc]backup-simplify:  Simplify (exp (* 12 (log x))) into (pow x 12)
* [misc]backup-simplify:  Simplify (pow x 12) into (pow x 12)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 12) into (pow x 12)
* [misc]approximate:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow x -3))) into (* 4 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow x -3)))) into (pow (pow x -3) 4)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow x -3))) into (* 4 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow x -3)))) into (pow (pow x -3) 4)
* [misc]backup-simplify:  Simplify (pow (pow x -3) 4) into (pow (pow x -3) 4)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x -3) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x -3) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x -3) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x -3) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x -3) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x -3) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x -3) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x -3) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow x -3)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (/ 1 x) -3) 4) into (pow (pow (/ 1 x) -3) 4)
* [misc]approximate:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (* 4 (* 3 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (* 4 (* 3 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) into (exp (* 12 (- (log -1) (log (/ -1 x)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -8) into (pow (/ 1 x) -8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -8) into (pow (/ -1 x) -8)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* x -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* x -27.5) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* x -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* x -27.5) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* x -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* x -27.5) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* x -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* x -27.5) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]backup-simplify:  Simplify (* 0 -27.5) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (* 0 -27.5) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (* 27.5 27.5) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -27.5)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ 0 (- 27.5)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -27.5)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ 0 (- 27.5)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* 27.5 (- 27.5)) (* (- 27.5) 27.5)) into (- 1512.5)
* [misc]backup-simplify:  Simplify (- 1512.5) into (- 1512.5)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* (- 27.5) (- 27.5)) (* 0 27.5))) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (+ (* 756.25 (pow x 2)) (+ (* (- 1512.5) x) 756.25)) into (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))
* [misc]approximate:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 x) -27.5)) (+ 27.5 (* (/ 1 x) -27.5))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 x) -27.5)) (+ 27.5 (* (/ 1 x) -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 x) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 x) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 x) -27.5)) (+ 27.5 (* (/ 1 x) -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 x) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 x) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]backup-simplify:  Simplify (* 1 -27.5) into -27.5
* [misc]backup-simplify:  Simplify (+ 0 -27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (* 1 -27.5) into -27.5
* [misc]backup-simplify:  Simplify (+ 0 -27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (* (- 27.5) (- 27.5)) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -27.5)) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -27.5)) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 27.5) (* 27.5 (- 27.5))) into (- 1512.5)
* [misc]backup-simplify:  Simplify (- 1512.5) into (- 1512.5)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) 0) (+ (* 27.5 27.5) (* 0 (- 27.5)))) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (+ 756.25 (+ (* (- 1512.5) (/ 1 (/ 1 x))) (* 756.25 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))
* [misc]approximate:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 (- x)) -27.5)) (+ 27.5 (* (/ 1 (- x)) -27.5))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 (- x)) -27.5)) (+ 27.5 (* (/ 1 (- x)) -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 (- x)) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 (- x)) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (* (+ 27.5 (* (/ 1 (- x)) -27.5)) (+ 27.5 (* (/ 1 (- x)) -27.5))) in x
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 (- x)) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (+ 27.5 (* (/ 1 (- x)) -27.5)) in x
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -27.5) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]backup-simplify:  Simplify (* -1 -27.5) into 27.5
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify (* -1 -27.5) into 27.5
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify (* 27.5 27.5) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -27.5)) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -27.5)) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (+ (* 27.5 27.5) (* 27.5 27.5)) into 1512.5
* [misc]backup-simplify:  Simplify 1512.5 into 1512.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -27.5))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 27.5 0) (+ (* 27.5 27.5) (* 0 27.5))) into 756.25
* [misc]backup-simplify:  Simplify 756.25 into 756.25
* [misc]backup-simplify:  Simplify (+ 756.25 (+ (* 1512.5 (/ 1 (/ 1 (- x)))) (* 756.25 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (exp (* (* (log x) 3) (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* (log x) 3) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (86 enodes)
* * [misc]simplify:  iters left: 1 (184 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ (* 3 3) 3))
* [exit]simplify:  Simplified to (* (log x) (+ (* 3 3) 3))
* * * * [misc]progress:  [ 2 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (exp (* (log (pow x 3)) (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (log (pow x 3)) (+ 3 1))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 (* 3 3)))
* [exit]simplify:  Simplified to (* (log x) (+ 3 (* 3 3)))
* * * * [misc]progress:  [ 3 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (exp (* (log (pow x 3)) (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (log (pow x 3)) (+ 3 1))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 (* 3 3)))
* [exit]simplify:  Simplified to (* (log x) (+ 3 (* 3 3)))
* * * * [misc]progress:  [ 4 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow x (* 3 (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* 3 (+ 3 1))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (+ (* 3 3) 3)
* [exit]simplify:  Simplified to (+ (* 3 3) 3)
* * * * [misc]progress:  [ 5 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow (pow x 3) (* (cbrt (+ 3 1)) (cbrt (+ 3 1)))) (cbrt (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (pow x 3) (* (cbrt (+ 3 1)) (cbrt (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* [exit]simplify:  Simplified to (pow (pow x 3) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* * * * [misc]progress:  [ 6 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow (pow x 3) (sqrt (+ 3 1))) (sqrt (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (pow x 3) (sqrt (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (sqrt (+ 1 3)))
* [exit]simplify:  Simplified to (pow (pow x 3) (sqrt (+ 1 3)))
* * * * [misc]progress:  [ 7 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow (pow x 3) 1) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (pow x 3) 1)
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 8 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (pow (pow x 3) 3) (pow (pow x 3) 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (pow x 3) 3)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [enter]simplify:  Simplifying (pow (pow x 3) 1)
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 9 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (pow (* x x) (+ 3 1)) (pow x (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (+ 3 1))
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (+ 1 3))
* [exit]simplify:  Simplified to (pow (* x x) (+ 1 3))
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 10 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) (+ 3 1)) (pow (cbrt (pow x 3)) (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) (+ 3 1))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (+ 3 1))
* [exit]simplify:  Simplified to (pow (* x x) (+ 3 1))
* [enter]simplify:  Simplifying (pow (cbrt (pow x 3)) (+ 3 1))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 11 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (pow x (+ 3 1)) (pow (* x x) (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [enter]simplify:  Simplifying (pow (* x x) (+ 3 1))
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (+ 1 3))
* [exit]simplify:  Simplified to (pow (* x x) (+ 1 3))
* * * * [misc]progress:  [ 12 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (pow (sqrt (pow x 3)) (+ 3 1)) (pow (sqrt (pow x 3)) (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) (+ 3 1))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow x 3)) (+ 3 1))
* [exit]simplify:  Simplified to (pow (sqrt (pow x 3)) (+ 3 1))
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) (+ 3 1))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow x 3)) (+ 3 1))
* [exit]simplify:  Simplified to (pow (sqrt (pow x 3)) (+ 3 1))
* * * * [misc]progress:  [ 13 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (pow 1 (+ 3 1)) (pow (pow x 3) (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow 1 (+ 3 1))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow x 3) (+ 3 1))
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 14 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow (pow x 3) (+ 3 1)) 1))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 15 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (exp (log (pow (pow x 3) (+ 3 1)))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (log (pow (pow x 3) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (* (log x) 3) (+ 1 3))
* [exit]simplify:  Simplified to (* (* (log x) 3) (+ 1 3))
* * * * [misc]progress:  [ 16 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (log (exp (pow (pow x 3) (+ 3 1)))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (exp (pow (pow x 3) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow x 3) (+ 1 3)))
* [exit]simplify:  Simplified to (exp (pow (pow x 3) (+ 1 3)))
* * * * [misc]progress:  [ 17 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (* (cbrt (pow (pow x 3) (+ 3 1))) (cbrt (pow (pow x 3) (+ 3 1)))) (cbrt (pow (pow x 3) (+ 3 1)))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow x 3) (+ 3 1))) (cbrt (pow (pow x 3) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (pow x 3) (+ 1 3))) (cbrt (pow (pow x 3) (+ 1 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (pow x 3) (+ 1 3))) (cbrt (pow (pow x 3) (+ 1 3))))
* [enter]simplify:  Simplifying (cbrt (pow (pow x 3) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (pow x 3) (+ 1 3)))
* [exit]simplify:  Simplified to (cbrt (pow (pow x 3) (+ 1 3)))
* * * * [misc]progress:  [ 18 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (cbrt (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) (+ 3 1))) (pow (pow x 3) (+ 3 1)))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* (pow (pow x 3) (+ 3 1)) (pow (pow x 3) (+ 3 1))) (pow (pow x 3) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow x 3) (+ 1 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (pow x 3) (+ 1 3)) 3)
* * * * [misc]progress:  [ 19 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* (sqrt (pow (pow x 3) (+ 3 1))) (sqrt (pow (pow x 3) (+ 3 1)))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow x 3) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) (+ 1 3)))
* [enter]simplify:  Simplifying (sqrt (pow (pow x 3) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) (+ 1 3)))
* * * * [misc]progress:  [ 20 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (* 1 (pow (pow x 3) (+ 3 1))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 21 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (exp (* (log (* x x)) (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 22 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (exp (* (log (* x x)) (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 23 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x (* 2 (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* 2 (+ 3 1))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* * * * [misc]progress:  [ 24 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (* 1 (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* 1 (+ 3 1))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (+ 3 1)
* [exit]simplify:  Simplified to (+ 3 1)
* * * * [misc]progress:  [ 25 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1)))) (cbrt (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* * * * [misc]progress:  [ 26 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) (sqrt (+ 3 1))) (sqrt (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (sqrt (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* * * * [misc]progress:  [ 27 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) 1) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 28 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (pow (* x x) 3) (pow (* x x) 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 29 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 30 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (pow (* x x) (+ 3 1)) 1)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 31 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (exp (log (pow (* x x) (+ 3 1))))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* * * * [misc]progress:  [ 32 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (log (exp (pow (* x x) (+ 3 1))))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 33 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1)))) (cbrt (pow (* x x) (+ 3 1))))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 34 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (cbrt (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1))))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* * * * [misc]progress:  [ 35 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* (sqrt (pow (* x x) (+ 3 1))) (sqrt (pow (* x x) (+ 3 1))))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 36 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (* 1 (pow (* x x) (+ 3 1)))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 37 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (exp (* (log (* x x)) 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 38 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (exp (* (log (* x x)) 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 39 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow x (* 2 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 40 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) (* 1 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 41 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 42 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (* (* x x) (* x x)) (* x x)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 43 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (pow (* x x) 3) 1) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 44 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (exp (log (pow (* x x) 3))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 45 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (log (exp (pow (* x x) 3))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 46 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 47 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 48 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 49 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (* x x) (* (* x x) (* x x))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 50 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (* (* x x) (* x x)) (* x x)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 51 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 52 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* 1 (pow (* x x) 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 53 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (pow (+ 27.5 (* x -27.5)) (+ 1 1)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 54 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (pow (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) 1))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 55 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (pow (+ 27.5 (* x -27.5)) 2))))))>
* * * * [misc]progress:  [ 56 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (pow (+ 27.5 (* x -27.5)) (+ 1 1)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 57 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (pow (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) 1))))))>
* * * * [misc]progress:  [ 58 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (exp (+ (log (+ 27.5 (* x -27.5))) (log (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (+ (log (+ 27.5 (* x -27.5))) (log (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* -27.5 x) 27.5)) (log (+ (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (+ (log (+ (* -27.5 x) 27.5)) (log (+ (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 59 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (exp (log (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (log (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (136 enodes)
* * [misc]simplify:  iters left: 1 (194 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* -27.5 x) 27.5)) (log (+ (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (+ (log (+ (* -27.5 x) 27.5)) (log (+ (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 60 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (log (exp (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (exp (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (275 enodes)
* * [misc]simplify:  iters left: 1 (463 enodes)
* [exit]simplify:  Simplified to (exp (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (exp (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 61 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (cbrt (* (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5))) (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5))) (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) 3)
* * * * [misc]progress:  [ 62 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (* (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))) (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))) (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))) (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))) (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))) (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))))
* [enter]simplify:  Simplifying (cbrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 63 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (cbrt (* (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* -27.5 x) 27.5) 3) (pow (+ (* -27.5 x) 27.5) 3))
* [exit]simplify:  Simplified to (* (pow (+ (* -27.5 x) 27.5) 3) (pow (+ (* -27.5 x) 27.5) 3))
* * * * [misc]progress:  [ 64 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (sqrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))) (sqrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (fabs (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (fabs (+ (* -27.5 x) 27.5))
* [enter]simplify:  Simplifying (sqrt (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (fabs (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (fabs (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 65 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ (pow 27.5 3) (pow (* x -27.5) 3))) (* (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))))))))))>
* [enter]simplify:  Simplifying (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* [enter]simplify:  Simplifying (* (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (382 enodes)
* [exit]simplify:  Simplified to (* (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))) (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))))
* [exit]simplify:  Simplified to (* (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))) (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))))
* * * * [misc]progress:  [ 66 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5)))) (* (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))) (- 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (289 enodes)
* [exit]simplify:  Simplified to (* (* (+ 27.5 (* x -27.5)) (- 27.5 (* x -27.5))) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* [exit]simplify:  Simplified to (* (* (+ 27.5 (* x -27.5)) (- 27.5 (* x -27.5))) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* [enter]simplify:  Simplifying (* (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))) (- 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (233 enodes)
* [exit]simplify:  Simplified to (* (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))) (- 27.5 (* x -27.5)))
* [exit]simplify:  Simplified to (* (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))) (- 27.5 (* x -27.5)))
* * * * [misc]progress:  [ 67 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (+ (pow 27.5 3) (pow (* x -27.5) 3))) (* (- 27.5 (* x -27.5)) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))))))))))>
* [enter]simplify:  Simplifying (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))))
* [enter]simplify:  Simplifying (* (- 27.5 (* x -27.5)) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- 27.5 (* -27.5 x)) (- 27.5 (* -27.5 x))) 27.5) (* (* (* -27.5 x) (* -27.5 x)) (- 27.5 (* -27.5 x))))
* [exit]simplify:  Simplified to (+ (* (* (- 27.5 (* -27.5 x)) (- 27.5 (* -27.5 x))) 27.5) (* (* (* -27.5 x) (* -27.5 x)) (- 27.5 (* -27.5 x))))
* * * * [misc]progress:  [ 68 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5)))) (* (- 27.5 (* x -27.5)) (- 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (179 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))) (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))))
* [exit]simplify:  Simplified to (* (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))) (* (+ (* x -27.5) 27.5) (- 27.5 (* x -27.5))))
* [enter]simplify:  Simplifying (* (- 27.5 (* x -27.5)) (- 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (162 enodes)
* * [misc]simplify:  iters left: 1 (362 enodes)
* [exit]simplify:  Simplified to (* (- 27.5 (* -27.5 x)) (- 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (* (- 27.5 (* -27.5 x)) (- 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 69 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* 1 (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))))>
* * * * [misc]progress:  [ 70 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (+ (* (+ 27.5 (* x -27.5)) 27.5) (* (+ 27.5 (* x -27.5)) (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) 27.5)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* 27.5 (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* 27.5 (+ (* -27.5 x) 27.5))
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (* x -27.5))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (75 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (* (* -27.5 x) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (* -27.5 x) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 71 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (+ (* 27.5 (+ 27.5 (* x -27.5))) (* (* x -27.5) (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* 27.5 (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* [exit]simplify:  Simplified to (* 27.5 (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* 27.5 (+ (* -27.5 x) 27.5))
* [enter]simplify:  Simplifying (* (* x -27.5) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* [exit]simplify:  Simplified to (* (+ 27.5 (* x -27.5)) (* x -27.5))
* [exit]simplify:  Simplified to (* (+ 27.5 (* x -27.5)) (* x -27.5))
* * * * [misc]progress:  [ 72 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (* (+ 27.5 (* x -27.5)) (* (cbrt (+ 27.5 (* x -27.5))) (cbrt (+ 27.5 (* x -27.5))))) (cbrt (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (* (cbrt (+ 27.5 (* x -27.5))) (cbrt (+ 27.5 (* x -27.5)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (55 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 73 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (* (+ 27.5 (* x -27.5)) (sqrt (+ 27.5 (* x -27.5)))) (sqrt (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (sqrt (+ 27.5 (* x -27.5))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (sqrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 74 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (* (+ 27.5 (* x -27.5)) 1) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) 1)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* [exit]simplify:  Simplified to (+ (* -27.5 x) 27.5)
* [exit]simplify:  Simplified to (+ (* -27.5 x) 27.5)
* * * * [misc]progress:  [ 75 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (* (cbrt (+ 27.5 (* x -27.5))) (cbrt (+ 27.5 (* x -27.5)))) (* (cbrt (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 76 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (sqrt (+ 27.5 (* x -27.5))) (* (sqrt (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 27.5 (* x -27.5))) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (sqrt (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 77 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* 1 (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 78 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ 27.5 (* x -27.5)) (+ (pow 27.5 3) (pow (* x -27.5) 3))) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (+ (pow 27.5 3) (pow (* x -27.5) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* -27.5 x) 3) (pow 27.5 3)) (+ (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (+ (pow (* -27.5 x) 3) (pow 27.5 3)) (+ (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 79 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ 27.5 (* x -27.5)) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5)))) (- 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (+ 27.5 (* x -27.5)) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (184 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (- 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (- 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 80 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ 27.5 (* x -27.5))) (+ (* 27.5 27.5) (- (* (* x -27.5) (* x -27.5)) (* 27.5 (* x -27.5))))))))))>
* [enter]simplify:  Simplifying (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (288 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ 27.5 (* x -27.5)))
* [exit]simplify:  Simplified to (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ 27.5 (* x -27.5)))
* * * * [misc]progress:  [ 81 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (+ 27.5 (* x -27.5))) (- 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (* (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5))) (+ 27.5 (* x -27.5)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (307 enodes)
* [exit]simplify:  Simplified to (* (- 27.5 (* x -27.5)) (* (+ (* x -27.5) 27.5) (+ (* x -27.5) 27.5)))
* [exit]simplify:  Simplified to (* (- 27.5 (* x -27.5)) (* (+ (* x -27.5) 27.5) (+ (* x -27.5) 27.5)))
* * * * [misc]progress:  [ 82 / 94 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* * * * [misc]progress:  [ 83 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow x 12))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow x 12))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (47 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (335 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x -11.0) 1.0) (* (+ (* x (* 3e-06 x)) (+ 0.004092 (* -0.000152 x))) (pow (* x x) (+ 3 1)))) (cbrt (* (* (+ 27.5 (* -27.5 x)) (+ 27.5 (* -27.5 x))) (* (+ 27.5 (* -27.5 x)) (* (pow x 3) (pow x 3)))))) (+ (* (+ 13.75 (* -3.85 x)) (cbrt (pow x 12))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))
* * * * [misc]progress:  [ 84 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow (/ 1 x) -3) 4))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow (/ 1 x) -3) 4))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (337 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (cbrt (pow (pow (/ 1 x) -3) 4)) (+ 13.75 (* -3.85 x)))) (+ (+ (+ (* x -11.0) 1.0) (* (+ (+ 0.004092 (* x -0.000152)) (* 3e-06 (* x x))) (pow (* x x) (+ 3 1)))) (cbrt (* (* (+ 27.5 (* -27.5 x)) (+ 27.5 (* -27.5 x))) (* (+ 27.5 (* -27.5 x)) (* (pow x 3) (pow x 3)))))))
* * * * [misc]progress:  [ 85 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (exp (* 12 (- (log -1) (log (/ -1 x))))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (exp (* 12 (- (log -1) (log (/ -1 x))))))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (53 enodes)
* * [misc]simplify:  iters left: 5 (117 enodes)
* * [misc]simplify:  iters left: 4 (359 enodes)
* [exit]simplify:  Simplified to (+ (+ (cbrt (* (* (+ 27.5 (* -27.5 x)) (+ 27.5 (* -27.5 x))) (* (* (pow x 3) (pow x 3)) (+ 27.5 (* -27.5 x))))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (* (cbrt (pow (exp 12) (+ 0 (log x)))) (+ 13.75 (* -3.85 x))) (+ (+ (* x -11.0) 1.0) (* (pow (* x x) (+ 3 1)) (+ (* (* x x) 3e-06) (+ (* -0.000152 x) 0.004092))))))
* * * * [misc]progress:  [ 86 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x 8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow x 8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (338 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ 13.75 (* -3.85 x)) (cbrt (pow (pow x 3) (+ 1 3)))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (* x -11.0) 1.0) (+ (* 0.004092 (pow x 8)) (* (* (pow x 8) x) (+ (* 3e-06 x) -0.000152))))) (cbrt (* (* (+ (* -27.5 x) 27.5) (pow (* x x) 3)) (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))))
* * * * [misc]progress:  [ 87 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ 1 x) -8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ 1 x) -8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 13.75 (* -3.85 x)) (cbrt (pow (pow x 3) (+ 1 3)))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (+ (* x -11.0) 1.0) (* (pow (/ 1 x) -8) (+ (+ 0.004092 (* x -0.000152)) (* 3e-06 (* x x))))) (cbrt (* (* (+ 27.5 (* -27.5 x)) (pow (* x x) 3)) (* (+ 27.5 (* -27.5 x)) (+ 27.5 (* -27.5 x)))))))
* * * * [misc]progress:  [ 88 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ -1 x) -8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (/ -1 x) -8)) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (341 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (/ -1 x) -8) (+ (+ 0.004092 (* x -0.000152)) (* (* 3e-06 x) x))) (cbrt (* (* (+ 27.5 (* -27.5 x)) (+ 27.5 (* -27.5 x))) (* (+ 27.5 (* -27.5 x)) (* (pow x 3) (pow x 3)))))) (+ (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (* (+ 13.75 (* -3.85 x)) (cbrt (pow (pow x 3) (+ 1 3))))))
* * * * [misc]progress:  [ 89 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow x 6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow x 6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (280 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 13.75 (* -3.85 x)) (cbrt (pow (pow x 3) (+ 1 3)))) (+ (* x -11.0) 1.0)) (+ (cbrt (* (* (+ (* -27.5 x) 27.5) (pow x 6)) (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)))) (+ (* (pow (* x x) (+ 1 3)) (+ (+ 0.004092 (* x -0.000152)) (* 3e-06 (* x x)))) (* (pow x 6) (+ 0.641667 (* -0.065476 x))))))
* * * * [misc]progress:  [ 90 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (/ 1 x) -6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (/ 1 x) -6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (283 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (* (+ 13.75 (* -3.85 x)) (cbrt (pow (pow x 3) (+ 1 3))))) (cbrt (* (* (+ 27.5 (* -27.5 x)) (pow (/ 1 x) -6)) (* (+ 27.5 (* -27.5 x)) (+ 27.5 (* -27.5 x)))))) (* (pow (* x x) (+ 1 3)) (+ (+ 0.004092 (* x -0.000152)) (* 3e-06 (* x x)))))
* * * * [misc]progress:  [ 91 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (/ -1 x) -6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (/ -1 x) -6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5)))))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (285 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* x -11.0) 1.0) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))) (+ (+ (* (pow (* x x) (+ 1 3)) (+ (+ 0.004092 (* x -0.000152)) (* 3e-06 (* x x)))) (* (+ 13.75 (* -3.85 x)) (cbrt (pow (pow x 3) (+ 1 3))))) (cbrt (* (* (+ 27.5 (* -27.5 x)) (+ 27.5 (* -27.5 x))) (* (+ 27.5 (* -27.5 x)) (pow (/ -1 x) -6))))))
* * * * [misc]progress:  [ 92 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))))))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x -11.0) 1.0) (* (pow (* x x) (+ 1 3)) (+ (+ 0.004092 (* x -0.000152)) (* (* x x) 3e-06)))) (cbrt (* (* (+ 27.5 (* -27.5 x)) (pow (* x x) 3)) (+ (* (* x x) 756.25) (- 756.25 (* 1512.5 x)))))) (+ (* (+ 13.75 (* -3.85 x)) (cbrt (pow (pow x 3) (+ 1 3)))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))
* * * * [misc]progress:  [ 93 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))))))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x -11.0) 1.0) (* (pow (* x x) (+ 1 3)) (+ (+ 0.004092 (* x -0.000152)) (* (* x x) 3e-06)))) (cbrt (* (* (+ 27.5 (* -27.5 x)) (pow (* x x) 3)) (+ (* (* x x) 756.25) (- 756.25 (* 1512.5 x)))))) (+ (* (+ 13.75 (* -3.85 x)) (cbrt (pow (pow x 3) (+ 1 3)))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))
* * * * [misc]progress:  [ 94 / 94 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (- (+ (* 756.25 (pow x 2)) 756.25) (* 1512.5 x))))))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x -11.0) 1.0) (* (pow (* x x) (+ 1 3)) (+ (+ 0.004092 (* x -0.000152)) (* (* x x) 3e-06)))) (cbrt (* (* (+ 27.5 (* -27.5 x)) (pow (* x x) 3)) (+ (* (* x x) 756.25) (- 756.25 (* 1512.5 x)))))) (+ (* (+ 13.75 (* -3.85 x)) (cbrt (pow (pow x 3) (+ 1 3)))) (* (pow x 6) (+ 0.641667 (* -0.065476 x)))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (exp (log (* (+ (* x -27.5) 27.5) (* x x)))))))> #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))> #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (+ (pow 27.5 3) (pow (* x -27.5) 3))) (* (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))) (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))))))))))> #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (* x x) 3) (+ 27.5 (* x -27.5))) (/ (* (+ (pow 27.5 3) (pow (* x -27.5) 3)) (- (* 27.5 27.5) (* (* x -27.5) (* x -27.5)))) (* (+ (* 27.5 27.5) (* (- (* x -27.5) 27.5) (* x -27.5))) (- 27.5 (* x -27.5)))))))))> #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (sqrt (* (+ (* x -27.5) 27.5) (* x x))) (sqrt (* (+ (* x -27.5) 27.5) (* x x)))))))> #<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (* (cbrt (+ (* x -27.5) 27.5)) (cbrt (+ (* x -27.5) 27.5))) (* (cbrt (+ (* x -27.5) 27.5)) (* x x))))))> #<alt-event (Î» (x) (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -11.0 x)) (* 27.5 (* x x))) (* -27.5 (* (* x x) x))) (* 13.75 (* (* (* x x) x) x))) (* -3.85 (* (* (* (* x x) x) x) x))) (* 0.641667 (* (* (* (* (* x x) x) x) x) x))) (* -0.065476 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 0.004092 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -0.000152 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 3e-06 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x))))> #<alt-delta (Î» (x) (+ (* (* (* x x) (* x x)) (+ (* (pow x 4) (+ (* x -0.000152) 0.004092)) (* (* (* 3e-06 x) x) (* (* x x) (* x x))))) (+ (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (+ (* -11.0 x) 1.0)))))> #<alt-event (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (pow (/ 1 x) -6) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -11.0 x)) (* 27.5 (* x x))) (* -27.5 (* (* x x) x))) (* 13.75 (* (* (* x x) x) x))) (* -3.85 (* (* (* (* x x) x) x) x))) (* 0.641667 (* (* (* (* (* x x) x) x) x) x))) (* -0.065476 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 0.004092 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -0.000152 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 3e-06 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (cbrt (pow (pow x 3) (+ 3 1)))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (cbrt (* (* (* (pow x 3) (pow x 3)) (+ 27.5 (* x -27.5))) (* (+ 27.5 (* x -27.5)) (+ 27.5 (* x -27.5))))))))>)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
