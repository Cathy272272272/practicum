* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 1 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 1 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) 1.0)) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* 0.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 2 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1))>
* * * * [misc]progress:  [ 3 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 4 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 5 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 6 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 7 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 8 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (272 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 9 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 10 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (336 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 11 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (+ (* -2.0 x) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ (* -2.0 x) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* * * * [misc]progress:  [ 12 / 15 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 0.5 (* x x)) (+ 1.0 (* -2.0 x))))>
* * * * [misc]progress:  [ 13 / 15 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 14 / 15 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 15 / 15 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ 1.0 (* (+ -2.0 (* 0.5 x)) x)))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 1 ] rewriting at (2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 1 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (+ -2.0 (* 0.5 x)) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ -2.0 (* 0.5 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ -2.0 (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ -2.0 (* 0.5 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ -2.0 (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ -2.0 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* (- 2.0) 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 1) (* 0.5 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 0) (+ (* 0.5 1) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 0) (+ (* 0.5 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (* (- 2.0) x)) into (- (* 0.5 (pow x 2)) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (* (+ -2.0 (* 0.5 (/ 1 x))) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ -2.0 (* 0.5 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ -2.0 (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ -2.0 (* 0.5 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ -2.0 (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ -2.0 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* (- 2.0) 1)) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* (- 2.0) 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* (- 2.0) 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* (- 2.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* (- 2.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* (- 2.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* (- 2.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) (/ 1 (/ 1 x))) (* 0.5 (pow (/ 1 (/ 1 x)) 2))) into (- (* 0.5 (pow x 2)) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (* (+ -2.0 (* 0.5 (/ 1 (- x)))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ -2.0 (* 0.5 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -2.0 (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ -2.0 (* 0.5 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -2.0 (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (+ 0 -0.5) into (- 0.5)
* [misc]backup-simplify:  Simplify (* (- 0.5) -1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ -2.0 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* (- 0.5) 0) (* (- 2.0) -1)) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.5) 0) (+ (* (- 2.0) 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.5) 0) (+ (* (- 2.0) 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.5) 0) (+ (* (- 2.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.5) 0) (+ (* (- 2.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.5) 0) (+ (* (- 2.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.5) 0) (+ (* (- 2.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* 0.5 (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 0.5 (pow x 2)) (* 2.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (pow (* (+ -2.0 (* 0.5 x)) x) 1)))>
* * * * [misc]progress:  [ 2 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (exp (log (* (+ -2.0 (* 0.5 x)) x)))))>
* [enter]simplify:  Simplifying (log (* (+ -2.0 (* 0.5 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (log (* (+ (* x 0.5) -2.0) x))
* [exit]simplify:  Simplified to (log (* (+ (* x 0.5) -2.0) x))
* * * * [misc]progress:  [ 3 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (log (exp (* (+ -2.0 (* 0.5 x)) x)))))>
* [enter]simplify:  Simplifying (exp (* (+ -2.0 (* 0.5 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (62 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x 0.5) -2.0))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x 0.5) -2.0))
* * * * [misc]progress:  [ 4 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (* (cbrt (* (+ -2.0 (* 0.5 x)) x)) (cbrt (* (+ -2.0 (* 0.5 x)) x))) (cbrt (* (+ -2.0 (* 0.5 x)) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ -2.0 (* 0.5 x)) x)) (cbrt (* (+ -2.0 (* 0.5 x)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x 0.5) -2.0) x)) (cbrt (* (+ (* x 0.5) -2.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x 0.5) -2.0) x)) (cbrt (* (+ (* x 0.5) -2.0) x)))
* [enter]simplify:  Simplifying (cbrt (* (+ -2.0 (* 0.5 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x 0.5) -2.0) x))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x 0.5) -2.0) x))
* * * * [misc]progress:  [ 5 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (cbrt (* (* (* (+ -2.0 (* 0.5 x)) x) (* (+ -2.0 (* 0.5 x)) x)) (* (+ -2.0 (* 0.5 x)) x)))))>
* [enter]simplify:  Simplifying (* (* (* (+ -2.0 (* 0.5 x)) x) (* (+ -2.0 (* 0.5 x)) x)) (* (+ -2.0 (* 0.5 x)) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (280 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* x 0.5) -2.0) x) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* x 0.5) -2.0) x) 3)
* * * * [misc]progress:  [ 6 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (sqrt (* (+ -2.0 (* 0.5 x)) x)) (sqrt (* (+ -2.0 (* 0.5 x)) x)))))>
* [enter]simplify:  Simplifying (sqrt (* (+ -2.0 (* 0.5 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x 0.5) -2.0) x))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x 0.5) -2.0) x))
* [enter]simplify:  Simplifying (sqrt (* (+ -2.0 (* 0.5 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x 0.5) -2.0) x))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x 0.5) -2.0) x))
* * * * [misc]progress:  [ 7 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* 1 (* (+ -2.0 (* 0.5 x)) x))))>
* * * * [misc]progress:  [ 8 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (* (cbrt (+ -2.0 (* 0.5 x))) (cbrt (+ -2.0 (* 0.5 x)))) (* (cbrt (+ -2.0 (* 0.5 x))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -2.0 (* 0.5 x))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* x (cbrt (+ (* x 0.5) -2.0)))
* [exit]simplify:  Simplified to (* x (cbrt (+ (* x 0.5) -2.0)))
* * * * [misc]progress:  [ 9 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (sqrt (+ -2.0 (* 0.5 x))) (* (sqrt (+ -2.0 (* 0.5 x))) x))))>
* [enter]simplify:  Simplifying (* (sqrt (+ -2.0 (* 0.5 x))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* x (sqrt (+ (* x 0.5) -2.0)))
* [exit]simplify:  Simplified to (* x (sqrt (+ (* x 0.5) -2.0)))
* * * * [misc]progress:  [ 10 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* 1 (* (+ -2.0 (* 0.5 x)) x))))>
* [enter]simplify:  Simplifying (* (+ -2.0 (* 0.5 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x 0.5) -2.0) x)
* [exit]simplify:  Simplified to (* (+ (* x 0.5) -2.0) x)
* * * * [misc]progress:  [ 11 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (209 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* 0.5 x) (* x x)) (* 0.5 (* 0.5 x))) (* (* -2.0 x) (* -2.0 -2.0)))
* [exit]simplify:  Simplified to (+ (* (* (* 0.5 x) (* x x)) (* 0.5 (* 0.5 x))) (* (* -2.0 x) (* -2.0 -2.0)))
* * * * [misc]progress:  [ 12 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (- (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x))) x) (- -2.0 (* 0.5 x)))))>
* [enter]simplify:  Simplifying (* (- (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x))) x)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (328 enodes)
* [exit]simplify:  Simplified to (- (* x (* -2.0 -2.0)) (* (pow x 3) (* 0.5 0.5)))
* [exit]simplify:  Simplified to (- (* x (* -2.0 -2.0)) (* (pow x 3) (* 0.5 0.5)))
* * * * [misc]progress:  [ 13 / 16 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* x (+ -2.0 (* 0.5 x)))))>
* * * * [misc]progress:  [ 14 / 16 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (- (* 0.5 (pow x 2)) (* 2.0 x))))>
* [enter]simplify:  Simplifying (+ 1.0 (- (* 0.5 (pow x 2)) (* 2.0 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (74 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (+ (* 0.5 (* x x)) (- 1.0 (* x 2.0)))
* * * * [misc]progress:  [ 15 / 16 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (- (* 0.5 (pow x 2)) (* 2.0 x))))>
* [enter]simplify:  Simplifying (+ 1.0 (- (* 0.5 (pow x 2)) (* 2.0 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (74 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (+ (* 0.5 (* x x)) (- 1.0 (* x 2.0)))
* * * * [misc]progress:  [ 16 / 16 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (- (* 0.5 (pow x 2)) (* 2.0 x))))>
* [enter]simplify:  Simplifying (+ 1.0 (- (* 0.5 (pow x 2)) (* 2.0 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (74 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (+ (* 0.5 (* x x)) (- 1.0 (* x 2.0)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (+ (log 0.5) (log x))) into (* 3 (+ (log 0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log 0.5) (log x)))) into (exp (* 3 (+ (log 0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 x) (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (pow -2.0 3) (exp (* 3 (+ (log 0.5) (log x))))) into (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -2.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log -2.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (+ (log 0.5) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 1) (* 0 0)) into (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* -2.0 -2.0) into 4.0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (/ (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 4.0) into (* 0.25 (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0))
* [misc]taylor:  Taking taylor expansion of (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (+ (log 0.5) (log x))) into (* 3 (+ (log 0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log 0.5) (log x)))) into (exp (* 3 (+ (log 0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 x) (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (pow -2.0 3) (exp (* 3 (+ (log 0.5) (log x))))) into (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -2.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log -2.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (+ (log 0.5) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 1) (* 0 0)) into (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* -2.0 -2.0) into 4.0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (/ (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 4.0) into (* 0.25 (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0))
* [misc]backup-simplify:  Simplify (* 0.25 (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)) into (* 0.25 (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -2.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -2.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log -2.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (+ (log 0.5) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -2.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0.5) (* 0.5 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (+ (* -2.0 0.5) (* 0 0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (- (- 1.0)) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- (/ 0 4.0) (+ (* (* 0.25 (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)) (/ 1.0 4.0)))) into (- 0.5 (* 0.0625 (exp (* 3 (+ (log 0.5) (log x))))))
* [misc]backup-simplify:  Simplify (- 0.5 (* 0.0625 (exp (* 3 (+ (log 0.5) (log x)))))) into (- 0.5 (* 0.0625 (exp (* 3 (+ (log 0.5) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -2.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -2.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0.5 0.5) (* 0 0))) into 0.25
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0.5) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (+ 0 0.25) into 0.25
* [misc]backup-simplify:  Simplify (- (/ 0 4.0) (+ (* (* 0.25 (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)) (/ 0.25 4.0)) (* (- 0.5 (* 0.0625 (exp (* 3 (+ (log 0.5) (log x)))))) (/ 1.0 4.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -2.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -2.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -2.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -2.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0.5) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 4.0) (+ (* (* 0.25 (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)) (/ 0 4.0)) (* (- 0.5 (* 0.0625 (exp (* 3 (+ (log 0.5) (log x)))))) (/ 0.25 4.0)) (* 0 (/ 1.0 4.0)))) into (- (* 0.00390625 (exp (* 3 (+ (log 0.5) (log x))))) 0.03125)
* [misc]backup-simplify:  Simplify (- (* 0.00390625 (exp (* 3 (+ (log 0.5) (log x))))) 0.03125) into (- (* 0.00390625 (exp (* 3 (+ (log 0.5) (log x))))) 0.03125)
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.00390625 (exp (* 3 (+ (log 0.5) (log x))))) 0.03125) (pow x 4)) (+ (* (- 0.5 (* 0.0625 (exp (* 3 (+ (log 0.5) (log x)))))) (pow x 2)) (* (* 0.25 (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)) x))) into (- (+ (* 0.5 (pow x 2)) (+ (* 0.25 (* (exp (* 3 (+ (log 0.5) (log x)))) x)) (* 0.00390625 (* (exp (* 3 (+ (log 0.5) (log x)))) (pow x 4))))) (+ (* 0.03125 (pow x 4)) (+ (* 0.0625 (* (exp (* 3 (+ (log 0.5) (log x)))) (pow x 2))) (* 2.0 x))))
* [misc]approximate:  Taking taylor expansion of (/ (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) (/ 1 x)) (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) (/ 1 x)) (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (log x))) into (* 3 (- (log 0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (log x)))) into (exp (* 3 (- (log 0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (+ (pow -2.0 3) (exp (* 3 (- (log 0.5) (log x))))) into (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 1) into (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (+ 0 0.25) into 0.25
* [misc]backup-simplify:  Simplify (/ (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0.25) into (* 4.0 (- (exp (* 3 (- (log 0.5) (log x)))) 8.0))
* [misc]taylor:  Taking taylor expansion of (/ (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) (/ 1 x)) (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (log x))) into (* 3 (- (log 0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (log x)))) into (exp (* 3 (- (log 0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (+ (pow -2.0 3) (exp (* 3 (- (log 0.5) (log x))))) into (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 1) into (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (+ 0 0.25) into 0.25
* [misc]backup-simplify:  Simplify (/ (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0.25) into (* 4.0 (- (exp (* 3 (- (log 0.5) (log x)))) 8.0))
* [misc]backup-simplify:  Simplify (* 4.0 (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)) into (* 4.0 (- (exp (* 3 (- (log 0.5) (log x)))) 8.0))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -2.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log -2.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 0.5) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 0.5) into -1.0
* [misc]backup-simplify:  Simplify (- -1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- (/ 0 0.25) (+ (* (* 4.0 (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)) (/ 1.0 0.25)))) into (- 128.0 (* 16.0 (exp (* 3 (- (log 0.5) (log x))))))
* [misc]backup-simplify:  Simplify (- 128.0 (* 16.0 (exp (* 3 (- (log 0.5) (log x)))))) into (- 128.0 (* 16.0 (exp (* 3 (- (log 0.5) (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -2.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -2.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log -2.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log 0.5) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (* -2.0 -2.0) into 4.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (- (/ 0 0.25) (+ (* (* 4.0 (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)) (/ 4.0 0.25)) (* (- 128.0 (* 16.0 (exp (* 3 (- (log 0.5) (log x)))))) (/ 1.0 0.25)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -2.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -2.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -2.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 0.25) (+ (* (* 4.0 (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)) (/ 0 0.25)) (* (- 128.0 (* 16.0 (exp (* 3 (- (log 0.5) (log x)))))) (/ 4.0 0.25)) (* 0 (/ 1.0 0.25)))) into (- (* 256.0 (exp (* 3 (- (log 0.5) (log x))))) 2048.0)
* [misc]backup-simplify:  Simplify (- (* 256.0 (exp (* 3 (- (log 0.5) (log x))))) 2048.0) into (- (* 256.0 (exp (* 3 (- (log 0.5) (log x))))) 2048.0)
* [misc]backup-simplify:  Simplify (+ (* (- (* 256.0 (exp (* 3 (- (log 0.5) (log (/ 1 x)))))) 2048.0) (pow (/ 1 x) 4)) (+ (* (- 128.0 (* 16.0 (exp (* 3 (- (log 0.5) (log (/ 1 x))))))) (pow (/ 1 x) 2)) (* (* 4.0 (- (exp (* 3 (- (log 0.5) (log (/ 1 x))))) 8.0)) (/ 1 x)))) into (- (+ (* 4.0 (/ (exp (* 3 (- (log 0.5) (log (/ 1 x))))) x)) (+ (* 256.0 (/ (exp (* 3 (- (log 0.5) (log (/ 1 x))))) (pow x 4))) (* 128.0 (/ 1 (pow x 2))))) (+ (* 32.0 (/ 1 x)) (+ (* 16.0 (/ (exp (* 3 (- (log 0.5) (log (/ 1 x))))) (pow x 2))) (* 2048.0 (/ 1 (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (/ (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) (/ 1 (- x))) (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) (/ 1 (- x))) (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (log -0.5) into (log -0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -0.5) (log x))) into (* 3 (- (log -0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -0.5) (log x)))) into (exp (* 3 (- (log -0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (+ (pow -2.0 3) (exp (* 3 (- (log -0.5) (log x))))) into (- (exp (* 3 (- (log -0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) -1) into (* -1 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0))
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* -0.5 -0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (+ 0 0.25) into 0.25
* [misc]backup-simplify:  Simplify (/ (* -1 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0)) 0.25) into (* -4.0 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0))
* [misc]taylor:  Taking taylor expansion of (/ (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) (/ 1 (- x))) (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (log -0.5) into (log -0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -0.5) (log x))) into (* 3 (- (log -0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -0.5) (log x)))) into (exp (* 3 (- (log -0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (+ (pow -2.0 3) (exp (* 3 (- (log -0.5) (log x))))) into (- (exp (* 3 (- (log -0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) -1) into (* -1 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0))
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* -0.5 -0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (+ 0 0.25) into 0.25
* [misc]backup-simplify:  Simplify (/ (* -1 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0)) 0.25) into (* -4.0 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0))
* [misc]backup-simplify:  Simplify (* -4.0 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0)) into (* -4.0 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -2.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log -2.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -0.5) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -0.5) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (* 0 -0.5)) into 0
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* -2.0 -0.5) into 1.0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (- (/ 0 0.25) (+ (* (* -4.0 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0)) (/ (- 1.0) 0.25)))) into (- 128.0 (* 16.0 (exp (* 3 (- (log -0.5) (log x))))))
* [misc]backup-simplify:  Simplify (- 128.0 (* 16.0 (exp (* 3 (- (log -0.5) (log x)))))) into (- 128.0 (* 16.0 (exp (* 3 (- (log -0.5) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -2.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -2.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log -2.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -0.5) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -0.5) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (* -2.0 -2.0) into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (+ (* 0 0) (* 0 -0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (- (/ 0 0.25) (+ (* (* -4.0 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0)) (/ 4.0 0.25)) (* (- 128.0 (* 16.0 (exp (* 3 (- (log -0.5) (log x)))))) (/ (- 1.0) 0.25)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -2.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -2.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.5) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -0.5) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -2.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.5)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 -0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 0.25) (+ (* (* -4.0 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0)) (/ 0 0.25)) (* (- 128.0 (* 16.0 (exp (* 3 (- (log -0.5) (log x)))))) (/ 4.0 0.25)) (* 0 (/ (- 1.0) 0.25)))) into (- (* 256.0 (exp (* 3 (- (log -0.5) (log x))))) 2048.0)
* [misc]backup-simplify:  Simplify (- (* 256.0 (exp (* 3 (- (log -0.5) (log x))))) 2048.0) into (- (* 256.0 (exp (* 3 (- (log -0.5) (log x))))) 2048.0)
* [misc]backup-simplify:  Simplify (+ (* (- (* 256.0 (exp (* 3 (- (log -0.5) (log (/ 1 (- x))))))) 2048.0) (pow (/ 1 (- x)) 4)) (+ (* (- 128.0 (* 16.0 (exp (* 3 (- (log -0.5) (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (* (* -4.0 (- (exp (* 3 (- (log -0.5) (log (/ 1 (- x)))))) 8.0)) (/ 1 (- x))))) into (- (+ (* 256.0 (/ (exp (* 3 (- (log -0.5) (log (/ -1 x))))) (pow x 4))) (+ (* 4.0 (/ (exp (* 3 (- (log -0.5) (log (/ -1 x))))) x)) (* 128.0 (/ 1 (pow x 2))))) (+ (* 16.0 (/ (exp (* 3 (- (log -0.5) (log (/ -1 x))))) (pow x 2))) (+ (* 32.0 (/ 1 x)) (* 2048.0 (/ 1 (pow x 4))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (+ (log 0.5) (log x))) into (* 3 (+ (log 0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log 0.5) (log x)))) into (exp (* 3 (+ (log 0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (+ (log 0.5) (log x))) into (* 3 (+ (log 0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log 0.5) (log x)))) into (exp (* 3 (+ (log 0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (pow -2.0 3) (exp (* 3 (+ (log 0.5) (log x))))) into (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -2.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log -2.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (+ (log 0.5) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 1) (* 0 0)) into (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) into (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -2.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -2.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log -2.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (+ (log 0.5) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -2.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -2.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -2.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -2.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -2.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -2.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -2.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -2.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -2.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -2.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -2.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -2.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -2.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -2.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -2.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -2.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -2.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -2.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -2.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -2.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -2.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -2.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -2.0 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -2.0 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -2.0 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -2.0 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -2.0 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -2.0 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -2.0 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -2.0 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -2.0 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -2.0 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -2.0 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -2.0 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -2.0 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -2.0 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 0.5 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 0.5 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 0.5 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 0.5 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 0.5 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 0.5 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 0.5 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 0.5 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 0.5 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 0.5 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log 0.5)) into (+ (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) x) into (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) x)
* [misc]approximate:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (log x))) into (* 3 (- (log 0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (log x)))) into (exp (* 3 (- (log 0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (log x))) into (* 3 (- (log 0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (log x)))) into (exp (* 3 (- (log 0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (+ (pow -2.0 3) (exp (* 3 (- (log 0.5) (log x))))) into (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 1) into (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) into (- (exp (* 3 (- (log 0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -2.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log -2.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 0.5) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -2.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -2.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log -2.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log 0.5) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -2.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -2.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -2.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -2.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -2.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -2.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -2.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -2.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -2.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -2.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -2.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -2.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -2.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -2.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -2.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -2.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -2.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -2.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -2.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -2.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -2.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -2.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.5)) into (- (log 0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log 0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (- (log 0.5) (log (/ 1 x))))) 8.0) (/ 1 (/ 1 x))) into (* (- (exp (* 3 (- (log 0.5) (log (/ 1 x))))) 8.0) x)
* [misc]approximate:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (log -0.5) into (log -0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -0.5) (log x))) into (* 3 (- (log -0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -0.5) (log x)))) into (exp (* 3 (- (log -0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow -2.0 3) (pow (* 0.5 (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow -2.0 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log -2.0))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log -2.0)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (log -2.0) into (log -2.0)
* [misc]backup-simplify:  Simplify (* 3 (log -2.0)) into (* 3 (log -2.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log -2.0))) into (pow -2.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (log -0.5) into (log -0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -0.5) (log x))) into (* 3 (- (log -0.5) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -0.5) (log x)))) into (exp (* 3 (- (log -0.5) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (+ (pow -2.0 3) (exp (* 3 (- (log -0.5) (log x))))) into (- (exp (* 3 (- (log -0.5) (log x)))) 8.0)
* [misc]backup-simplify:  Simplify (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) -1) into (* -1 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0))
* [misc]backup-simplify:  Simplify (* -1 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0)) into (* -1 (- (exp (* 3 (- (log -0.5) (log x)))) 8.0))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -2.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log -2.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -0.5) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -0.5) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -2.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -2.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log -2.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -0.5) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -0.5) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -2.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -2.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.5) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -0.5) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -2.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -2.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -2.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -2.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.5) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -0.5) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -2.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -2.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -2.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -2.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -2.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -2.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.5) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -0.5) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -2.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -2.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -2.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -2.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -2.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -2.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -2.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -2.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -2.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -2.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -2.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log -2.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log -2.0))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -0.5)) into (- (log -0.5) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.5) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -0.5) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- (exp (* 3 (- (log -0.5) (log x)))) 8.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* -1 (- (exp (* 3 (- (log -0.5) (log (/ 1 (- x)))))) 8.0)) (/ 1 (/ 1 (- x)))) into (* (- (exp (* 3 (- (log -0.5) (log (/ -1 x))))) 8.0) x)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 2)
* [misc]approximate:  Taking taylor expansion of (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 x) (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 x) (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0.5) (* 0.5 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (+ (* -2.0 0.5) (* 0 0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (- (- 1.0)) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0.5 0.5) (* 0 0))) into 0.25
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0.5) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify 0.25 into 0.25
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0.5) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.25 (pow x 2)) (* 1.0 x)) into (+ (* 0.25 (pow x 2)) (* 1.0 x))
* [misc]approximate:  Taking taylor expansion of (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify 0.25 into 0.25
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 0.5) into -1.0
* [misc]backup-simplify:  Simplify (- -1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.0 (/ 1 (/ 1 x))) (* 0.25 (pow (/ 1 (/ 1 x)) 2))) into (+ (* 0.25 (pow x 2)) (* 1.0 x))
* [misc]approximate:  Taking taylor expansion of (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* -0.5 -0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify 0.25 into 0.25
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (* 0 -0.5)) into 0
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* -2.0 -0.5) into 1.0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (+ (* 0 0) (* 0 -0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.5)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 -0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.5))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.5)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.5)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.5))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.5))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.5)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.5)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.5))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.0) (/ 1 (/ 1 (- x)))) (* 0.25 (pow (/ 1 (/ 1 (- x))) 2))) into (+ (* 0.25 (pow x 2)) (* 1.0 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 x) (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 x) (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 x) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 -2.0) into 4.0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -2.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0.5) (* 0.5 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (* 0 0)) into 0.5
* [misc]backup-simplify:  Simplify (+ (* -2.0 0.5) (* 0 0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (- (- 1.0)) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0.5 0.5) (* 0 0))) into 0.25
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0.5) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (+ 0 0.25) into 0.25
* [misc]backup-simplify:  Simplify 0.25 into 0.25
* [misc]backup-simplify:  Simplify (+ (* 0.25 (pow x 2)) (+ (* 1.0 x) 4.0)) into (+ (* 0.25 (pow x 2)) (+ 4.0 (* 1.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) (* -2.0 (* 0.5 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 x)) (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (+ 0 0.25) into 0.25
* [misc]backup-simplify:  Simplify 0.25 into 0.25
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 0.5) into -1.0
* [misc]backup-simplify:  Simplify (- -1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -2.0 -2.0) into 4.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 (+ (* 1.0 (/ 1 (/ 1 x))) (* 0.25 (pow (/ 1 (/ 1 x)) 2)))) into (+ (* 0.25 (pow x 2)) (+ 4.0 (* 1.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -2.0 -2.0) (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -2.0 -2.0) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (- (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) (* -2.0 (* 0.5 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (/ 1 (- x))) (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -2.0 (* 0.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* -0.5 -0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (+ 0 0.25) into 0.25
* [misc]backup-simplify:  Simplify 0.25 into 0.25
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (* 0 -0.5)) into 0
* [misc]backup-simplify:  Simplify (* 0.5 -1) into -0.5
* [misc]backup-simplify:  Simplify (* -2.0 -0.5) into 1.0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (* -2.0 -2.0) into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.5 0) (+ (* 0 0) (* 0 -0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (+ 4.0 (+ (* (- 1.0) (/ 1 (/ 1 (- x)))) (* 0.25 (pow (/ 1 (/ 1 (- x))) 2)))) into (+ (* 0.25 (pow x 2)) (+ 4.0 (* 1.0 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (pow (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) 1)))>
* * * * [misc]progress:  [ 2 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (exp (- (log (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (log (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (- (log (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (log (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (227 enodes)
* * [misc]simplify:  iters left: 2 (321 enodes)
* * [misc]simplify:  iters left: 1 (357 enodes)
* [exit]simplify:  Simplified to (- (log (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x))))) (log (+ (* (* 0.5 x) (* 0.5 x)) (* -2.0 (- -2.0 (* 0.5 x))))))
* [exit]simplify:  Simplified to (- (log (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x))))) (log (+ (* (* 0.5 x) (* 0.5 x)) (* -2.0 (- -2.0 (* 0.5 x))))))
* * * * [misc]progress:  [ 3 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (exp (log (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (log (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (253 enodes)
* * [misc]simplify:  iters left: 2 (373 enodes)
* [exit]simplify:  Simplified to (log (/ (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* -2.0 (- -2.0 (* 0.5 x))))))
* [exit]simplify:  Simplified to (log (/ (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* -2.0 (- -2.0 (* 0.5 x))))))
* * * * [misc]progress:  [ 4 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (log (exp (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (exp (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* [exit]simplify:  Simplified to (exp (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* (- -2.0 (* 0.5 x)) -2.0))))
* [exit]simplify:  Simplified to (exp (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* (- -2.0 (* 0.5 x)) -2.0))))
* * * * [misc]progress:  [ 5 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (cbrt (/ (* (* (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (* (* (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (/ (* (* (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (* (* (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (300 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* 0.5 x) (* 0.5 x)) (* (* x x) 0.5))) (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0)))) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* 0.5 x) (* 0.5 x)) (* (* x x) 0.5))) (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0)))) 3)
* * * * [misc]progress:  [ 6 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (* (cbrt (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))) (cbrt (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))) (cbrt (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))) (cbrt (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (342 enodes)
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* 0.5 x) (* x x)))) (+ (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* -2.0 -2.0)))) (cbrt (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* 0.5 x) (* x x)))) (+ (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* -2.0 -2.0)))))
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* 0.5 x) (* x x)))) (+ (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* -2.0 -2.0)))) (cbrt (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* 0.5 x) (* x x)))) (+ (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* -2.0 -2.0)))))
* [enter]simplify:  Simplifying (cbrt (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* [exit]simplify:  Simplified to (cbrt (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* x x) (* 0.5 x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* (- -2.0 (* 0.5 x)) -2.0))))
* [exit]simplify:  Simplified to (cbrt (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* x x) (* 0.5 x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* (- -2.0 (* 0.5 x)) -2.0))))
* * * * [misc]progress:  [ 7 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (cbrt (* (* (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))) (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (* (* (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))) (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (* (* (* x x) 0.5) (* (* 0.5 x) (* 0.5 x))) (* (* -2.0 -2.0) (* -2.0 x))) (+ (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* -2.0 -2.0))) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (* (* (* x x) 0.5) (* (* 0.5 x) (* 0.5 x))) (* (* -2.0 -2.0) (* -2.0 x))) (+ (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* -2.0 -2.0))) 3)
* * * * [misc]progress:  [ 8 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (sqrt (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))) (sqrt (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (sqrt (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* x x) (* 0.5 x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* (- -2.0 (* 0.5 x)) -2.0))))
* [exit]simplify:  Simplified to (sqrt (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* x x) (* 0.5 x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* (- -2.0 (* 0.5 x)) -2.0))))
* [enter]simplify:  Simplifying (sqrt (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* x x) (* 0.5 x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* (- -2.0 (* 0.5 x)) -2.0))))
* [exit]simplify:  Simplified to (sqrt (/ (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* x x) (* 0.5 x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* (- -2.0 (* 0.5 x)) -2.0))))
* * * * [misc]progress:  [ 9 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (- (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (- (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))>
* [enter]simplify:  Simplifying (- (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (188 enodes)
* * [misc]simplify:  iters left: 2 (463 enodes)
* [exit]simplify:  Simplified to (- (* (* (* 0.5 x) (* 0.5 x)) (* (- x) (* 0.5 x))) (* (* -2.0 -2.0) (* -2.0 x)))
* [exit]simplify:  Simplified to (- (* (* (* 0.5 x) (* 0.5 x)) (* (- x) (* 0.5 x))) (* (* -2.0 -2.0) (* -2.0 x)))
* [enter]simplify:  Simplifying (- (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (174 enodes)
* * [misc]simplify:  iters left: 2 (304 enodes)
* * [misc]simplify:  iters left: 1 (374 enodes)
* [exit]simplify:  Simplified to (- (* (- (* 0.5 x) -2.0) -2.0) (* (* 0.5 x) (* 0.5 x)))
* [exit]simplify:  Simplified to (- (* (- (* 0.5 x) -2.0) -2.0) (* (* 0.5 x) (* 0.5 x)))
* * * * [misc]progress:  [ 10 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) (* (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))) (/ x (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) (* (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (173 enodes)
* * [misc]simplify:  iters left: 2 (213 enodes)
* * [misc]simplify:  iters left: 1 (231 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) (* (cbrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (- (* 0.5 x) -2.0)))) (cbrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (- (* 0.5 x) -2.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) (* (cbrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (- (* 0.5 x) -2.0)))) (cbrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (- (* 0.5 x) -2.0))))))
* [enter]simplify:  Simplifying (/ x (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (/ x (cbrt (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x)))))
* [exit]simplify:  Simplified to (/ x (cbrt (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x)))))
* * * * [misc]progress:  [ 11 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))) (/ x (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* * [misc]simplify:  iters left: 2 (209 enodes)
* * [misc]simplify:  iters left: 1 (227 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) (sqrt (- (* -2.0 -2.0) (* (* 0.5 x) (- -2.0 (* 0.5 x))))))
* [exit]simplify:  Simplified to (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) (sqrt (- (* -2.0 -2.0) (* (* 0.5 x) (- -2.0 (* 0.5 x))))))
* [enter]simplify:  Simplifying (/ x (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (/ x (sqrt (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x)))))
* [exit]simplify:  Simplified to (/ x (sqrt (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x)))))
* * * * [misc]progress:  [ 12 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) 1) (/ x (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))>
* [enter]simplify:  Simplifying (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) 1)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* [exit]simplify:  Simplified to (+ (pow -2.0 3) (pow (* 0.5 x) 3))
* [exit]simplify:  Simplified to (+ (pow -2.0 3) (pow (* 0.5 x) 3))
* [enter]simplify:  Simplifying (/ x (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (/ x (+ (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* -2.0 -2.0)))
* [exit]simplify:  Simplified to (/ x (+ (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* -2.0 -2.0)))
* * * * [misc]progress:  [ 13 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* 1 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))>
* * * * [misc]progress:  [ 14 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (/ 1 (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))>
* [enter]simplify:  Simplifying (/ 1 (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (131 enodes)
* * [misc]simplify:  iters left: 1 (149 enodes)
* [exit]simplify:  Simplified to (/ 1 (+ (* (* 0.5 x) (* 0.5 x)) (* (- -2.0 (* 0.5 x)) -2.0)))
* [exit]simplify:  Simplified to (/ 1 (+ (* (* 0.5 x) (* 0.5 x)) (* (- -2.0 (* 0.5 x)) -2.0)))
* * * * [misc]progress:  [ 15 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ 1 (/ (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)))))>
* [enter]simplify:  Simplifying (/ (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (270 enodes)
* [exit]simplify:  Simplified to (/ (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0))) (+ (* (* -2.0 -2.0) (* x -2.0)) (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (/ (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0))) (+ (* (* -2.0 -2.0) (* x -2.0)) (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 16 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (* (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))) (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))>
* [enter]simplify:  Simplifying (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (* (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* * [misc]simplify:  iters left: 2 (344 enodes)
* * [misc]simplify:  iters left: 1 (474 enodes)
* [exit]simplify:  Simplified to (/ (/ (+ (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x))) (* (* -2.0 -2.0) (* -2.0 x))) (cbrt (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0))))) (cbrt (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0)))))
* [exit]simplify:  Simplified to (/ (/ (+ (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x))) (* (* -2.0 -2.0) (* -2.0 x))) (cbrt (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0))))) (cbrt (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0)))))
* * * * [misc]progress:  [ 17 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))) (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))>
* [enter]simplify:  Simplifying (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* * [misc]simplify:  iters left: 2 (305 enodes)
* * [misc]simplify:  iters left: 1 (361 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x))) (* (* -2.0 x) (* -2.0 -2.0))) (sqrt (+ (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* -2.0 -2.0))))
* [exit]simplify:  Simplified to (/ (+ (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x))) (* (* -2.0 x) (* -2.0 -2.0))) (sqrt (+ (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* -2.0 -2.0))))
* * * * [misc]progress:  [ 18 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) 1) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) 1)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (234 enodes)
* [exit]simplify:  Simplified to (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* 0.5 x) (* x x))))
* [exit]simplify:  Simplified to (+ (* (* -2.0 -2.0) (* -2.0 x)) (* (* 0.5 (* 0.5 x)) (* (* 0.5 x) (* x x))))
* * * * [misc]progress:  [ 19 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (+ (pow -2.0 3) (pow (* 0.5 x) 3)) (/ (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) x))))>
* [enter]simplify:  Simplifying (/ (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) x)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (167 enodes)
* * [misc]simplify:  iters left: 1 (284 enodes)
* [exit]simplify:  Simplified to (+ (* 0.5 (- (* 0.5 x) -2.0)) (/ (* -2.0 -2.0) x))
* [exit]simplify:  Simplified to (+ (* 0.5 (- (* 0.5 x) -2.0)) (/ (* -2.0 -2.0) x))
* * * * [misc]progress:  [ 20 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (pow (* -2.0 -2.0) 3) (pow (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) 3))) (+ (* (* -2.0 -2.0) (* -2.0 -2.0)) (- (* (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (* (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (pow (* -2.0 -2.0) 3) (pow (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) 3)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (480 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x)))) (+ (pow (* (- (* 0.5 x) -2.0) (* 0.5 x)) 3) (pow (* -2.0 -2.0) 3)))
* [exit]simplify:  Simplified to (/ (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x)))) (+ (pow (* (- (* 0.5 x) -2.0) (* 0.5 x)) 3) (pow (* -2.0 -2.0) 3)))
* * * * [misc]progress:  [ 21 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (* (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (- (* (* -2.0 -2.0) (* -2.0 -2.0)) (* (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))) (- (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (- (* (* -2.0 -2.0) (* -2.0 -2.0)) (* (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (480 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* 0.5 (* 0.5 x)) (* (* x x) (* 0.5 x)))) (- (* (* -2.0 -2.0) (* -2.0 -2.0)) (* (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* (* 0.5 x) (- (* 0.5 x) -2.0)))))
* [exit]simplify:  Simplified to (/ (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* 0.5 (* 0.5 x)) (* (* x x) (* 0.5 x)))) (- (* (* -2.0 -2.0) (* -2.0 -2.0)) (* (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* (* 0.5 x) (- (* 0.5 x) -2.0)))))
* * * * [misc]progress:  [ 22 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow (pow -2.0 3) 3) (pow (pow (* 0.5 x) 3) 3)) x) (* (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (+ (* (pow -2.0 3) (pow -2.0 3)) (- (* (pow (* 0.5 x) 3) (pow (* 0.5 x) 3)) (* (pow -2.0 3) (pow (* 0.5 x) 3))))))))>
* [enter]simplify:  Simplifying (* (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (+ (* (pow -2.0 3) (pow -2.0 3)) (- (* (pow (* 0.5 x) 3) (pow (* 0.5 x) 3)) (* (pow -2.0 3) (pow (* 0.5 x) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow (* 0.5 x) 3) (+ (* (* -2.0 -2.0) (- -2.0)) (pow (* 0.5 x) 3))) (* (pow -2.0 3) (pow -2.0 3))) (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x))))
* [exit]simplify:  Simplified to (* (+ (* (pow (* 0.5 x) 3) (+ (* (* -2.0 -2.0) (- -2.0)) (pow (* 0.5 x) 3))) (* (pow -2.0 3) (pow -2.0 3))) (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x))))
* * * * [misc]progress:  [ 23 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (- (* (pow -2.0 3) (pow -2.0 3)) (* (pow (* 0.5 x) 3) (pow (* 0.5 x) 3))) x) (* (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (- (pow -2.0 3) (pow (* 0.5 x) 3))))))>
* [enter]simplify:  Simplifying (* (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (- (pow -2.0 3) (pow (* 0.5 x) 3)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (372 enodes)
* [exit]simplify:  Simplified to (* (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0))) (- (pow -2.0 3) (pow (* 0.5 x) 3)))
* [exit]simplify:  Simplified to (* (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0))) (- (pow -2.0 3) (pow (* 0.5 x) 3)))
* * * * [misc]progress:  [ 24 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (pow (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) 1) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* * * * [misc]progress:  [ 25 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (exp (log (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (log (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (185 enodes)
* * [misc]simplify:  iters left: 1 (205 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (log (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 26 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (log (exp (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (exp (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (142 enodes)
* * [misc]simplify:  iters left: 2 (275 enodes)
* * [misc]simplify:  iters left: 1 (328 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (pow -2.0 3) (pow (* 0.5 x) 3)))
* [exit]simplify:  Simplified to (pow (exp x) (+ (pow -2.0 3) (pow (* 0.5 x) 3)))
* * * * [misc]progress:  [ 27 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (* (cbrt (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (cbrt (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))) (cbrt (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (cbrt (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (175 enodes)
* * [misc]simplify:  iters left: 1 (193 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x))) (* (* -2.0 -2.0) (* -2.0 x)))) (cbrt (+ (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x))) (* (* -2.0 -2.0) (* -2.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x))) (* (* -2.0 -2.0) (* -2.0 x)))) (cbrt (+ (* (* (* 0.5 x) (* 0.5 x)) (* 0.5 (* x x))) (* (* -2.0 -2.0) (* -2.0 x)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (176 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x)))))
* * * * [misc]progress:  [ 28 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (cbrt (* (* (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (* (* (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (425 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* (* 0.5 x) (* 0.5 x)) (* (* 0.5 x) x)) (* (* -2.0 -2.0) (* -2.0 x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* (* 0.5 x) (* 0.5 x)) (* (* 0.5 x) x)) (* (* -2.0 -2.0) (* -2.0 x))) 3)
* * * * [misc]progress:  [ 29 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (sqrt (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (sqrt (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (176 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x)))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x)))))
* [enter]simplify:  Simplifying (sqrt (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (176 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x)))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* -2.0 x) (* -2.0 -2.0)) (* (* (* x x) (* 0.5 x)) (* 0.5 (* 0.5 x)))))
* * * * [misc]progress:  [ 30 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* 1 (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* * * * [misc]progress:  [ 31 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (* (cbrt (+ (pow -2.0 3) (pow (* 0.5 x) 3))) (cbrt (+ (pow -2.0 3) (pow (* 0.5 x) 3)))) (* (cbrt (+ (pow -2.0 3) (pow (* 0.5 x) 3))) x)) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow -2.0 3) (pow (* 0.5 x) 3))) x)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (76 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow -2.0 3) (pow (* 0.5 x) 3))) x)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow -2.0 3) (pow (* 0.5 x) 3))) x)
* * * * [misc]progress:  [ 32 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (sqrt (+ (pow -2.0 3) (pow (* 0.5 x) 3))) (* (sqrt (+ (pow -2.0 3) (pow (* 0.5 x) 3))) x)) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow -2.0 3) (pow (* 0.5 x) 3))) x)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (76 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow -2.0 3) (pow (* 0.5 x) 3))) x)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow -2.0 3) (pow (* 0.5 x) 3))) x)
* * * * [misc]progress:  [ 33 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (* (+ -2.0 (* 0.5 x)) x)) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (* (+ -2.0 (* 0.5 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x 0.5) -2.0) x)
* [exit]simplify:  Simplified to (* (+ (* x 0.5) -2.0) x)
* * * * [misc]progress:  [ 34 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* 1 (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (209 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* 0.5 x) (* x x)) (* 0.5 (* 0.5 x))) (* (* -2.0 x) (* -2.0 -2.0)))
* [exit]simplify:  Simplified to (+ (* (* (* 0.5 x) (* x x)) (* 0.5 (* 0.5 x))) (* (* -2.0 x) (* -2.0 -2.0)))
* * * * [misc]progress:  [ 35 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* 1 (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (209 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* 0.5 x) (* x x)) (* 0.5 (* 0.5 x))) (* (* -2.0 x) (* -2.0 -2.0)))
* [exit]simplify:  Simplified to (+ (* (* (* 0.5 x) (* x x)) (* 0.5 (* 0.5 x))) (* (* -2.0 x) (* -2.0 -2.0)))
* * * * [misc]progress:  [ 36 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (/ (* (+ (pow (pow -2.0 3) 3) (pow (pow (* 0.5 x) 3) 3)) x) (+ (* (pow -2.0 3) (pow -2.0 3)) (- (* (pow (* 0.5 x) 3) (pow (* 0.5 x) 3)) (* (pow -2.0 3) (pow (* 0.5 x) 3))))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (* (+ (pow (pow -2.0 3) 3) (pow (pow (* 0.5 x) 3) 3)) x)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (+ (* (* 0.5 (* x x)) (pow (* (* x 0.5) (* x 0.5)) (+ 1 3))) (* (* (* -2.0 -2.0) (* x -2.0)) (pow (* -2.0 -2.0) 3)))
* [exit]simplify:  Simplified to (+ (* (* 0.5 (* x x)) (pow (* (* x 0.5) (* x 0.5)) (+ 1 3))) (* (* (* -2.0 -2.0) (* x -2.0)) (pow (* -2.0 -2.0) 3)))
* * * * [misc]progress:  [ 37 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (/ (* (- (* (pow -2.0 3) (pow -2.0 3)) (* (pow (* 0.5 x) 3) (pow (* 0.5 x) 3))) x) (- (pow -2.0 3) (pow (* 0.5 x) 3))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (* (- (* (pow -2.0 3) (pow -2.0 3)) (* (pow (* 0.5 x) 3) (pow (* 0.5 x) 3))) x)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (361 enodes)
* [exit]simplify:  Simplified to (- (* (* (* x -2.0) -2.0) (* (* -2.0 -2.0) (* -2.0 -2.0))) (* (* (* 0.5 0.5) (pow x 3)) (pow (* x 0.5) (+ 1 3))))
* [exit]simplify:  Simplified to (- (* (* (* x -2.0) -2.0) (* (* -2.0 -2.0) (* -2.0 -2.0))) (* (* (* 0.5 0.5) (pow x 3)) (pow (* x 0.5) (+ 1 3))))
* * * * [misc]progress:  [ 38 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* x (+ (pow -2.0 3) (pow (* 0.5 x) 3))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* * * * [misc]progress:  [ 39 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (log (/ (exp (* (* 0.5 x) (* 0.5 x))) (exp (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (/ (exp (* (* 0.5 x) (* 0.5 x))) (exp (* -2.0 (* 0.5 x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (142 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (pow (exp (* 0.5 x)) (- (* 0.5 x) -2.0))
* [exit]simplify:  Simplified to (pow (exp (* 0.5 x)) (- (* 0.5 x) -2.0))
* * * * [misc]progress:  [ 40 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (pow (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) 1)))))>
* * * * [misc]progress:  [ 41 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (exp (log (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (log (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (100 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* [exit]simplify:  Simplified to (log (* (- (* 0.5 x) -2.0) (* 0.5 x)))
* [exit]simplify:  Simplified to (log (* (- (* 0.5 x) -2.0) (* 0.5 x)))
* * * * [misc]progress:  [ 42 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (log (exp (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (exp (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (179 enodes)
* * [misc]simplify:  iters left: 1 (206 enodes)
* [exit]simplify:  Simplified to (pow (exp (* 0.5 x)) (- (* 0.5 x) -2.0))
* [exit]simplify:  Simplified to (pow (exp (* 0.5 x)) (- (* 0.5 x) -2.0))
* * * * [misc]progress:  [ 43 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (* (* (cbrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (cbrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (cbrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (cbrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* 0.5 x) -2.0) (* 0.5 x))) (cbrt (* (- (* 0.5 x) -2.0) (* 0.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* 0.5 x) -2.0) (* 0.5 x))) (cbrt (* (- (* 0.5 x) -2.0) (* 0.5 x))))
* [enter]simplify:  Simplifying (cbrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* 0.5 x) -2.0) (* 0.5 x)))
* [exit]simplify:  Simplified to (cbrt (* (- (* 0.5 x) -2.0) (* 0.5 x)))
* * * * [misc]progress:  [ 44 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (cbrt (* (* (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (* (* (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (344 enodes)
* [exit]simplify:  Simplified to (pow (* (- (* 0.5 x) -2.0) (* 0.5 x)) 3)
* [exit]simplify:  Simplified to (pow (* (- (* 0.5 x) -2.0) (* 0.5 x)) 3)
* * * * [misc]progress:  [ 45 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (* (sqrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (sqrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (sqrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* [exit]simplify:  Simplified to (sqrt (* (- (* 0.5 x) -2.0) (* 0.5 x)))
* [exit]simplify:  Simplified to (sqrt (* (- (* 0.5 x) -2.0) (* 0.5 x)))
* [enter]simplify:  Simplifying (sqrt (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* [exit]simplify:  Simplified to (sqrt (* (- (* 0.5 x) -2.0) (* 0.5 x)))
* [exit]simplify:  Simplified to (sqrt (* (- (* 0.5 x) -2.0) (* 0.5 x)))
* * * * [misc]progress:  [ 46 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (/ (- (pow (* (* 0.5 x) (* 0.5 x)) 3) (pow (* -2.0 (* 0.5 x)) 3)) (+ (* (* (* 0.5 x) (* 0.5 x)) (* (* 0.5 x) (* 0.5 x))) (+ (* (* -2.0 (* 0.5 x)) (* -2.0 (* 0.5 x))) (* (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))))>
* [enter]simplify:  Simplifying (- (pow (* (* 0.5 x) (* 0.5 x)) 3) (pow (* -2.0 (* 0.5 x)) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* [exit]simplify:  Simplified to (* (pow (* 0.5 x) 3) (+ (pow (* 0.5 x) 3) (* (- -2.0) (* -2.0 -2.0))))
* [exit]simplify:  Simplified to (* (pow (* 0.5 x) 3) (+ (pow (* 0.5 x) 3) (* (- -2.0) (* -2.0 -2.0))))
* [enter]simplify:  Simplifying (+ (* (* (* 0.5 x) (* 0.5 x)) (* (* 0.5 x) (* 0.5 x))) (+ (* (* -2.0 (* 0.5 x)) (* -2.0 (* 0.5 x))) (* (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (+ (* (* 0.5 (* -2.0 x)) (* 0.5 (* -2.0 x))) (* (pow (* 0.5 x) 3) (+ (* 0.5 x) -2.0)))
* [exit]simplify:  Simplified to (+ (* (* 0.5 (* -2.0 x)) (* 0.5 (* -2.0 x))) (* (pow (* 0.5 x) 3) (+ (* 0.5 x) -2.0)))
* * * * [misc]progress:  [ 47 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (+ (* (* 0.5 x) (* 0.5 x)) (- (* -2.0 (* 0.5 x))))))))>
* [enter]simplify:  Simplifying (- (* -2.0 (* 0.5 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* [exit]simplify:  Simplified to (* (* -2.0 0.5) (- x))
* [exit]simplify:  Simplified to (* (* -2.0 0.5) (- x))
* * * * [misc]progress:  [ 48 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (* 1 (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))>
* * * * [misc]progress:  [ 49 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (/ (- (* (* (* 0.5 x) (* 0.5 x)) (* (* 0.5 x) (* 0.5 x))) (* (* -2.0 (* 0.5 x)) (* -2.0 (* 0.5 x)))) (+ (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))>
* [enter]simplify:  Simplifying (- (* (* (* 0.5 x) (* 0.5 x)) (* (* 0.5 x) (* 0.5 x))) (* (* -2.0 (* 0.5 x)) (* -2.0 (* 0.5 x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (* (* (* 0.5 x) (* 0.5 x)) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 -2.0)))
* [exit]simplify:  Simplified to (* (* (* 0.5 x) (* 0.5 x)) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 -2.0)))
* [enter]simplify:  Simplifying (+ (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) (* 0.5 x))
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) (* 0.5 x))
* * * * [misc]progress:  [ 50 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0))))))>
* [enter]simplify:  Simplifying (- (* 0.5 x) -2.0)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (- (* 0.5 x) -2.0)
* [exit]simplify:  Simplified to (- (* 0.5 x) -2.0)
* * * * [misc]progress:  [ 51 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (+ (* (* 0.5 x) (* 0.5 x)) (- (* -2.0 (* 0.5 x))))))))>
* [enter]simplify:  Simplifying (- (* -2.0 (* 0.5 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* [exit]simplify:  Simplified to (* (* -2.0 0.5) (- x))
* [exit]simplify:  Simplified to (* (* -2.0 0.5) (- x))
* * * * [misc]progress:  [ 52 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (log (* (exp (* -2.0 -2.0)) (/ (exp (* (* 0.5 x) (* 0.5 x))) (exp (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (* (exp (* -2.0 -2.0)) (/ (exp (* (* 0.5 x) (* 0.5 x))) (exp (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (206 enodes)
* * [misc]simplify:  iters left: 1 (310 enodes)
* [exit]simplify:  Simplified to (/ (exp (* (* 0.5 x) (* 0.5 x))) (pow (exp -2.0) (- (* 0.5 x) -2.0)))
* [exit]simplify:  Simplified to (/ (exp (* (* 0.5 x) (* 0.5 x))) (pow (exp -2.0) (- (* 0.5 x) -2.0)))
* * * * [misc]progress:  [ 53 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (log (* (exp (* -2.0 -2.0)) (exp (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (* (exp (* -2.0 -2.0)) (exp (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (167 enodes)
* * [misc]simplify:  iters left: 2 (238 enodes)
* * [misc]simplify:  iters left: 1 (299 enodes)
* [exit]simplify:  Simplified to (/ (exp (* (* 0.5 x) (* 0.5 x))) (pow (exp -2.0) (- (* 0.5 x) -2.0)))
* [exit]simplify:  Simplified to (/ (exp (* (* 0.5 x) (* 0.5 x))) (pow (exp -2.0) (- (* 0.5 x) -2.0)))
* * * * [misc]progress:  [ 54 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (pow (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) 1))))>
* * * * [misc]progress:  [ 55 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (exp (log (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (log (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (log (+ (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* -2.0 -2.0)))
* [exit]simplify:  Simplified to (log (+ (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* -2.0 -2.0)))
* * * * [misc]progress:  [ 56 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (log (exp (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (exp (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (314 enodes)
* [exit]simplify:  Simplified to (* (exp (* (* 0.5 x) (* 0.5 x))) (pow (exp -2.0) (- -2.0 (* 0.5 x))))
* [exit]simplify:  Simplified to (* (exp (* (* 0.5 x) (* 0.5 x))) (pow (exp -2.0) (- -2.0 (* 0.5 x))))
* * * * [misc]progress:  [ 57 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (* (* (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))) (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x)))) (cbrt (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x)))) (cbrt (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x)))))
* [enter]simplify:  Simplifying (cbrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* -2.0 -2.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* -2.0 -2.0)))
* * * * [misc]progress:  [ 58 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (cbrt (* (* (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (* (* (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x))) 3)
* * * * [misc]progress:  [ 59 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (* (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* -2.0 -2.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* -2.0 -2.0)))
* [enter]simplify:  Simplifying (sqrt (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* -2.0 -2.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* -2.0 -2.0)))
* * * * [misc]progress:  [ 60 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (/ (+ (pow (* -2.0 -2.0) 3) (pow (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) 3)) (+ (* (* -2.0 -2.0) (* -2.0 -2.0)) (- (* (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (* (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))))>
* [enter]simplify:  Simplifying (+ (pow (* -2.0 -2.0) 3) (pow (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (392 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* x 0.5) (- (* x 0.5) -2.0)) 3) (pow (* -2.0 -2.0) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* x 0.5) (- (* x 0.5) -2.0)) 3) (pow (* -2.0 -2.0) 3))
* [enter]simplify:  Simplifying (+ (* (* -2.0 -2.0) (* -2.0 -2.0)) (- (* (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))) (* (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* [exit]simplify:  Simplified to (- (* (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* (- (* 0.5 x) -2.0) (* 0.5 x))) (- (* (* (* 0.5 x) (* -2.0 -2.0)) (- (* 0.5 x) -2.0)) (* (* -2.0 -2.0) (* -2.0 -2.0))))
* [exit]simplify:  Simplified to (- (* (* (- (* 0.5 x) -2.0) (* 0.5 x)) (* (- (* 0.5 x) -2.0) (* 0.5 x))) (- (* (* (* 0.5 x) (* -2.0 -2.0)) (- (* 0.5 x) -2.0)) (* (* -2.0 -2.0) (* -2.0 -2.0))))
* * * * [misc]progress:  [ 61 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (* 1 (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))>
* * * * [misc]progress:  [ 62 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (/ (- (* (* -2.0 -2.0) (* -2.0 -2.0)) (* (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))) (- (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))))>
* [enter]simplify:  Simplifying (- (* (* -2.0 -2.0) (* -2.0 -2.0)) (* (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (335 enodes)
* [exit]simplify:  Simplified to (- (* (* -2.0 -2.0) (* -2.0 -2.0)) (* (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* (* 0.5 x) (- (* 0.5 x) -2.0))))
* [exit]simplify:  Simplified to (- (* (* -2.0 -2.0) (* -2.0 -2.0)) (* (* (* 0.5 x) (- (* 0.5 x) -2.0)) (* (* 0.5 x) (- (* 0.5 x) -2.0))))
* [enter]simplify:  Simplifying (- (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (160 enodes)
* * [misc]simplify:  iters left: 2 (307 enodes)
* * [misc]simplify:  iters left: 1 (486 enodes)
* [exit]simplify:  Simplified to (- (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x)))
* [exit]simplify:  Simplified to (- (* -2.0 -2.0) (* (- (* 0.5 x) -2.0) (* 0.5 x)))
* * * * [misc]progress:  [ 63 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x))) (- (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* [exit]simplify:  Simplified to (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x)))
* [exit]simplify:  Simplified to (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x)))
* * * * [misc]progress:  [ 64 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x))) (- (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* [exit]simplify:  Simplified to (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x)))
* [exit]simplify:  Simplified to (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x)))
* * * * [misc]progress:  [ 65 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (- (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x))) (* -2.0 (* 0.5 x))))))>
* [enter]simplify:  Simplifying (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* [exit]simplify:  Simplified to (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x)))
* [exit]simplify:  Simplified to (+ (* -2.0 -2.0) (* (* 0.5 x) (* 0.5 x)))
* * * * [misc]progress:  [ 66 / 78 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))) (* -2.0 -2.0)))))>
* * * * [misc]progress:  [ 67 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (- (+ (* 0.5 (pow x 2)) (+ (* 0.25 (* (exp (* 3 (+ (log 0.5) (log x)))) x)) (* 0.00390625 (* (exp (* 3 (+ (log 0.5) (log x)))) (pow x 4))))) (+ (* 0.03125 (pow x 4)) (+ (* 0.0625 (* (exp (* 3 (+ (log 0.5) (log x)))) (pow x 2))) (* 2.0 x))))))>
* [enter]simplify:  Simplifying (+ 1.0 (- (+ (* 0.5 (pow x 2)) (+ (* 0.25 (* (exp (* 3 (+ (log 0.5) (log x)))) x)) (* 0.00390625 (* (exp (* 3 (+ (log 0.5) (log x)))) (pow x 4))))) (+ (* 0.03125 (pow x 4)) (+ (* 0.0625 (* (exp (* 3 (+ (log 0.5) (log x)))) (pow x 2))) (* 2.0 x)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (- (+ (- (* 0.5 (* x x)) (* 0.03125 (pow x 4))) (* (* (pow x 3) (pow 0.5 3)) (+ (* 0.00390625 (pow x 4)) (* x 0.25)))) (+ (* (* (* x x) 0.0625) (* (pow x 3) (pow 0.5 3))) (- (* 2.0 x) 1.0)))
* * * * [misc]progress:  [ 68 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (- (+ (* 4.0 (/ (exp (* 3 (- (log 0.5) (log (/ 1 x))))) x)) (+ (* 256.0 (/ (exp (* 3 (- (log 0.5) (log (/ 1 x))))) (pow x 4))) (* 128.0 (/ 1 (pow x 2))))) (+ (* 32.0 (/ 1 x)) (+ (* 16.0 (/ (exp (* 3 (- (log 0.5) (log (/ 1 x))))) (pow x 2))) (* 2048.0 (/ 1 (pow x 4))))))))>
* [enter]simplify:  Simplifying (+ 1.0 (- (+ (* 4.0 (/ (exp (* 3 (- (log 0.5) (log (/ 1 x))))) x)) (+ (* 256.0 (/ (exp (* 3 (- (log 0.5) (log (/ 1 x))))) (pow x 4))) (* 128.0 (/ 1 (pow x 2))))) (+ (* 32.0 (/ 1 x)) (+ (* 16.0 (/ (exp (* 3 (- (log 0.5) (log (/ 1 x))))) (pow x 2))) (* 2048.0 (/ 1 (pow x 4)))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (- (+ (* (/ 4.0 x) (pow (exp 3) (+ (log x) (log 0.5)))) (+ (+ 1.0 (/ (/ 128.0 x) x)) (* (/ 256.0 (pow x 4)) (pow (exp 3) (+ (log x) (log 0.5)))))) (+ (* (/ 16.0 (* x x)) (pow (exp 3) (+ (log x) (log 0.5)))) (+ (/ 2048.0 (pow x 4)) (/ 32.0 x))))
* * * * [misc]progress:  [ 69 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (- (+ (* 256.0 (/ (exp (* 3 (- (log -0.5) (log (/ -1 x))))) (pow x 4))) (+ (* 4.0 (/ (exp (* 3 (- (log -0.5) (log (/ -1 x))))) x)) (* 128.0 (/ 1 (pow x 2))))) (+ (* 16.0 (/ (exp (* 3 (- (log -0.5) (log (/ -1 x))))) (pow x 2))) (+ (* 32.0 (/ 1 x)) (* 2048.0 (/ 1 (pow x 4))))))))>
* [enter]simplify:  Simplifying (+ 1.0 (- (+ (* 256.0 (/ (exp (* 3 (- (log -0.5) (log (/ -1 x))))) (pow x 4))) (+ (* 4.0 (/ (exp (* 3 (- (log -0.5) (log (/ -1 x))))) x)) (* 128.0 (/ 1 (pow x 2))))) (+ (* 16.0 (/ (exp (* 3 (- (log -0.5) (log (/ -1 x))))) (pow x 2))) (+ (* 32.0 (/ 1 x)) (* 2048.0 (/ 1 (pow x 4)))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (+ (- (+ (* (/ 4.0 x) (pow (exp 3) (- (log -0.5) (log (/ -1 x))))) (/ (/ 128.0 x) x)) (+ (* (/ 16.0 (* x x)) (pow (exp 3) (- (log -0.5) (log (/ -1 x))))) (+ (/ 2048.0 (pow x 4)) (- (/ 32.0 x) 1.0)))) (* (/ 256.0 (pow x 4)) (pow (exp 3) (- (log -0.5) (log (/ -1 x))))))
* * * * [misc]progress:  [ 70 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (/ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (+ 1.0 (/ (* (- (exp (* 3 (+ (log 0.5) (log x)))) 8.0) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (216 enodes)
* * [misc]simplify:  iters left: 2 (434 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (/ (- (* (* (* x 0.5) (* x 0.5)) (* (* x x) 0.5)) (* 8.0 x)) (+ (* (- -2.0 (* x 0.5)) -2.0) (* (* x 0.5) (* x 0.5)))))
* * * * [misc]progress:  [ 71 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (/ (* (- (exp (* 3 (- (log 0.5) (log (/ 1 x))))) 8.0) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (+ 1.0 (/ (* (- (exp (* 3 (- (log 0.5) (log (/ 1 x))))) 8.0) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* * [misc]simplify:  iters left: 2 (475 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (/ (- (* (* (* 0.5 x) (* 0.5 x)) (* x (* 0.5 x))) (* 8.0 x)) (+ (* -2.0 -2.0) (* (* 0.5 x) (- (* 0.5 x) -2.0)))))
* * * * [misc]progress:  [ 72 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (/ (* (- (exp (* 3 (- (log -0.5) (log (/ -1 x))))) 8.0) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))>
* [enter]simplify:  Simplifying (+ 1.0 (/ (* (- (exp (* 3 (- (log -0.5) (log (/ -1 x))))) 8.0) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (233 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (/ (- (* (* (/ -0.5 (/ -1 x)) (/ -0.5 (/ -1 x))) (* (/ -0.5 (/ -1 x)) x)) (* 8.0 x)) (+ (* (* x 0.5) (- (* x 0.5) -2.0)) (* -2.0 -2.0))))
* * * * [misc]progress:  [ 73 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (+ (* 0.25 (pow x 2)) (* 1.0 x))))))>
* [enter]simplify:  Simplifying (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (+ (* 0.25 (pow x 2)) (* 1.0 x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (164 enodes)
* * [misc]simplify:  iters left: 2 (252 enodes)
* * [misc]simplify:  iters left: 1 (291 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (* x -2.0) (* -2.0 -2.0)) (* (* 0.5 (* x x)) (* (* x 0.5) (* x 0.5)))) (+ (+ (* x 1.0) (* -2.0 -2.0)) (* 0.25 (* x x)))) 1.0)
* * * * [misc]progress:  [ 74 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (+ (* 0.25 (pow x 2)) (* 1.0 x))))))>
* [enter]simplify:  Simplifying (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (+ (* 0.25 (pow x 2)) (* 1.0 x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (164 enodes)
* * [misc]simplify:  iters left: 2 (252 enodes)
* * [misc]simplify:  iters left: 1 (291 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (* x -2.0) (* -2.0 -2.0)) (* (* 0.5 (* x x)) (* (* x 0.5) (* x 0.5)))) (+ (+ (* x 1.0) (* -2.0 -2.0)) (* 0.25 (* x x)))) 1.0)
* * * * [misc]progress:  [ 75 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (+ (* 0.25 (pow x 2)) (* 1.0 x))))))>
* [enter]simplify:  Simplifying (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (+ (* 0.25 (pow x 2)) (* 1.0 x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (164 enodes)
* * [misc]simplify:  iters left: 2 (252 enodes)
* * [misc]simplify:  iters left: 1 (291 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (* x -2.0) (* -2.0 -2.0)) (* (* 0.5 (* x x)) (* (* x 0.5) (* x 0.5)))) (+ (+ (* x 1.0) (* -2.0 -2.0)) (* 0.25 (* x x)))) 1.0)
* * * * [misc]progress:  [ 76 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* 0.25 (pow x 2)) (+ 4.0 (* 1.0 x))))))>
* [enter]simplify:  Simplifying (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* 0.25 (pow x 2)) (+ 4.0 (* 1.0 x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (268 enodes)
* * [misc]simplify:  iters left: 1 (292 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (* (* x 0.5) (* x 0.5)) (* 0.5 (* x x))) (* (* -2.0 -2.0) (* x -2.0))) (+ (* (* x x) 0.25) (+ 4.0 (* x 1.0)))) 1.0)
* * * * [misc]progress:  [ 77 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* 0.25 (pow x 2)) (+ 4.0 (* 1.0 x))))))>
* [enter]simplify:  Simplifying (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* 0.25 (pow x 2)) (+ 4.0 (* 1.0 x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (268 enodes)
* * [misc]simplify:  iters left: 1 (292 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (* (* x 0.5) (* x 0.5)) (* 0.5 (* x x))) (* (* -2.0 -2.0) (* x -2.0))) (+ (* (* x x) 0.25) (+ 4.0 (* x 1.0)))) 1.0)
* * * * [misc]progress:  [ 78 / 78 ] simplifiying candidate #<alt-event (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* 0.25 (pow x 2)) (+ 4.0 (* 1.0 x))))))>
* [enter]simplify:  Simplifying (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* 0.25 (pow x 2)) (+ 4.0 (* 1.0 x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (268 enodes)
* * [misc]simplify:  iters left: 1 (292 enodes)
* [exit]simplify:  Simplified to (+ (/ (+ (* (* (* x 0.5) (* x 0.5)) (* 0.5 (* x x))) (* (* -2.0 -2.0) (* x -2.0))) (+ (* (* x x) 0.25) (+ 4.0 (* x 1.0)))) 1.0)
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (* (sqrt 1.0) (sqrt 1.0)) into (pow (sqrt 1.0) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 1.0) 2) into (pow (sqrt 1.0) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.0) (/ -1.0 (sqrt 1.0))) (* (/ -1.0 (sqrt 1.0)) (sqrt 1.0))) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.0) (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))) (+ (* (/ -1.0 (sqrt 1.0)) (/ -1.0 (sqrt 1.0))) (* (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) (sqrt 1.0)))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) (pow (sqrt 1.0) 2))) into (- (+ (* 0.5 (pow x 2)) (pow (sqrt 1.0) 2)) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (* (sqrt 0.5) (sqrt 0.5)) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 0.5) 2) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (/ -1.0 (sqrt 0.5))) (* (/ -1.0 (sqrt 0.5)) (sqrt 0.5))) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))) (+ (* (/ -1.0 (sqrt 0.5)) (/ -1.0 (sqrt 0.5))) (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (sqrt 0.5)))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* (pow (sqrt 0.5) 2) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (* (sqrt 0.5) (sqrt 0.5)) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 0.5) 2) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (/ 1.0 (sqrt 0.5))) (* (/ 1.0 (sqrt 0.5)) (sqrt 0.5))) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))) (+ (* (/ 1.0 (sqrt 0.5)) (/ 1.0 (sqrt 0.5))) (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (sqrt 0.5)))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* (pow (sqrt 0.5) 2) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) 1.0)) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* 0.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) 1.0)) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* 0.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (/ -1.0 (sqrt 1.0)) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) (pow x 2)) (+ (* (/ -1.0 (sqrt 1.0)) x) (sqrt 1.0))) into (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (/ -1.0 (sqrt 0.5)) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (/ 1 x)) (+ (/ -1.0 (sqrt 0.5)) (* (sqrt 0.5) (/ 1 (/ 1 x))))) into (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (/ 1.0 (sqrt 0.5)) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (/ 1 (- x))) (+ (/ 1.0 (sqrt 0.5)) (* (sqrt 0.5) (/ 1 (/ 1 (- x)))))) into (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ 1/2 1/2)))>
* [enter]simplify:  Simplifying (+ 1/2 1/2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* * * * [misc]progress:  [ 2 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ 1 1)))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 3 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1/2))>
* [enter]simplify:  Simplifying (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 4 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 5 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 2))>
* * * * [misc]progress:  [ 6 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ 1 1)))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 7 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1))>
* * * * [misc]progress:  [ 8 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (+ (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (+ (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 9 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 10 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 11 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 12 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 13 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 14 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (sqrt (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 15 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 16 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>
* * * * [misc]progress:  [ 17 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (271 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))
* [enter]simplify:  Simplifying (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (484 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 18 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* x (* 0.5 x))) (+ (* x (* 0.5 x)) (+ (* x -2.0) 1.0)))) (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* x (* 0.5 x)) 3))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* x (* 0.5 x))) (+ (* x (* 0.5 x)) (+ (* x -2.0) 1.0)))) (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* x (* 0.5 x)) 3))))
* [enter]simplify:  Simplifying (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (sqrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 19 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))))
* [enter]simplify:  Simplifying (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 20 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 21 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 22 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 23 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 24 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 25 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt 1)) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt 1))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (* (sqrt 1) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt 1) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 26 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 27 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 28 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 29 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 30 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 31 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt 1) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 32 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 33 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 34 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (299 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 35 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (355 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 36 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (284 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (sqrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (sqrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 37 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (357 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 38 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 39 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (log (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 40 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1))))>
* * * * [misc]progress:  [ 41 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 42 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (log (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 43 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 44 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (cbrt (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 45 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 46 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (272 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 47 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* 1 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 48 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (336 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 49 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ 1.0 (+ (* -2.0 x) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (+ (* -2.0 x) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* * * * [misc]progress:  [ 50 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (* 0.5 (* x x)) (+ 1.0 (* -2.0 x))))))>
* * * * [misc]progress:  [ 51 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (log (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 52 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1)) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 53 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 54 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (log (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 55 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 56 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (cbrt (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 57 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 58 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (272 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 59 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* 1 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 60 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (336 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 61 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ 1.0 (+ (* -2.0 x) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (* -2.0 x) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* * * * [misc]progress:  [ 62 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (* 0.5 (* x x)) (+ 1.0 (* -2.0 x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 63 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/2)))>
* * * * [misc]progress:  [ 64 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1)))>
* * * * [misc]progress:  [ 65 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (exp (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 66 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (log (exp (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 67 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 68 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (124 enodes)
* * [misc]simplify:  iters left: 1 (148 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 69 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 70 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 71 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt 1) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (sqrt 1)
* [exit]simplify:  Simplified to (sqrt 1)
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 72 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (267 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [enter]simplify:  Simplifying (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 73 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [enter]simplify:  Simplifying (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* [exit]simplify:  Simplified to (sqrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* * * * [misc]progress:  [ 74 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 75 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (fabs (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 76 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* 1 (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 77 / 88 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) (pow (sqrt 1.0) 2)) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) (pow (sqrt 1.0) 2)) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (91 enodes)
* * [misc]simplify:  iters left: 1 (125 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 0.5) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 78 / 88 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* 2.0 x)) (* (* x x) 0.5))
* * * * [misc]progress:  [ 79 / 88 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* 2.0 x)) (* (* x x) 0.5))
* * * * [misc]progress:  [ 80 / 88 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (- 1.0 (* 2.0 x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 81 / 88 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (- 1.0 (* 2.0 x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 82 / 88 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (- 1.0 (* 2.0 x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 83 / 88 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (94 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (+ (* x -2.0) 1.0) (* x (* 0.5 x)))) (sqrt (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))))
* * * * [misc]progress:  [ 84 / 88 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (94 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (+ (* x -2.0) 1.0) (* x (* 0.5 x)))) (sqrt (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))))
* * * * [misc]progress:  [ 85 / 88 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (94 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (+ (* x -2.0) 1.0) (* x (* 0.5 x)))) (sqrt (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))))
* * * * [misc]progress:  [ 86 / 88 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (* (+ (- (sqrt 1.0) (/ (* 1.0 x) (sqrt 1.0))) (* (/ (* x x) (sqrt 1.0)) (- 0.25 (/ 0.5 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 87 / 88 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (* (- (+ (* (sqrt 0.5) x) (/ (/ 0.5 x) (sqrt 0.5))) (+ (/ 1.0 (sqrt 0.5)) (/ (/ 1 x) (sqrt 0.5)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 88 / 88 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (276 enodes)
* [exit]simplify:  Simplified to (* (+ (- (/ 1.0 (sqrt 0.5)) (* (sqrt 0.5) x)) (- (/ (/ 1 x) (sqrt 0.5)) (/ (/ 0.5 x) (sqrt 0.5)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))> #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))> #<alt-delta (Î» (x) (+ 1.0 (* (+ -2.0 (* 0.5 x)) x)))> #<alt-delta (Î» (x) (+ 1.0 (/ (* (+ (pow -2.0 3) (pow (* 0.5 x) 3)) x) (+ (* -2.0 -2.0) (- (* (* 0.5 x) (* 0.5 x)) (* -2.0 (* 0.5 x)))))))> #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) +nan.0)) , with alts (#<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>)
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
