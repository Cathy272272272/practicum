* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 2 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 2 ] rewriting at (2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 2 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 x) (* 8.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 12.0) 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 8.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 (pow x 3)) (* (- 12.0) x)) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 x)) (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 8.0 1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -12.0 0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 12.0) (/ 1 (/ 1 x))) (* 8.0 (pow (/ 1 (/ 1 x)) 3))) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -12.0 (/ 1 (- x))) (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 8.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 8.0 -1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 12.0 0) into 12.0
* [misc]backup-simplify:  Simplify 12.0 into 12.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 8.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 12.0 (/ 1 (/ 1 (- x)))) (* (- 8.0) (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 8.0 (pow x 3)) (* 12.0 x))
* * * * [misc]progress:  [ 2 / 2 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (exp (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) (exp (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 2 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (* -12.0 x) (* 8.0 (* (* x x) x))) 1))>
* * * * [misc]progress:  [ 3 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (log (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 4 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 5 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))) (cbrt (+ (* -12.0 x) (* (* 8.0 x) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 6 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (+ (* -12.0 x) (* 8.0 (* (* x x) x))) (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -12.0 x) (* (* 8.0 x) (* x x))) 3)
* * * * [misc]progress:  [ 7 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [enter]simplify:  Simplifying (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -12.0 x) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 8 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3)) (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (* -12.0 x) 3) (pow (* 8.0 (* (* x x) x)) 3))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* 8.0 x) (* x x)) 3) (pow (* -12.0 x) 3))
* [enter]simplify:  Simplifying (+ (* (* -12.0 x) (* -12.0 x)) (- (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))) (* (* -12.0 x) (* 8.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x 8.0)) (* -12.0 x)) (* (* x x) (* x 8.0))) (* (* -12.0 x) (* -12.0 x)))
* * * * [misc]progress:  [ 9 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (* -12.0 x) (* 8.0 (* (* x x) x)))))>
* * * * [misc]progress:  [ 10 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))) (- (* -12.0 x) (* 8.0 (* (* x x) x)))))>
* [enter]simplify:  Simplifying (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))
* [exit]simplify:  Simplified to (- (* (* -12.0 x) (* -12.0 x)) (* (* (* x 8.0) (* x x)) (* (* x 8.0) (* x x))))
* [enter]simplify:  Simplifying (- (* -12.0 x) (* 8.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (96 enodes)
* [exit]simplify:  Simplified to (- (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (- (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 11 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 8.0 (* (* x x) x)) (* -12.0 x)))>
* * * * [misc]progress:  [ 12 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* * * * [misc]progress:  [ 13 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x (+ 2 1)))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 14 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (pow (* (* x x) x) 1))))>
* * * * [misc]progress:  [ 15 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (exp (log (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 16 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (log (exp (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 17 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 18 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 19 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 20 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (* 1 (* (* x x) x)))))>
* * * * [misc]progress:  [ 21 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (* x (* x x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 22 / 28 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (* x (* x x)))))>
* * * * [misc]progress:  [ 23 / 28 ] simplifiying candidate #<alt-event (Î» (x) (- (* 8.0 (pow x 3)) (* 12.0 x)))>
* [enter]simplify:  Simplifying (- (* 8.0 (pow x 3)) (* 12.0 x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (- (* (* 8.0 x) (* x x)) (* 12.0 x))
* * * * [misc]progress:  [ 24 / 28 ] simplifiying candidate #<alt-event (Î» (x) (- (* 8.0 (pow x 3)) (* 12.0 x)))>
* [enter]simplify:  Simplifying (- (* 8.0 (pow x 3)) (* 12.0 x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (- (* (* 8.0 x) (* x x)) (* 12.0 x))
* * * * [misc]progress:  [ 25 / 28 ] simplifiying candidate #<alt-event (Î» (x) (- (* 8.0 (pow x 3)) (* 12.0 x)))>
* [enter]simplify:  Simplifying (- (* 8.0 (pow x 3)) (* 12.0 x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (- (* (* 8.0 x) (* x x)) (* 12.0 x))
* * * * [misc]progress:  [ 26 / 28 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 27 / 28 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 28 / 28 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (exp (* -12.0 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify 72.0 into 72.0
* [misc]backup-simplify:  Simplify (+ (* 72.0 (pow x 2)) (+ (* -12.0 x) 1)) into (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (exp (* -12.0 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 x))) into (exp (/ -12.0 x))
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 x))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (exp (/ -12.0 x)) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -12.0 (/ 1 x))) into (exp (* -12.0 x))
* [misc]approximate:  Taking taylor expansion of (exp (* -12.0 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 (- x)))) into (exp (/ 12.0 x))
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 (- x)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (exp (/ 12.0 x)) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 12.0 (/ 1 (- x)))) into (exp (* -12.0 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 8.0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 8.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 8.0 2) 2)) (* (/ (pow 0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (+ (* 32.0 (pow x 6)) (+ (* 8.0 (pow x 3)) 1)) into (+ 1 (+ (* 8.0 (pow x 3)) (* 32.0 (pow x 6))))
* [misc]approximate:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow (/ 1 x) 3))) into (exp (* 8.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -12.0 1)) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -12.0 0) (* 72.0 1))) into 72.0
* [misc]backup-simplify:  Simplify 72.0 into 72.0
* [misc]backup-simplify:  Simplify (+ (* 72.0 (pow x 2)) (+ (* (- 12.0) x) 1)) into (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (* (exp (* -12.0 (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 x))) into (exp (/ -12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 x))) into (exp (/ -12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -12.0 x)) (exp (/ 8.0 (pow x 3)))) into (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) into (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (* 0 (exp (/ 8.0 (pow x 3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow (/ 1 x) 3))) (exp (/ -12.0 (/ 1 x)))) into (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x)))
* [misc]approximate:  Taking taylor expansion of (* (exp (* -12.0 (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 (- x)))) into (exp (/ 12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 (- x)))) into (exp (/ 12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 12.0 (/ 1 (- x)))) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))))) into (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 x) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -12.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 1) (* 0 0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -12.0 1)) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 12.0)) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -12.0 0) (* 72.0 1))) into 72.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 12.0)) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 72.0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 8.0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 3) 6)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -288.0
* [misc]backup-simplify:  Simplify (+ (* 1 8.0) (+ (* -12.0 0) (+ (* 72.0 0) (* -288.0 1)))) into (- 280.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- 12.0)) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 (- 12.0)) 1) (pow (* 2 72.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 (- 280.0)) 1)) (pow 1 1)))) 6) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 4) 24)) (* (/ (pow (- 12.0) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 864.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -12.0 8.0) (+ (* 72.0 0) (+ (* -288.0 0) (* 864.0 1))))) into 768.0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- 12.0)) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 (- 12.0)) 2) (pow (* 2 72.0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 72.0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 (- 12.0)) 1) 1 (pow (* 6 (- 280.0)) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 768.0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 5) 120)) (* (/ (pow (- 12.0) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -2073.6
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -12.0 0) (+ (* 72.0 8.0) (+ (* -288.0 0) (+ (* 864.0 0) (* -2073.6 1)))))) into (- 1497.6)
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 (- 12.0)) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 (- 12.0)) 3) (pow (* 2 72.0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 (- 12.0)) 1) (pow (* 2 72.0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 (- 12.0)) 2) 1 (pow (* 6 (- 280.0)) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 72.0) 1) (pow (* 6 (- 280.0)) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 (- 12.0)) 1) 1 1 (pow (* 24 768.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 (- 1497.6)) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 8.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 8.0 2) 2)) (* (/ (pow 0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify (+ (* -12.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 6) 720)) (* (/ (pow (- 12.0) 4) 24) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 2) 2) (/ (pow 0 2) 2)) (* (/ (pow (- 12.0) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 4147.2
* [misc]backup-simplify:  Simplify (+ (* 1 32.0) (+ (* -12.0 0) (+ (* 72.0 0) (+ (* -288.0 8.0) (+ (* 864.0 0) (+ (* -2073.6 0) (* 4147.2 1))))))) into 1875.1999999999998
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 (- 12.0)) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 (- 12.0)) 4) (pow (* 2 72.0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 (- 12.0)) 2) (pow (* 2 72.0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 (- 12.0)) 3) 1 (pow (* 6 (- 280.0)) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 72.0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 (- 12.0)) 1) (pow (* 2 72.0) 1) (pow (* 6 (- 280.0)) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 (- 12.0)) 2) 1 1 (pow (* 24 768.0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 (- 280.0)) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 72.0) 1) 1 (pow (* 24 768.0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 (- 12.0)) 1) 1 1 1 (pow (* 120 (- 1497.6)) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 1875.1999999999998) 1)) (pow 1 1)))) 720) into -3.2337589396370783e-13
* [misc]backup-simplify:  Simplify -3.2337589396370783e-13 into -3.2337589396370783e-13
* [misc]backup-simplify:  Simplify (+ (* -3.2337589396370783e-13 (pow x 6)) (+ (* 8.0 (pow x 3)) (* -12.0 x))) into (- (* 8.0 (pow x 3)) (+ (* 3.2337589396370783e-13 (pow x 6)) (* 12.0 x)))
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -12.0 (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -12.0 (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 x))) into (exp (/ -12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -12.0 x)) (exp (/ 8.0 (pow x 3)))) into (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))) into (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))))
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -12.0 (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -12.0 1) into -12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 x))) into (exp (/ -12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -12.0 x)) (exp (/ 8.0 (pow x 3)))) into (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))) into (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))) into (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (* 0 (exp (/ 8.0 (pow x 3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 8.0 (pow (/ 1 x) 3))) (exp (/ -12.0 (/ 1 x))))) into (log (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x))))
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -12.0 (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -12.0 (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 (- x)))) into (exp (/ 12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -12.0 (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -12.0 (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -12.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -12.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -12.0 -1) into 12.0
* [misc]backup-simplify:  Simplify (exp (* -12.0 (/ 1 (- x)))) into (exp (/ 12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 12.0 (/ 1 (- x)))) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))))) into (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (* -12.0 x)) 1) (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 2 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (exp -12.0)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp -12.0)
* [exit]simplify:  Simplified to (exp -12.0)
* * * * [misc]progress:  [ 3 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 4 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (log (exp (* -12.0 x)))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (exp (* -12.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (* -12.0 x)
* [exit]simplify:  Simplified to (* -12.0 x)
* * * * [misc]progress:  [ 5 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (log (exp (exp (* -12.0 x)))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (exp (exp (* -12.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (exp (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (exp (exp (* -12.0 x)))
* * * * [misc]progress:  [ 6 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (exp (* -12.0 x))) (cbrt (exp (* -12.0 x)))) (cbrt (exp (* -12.0 x)))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* -12.0 x))) (cbrt (exp (* -12.0 x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (* -12.0 x))) (cbrt (exp (* -12.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (exp (* -12.0 x))) (cbrt (exp (* -12.0 x))))
* [enter]simplify:  Simplifying (cbrt (exp (* -12.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (cbrt (exp (* -12.0 x)))
* * * * [misc]progress:  [ 7 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (* (* (exp (* -12.0 x)) (exp (* -12.0 x))) (exp (* -12.0 x)))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (* (exp (* -12.0 x)) (exp (* -12.0 x))) (exp (* -12.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (pow (exp (* -12.0 x)) 3)
* [exit]simplify:  Simplified to (pow (exp (* -12.0 x)) 3)
* * * * [misc]progress:  [ 8 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (sqrt (exp (* -12.0 x))) (sqrt (exp (* -12.0 x)))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (sqrt (exp (* -12.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* -12.0 x)))
* [enter]simplify:  Simplifying (sqrt (exp (* -12.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* -12.0 x)))
* * * * [misc]progress:  [ 9 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* 1 (exp (* -12.0 x))) (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 10 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (exp (* 8.0 (pow x 3))))))>
* [enter]simplify:  Simplifying (* 8.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 8.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 8.0 x) (* x x))
* * * * [misc]progress:  [ 11 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (exp (* (log (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (log (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (* x 8.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 8.0) (* x x))
* * * * [misc]progress:  [ 12 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (* 1 (pow x 3))))))>
* [enter]simplify:  Simplifying (* 1 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 13 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (pow (exp 8.0) (* x x)) x))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* * * * [misc]progress:  [ 14 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (pow (exp 8.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* * * * [misc]progress:  [ 15 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (pow (exp 8.0) x) (* x x)))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) x)
* [exit]simplify:  Simplified to (pow (exp 8.0) x)
* * * * [misc]progress:  [ 16 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (pow (exp 8.0) (sqrt (pow x 3))) (sqrt (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp 8.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 17 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (pow (exp 8.0) 1) (pow x 3)))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp 8.0)
* [exit]simplify:  Simplified to (exp 8.0)
* * * * [misc]progress:  [ 18 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (* (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)) (pow (cbrt (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))
* [enter]simplify:  Simplifying (pow (cbrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (cbrt (exp 8.0)) (pow x 3))
* * * * [misc]progress:  [ 19 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (* (pow (sqrt (exp 8.0)) (pow x 3)) (pow (sqrt (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [enter]simplify:  Simplifying (pow (sqrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* * * * [misc]progress:  [ 20 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (* (pow 1 (pow x 3)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow 1 (pow x 3))
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp 8.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 8.0) (pow x 3))
* * * * [misc]progress:  [ 21 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (pow (exp 8.0) (pow x 3)) 1))))>
* * * * [misc]progress:  [ 22 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (exp (log (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 8.0 x))
* [exit]simplify:  Simplified to (* (* x x) (* 8.0 x))
* * * * [misc]progress:  [ 23 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (log (exp (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (exp (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (exp (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 24 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (* (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3)))) (cbrt (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (cbrt (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 25 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (cbrt (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 8.0) (pow x 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp 8.0) (pow x 3)) 3)
* * * * [misc]progress:  [ 26 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (* (sqrt (pow (exp 8.0) (pow x 3))) (sqrt (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* [enter]simplify:  Simplifying (sqrt (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 27 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (* 1 (pow (exp 8.0) (pow x 3))))))>
* * * * [misc]progress:  [ 28 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))) 1)))>
* * * * [misc]progress:  [ 29 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -12.0 x) (* 8.0 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 30 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -12.0 x) (* (log (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* (log (exp 8.0)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 8.0 x)) (* -12.0 x))
* [exit]simplify:  Simplified to (+ (* (* x x) (* 8.0 x)) (* -12.0 x))
* * * * [misc]progress:  [ 31 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -12.0 x) (log (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (log (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (33 enodes)
* [exit]simplify:  Simplified to (+ (* (* 8.0 x) (* x x)) (* -12.0 x))
* [exit]simplify:  Simplified to (+ (* (* 8.0 x) (* x x)) (* -12.0 x))
* * * * [misc]progress:  [ 32 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 33 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (exp (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (exp (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * * * [misc]progress:  [ 34 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (exp (* -12.0 x)) (exp (* -12.0 x))) (exp (* -12.0 x))) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (* (exp (* -12.0 x)) (exp (* -12.0 x))) (exp (* -12.0 x))) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (135 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x))) 3)
* * * * [misc]progress:  [ 35 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))) (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (cbrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * * * [misc]progress:  [ 36 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))) (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))) (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (107 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (pow (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))) 3)
* * * * [misc]progress:  [ 37 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) (sqrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (sqrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* [enter]simplify:  Simplifying (sqrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * * * [misc]progress:  [ 38 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))))>
* * * * [misc]progress:  [ 39 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -12.0 x)) (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))) (pow (cbrt (exp 8.0)) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)) (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 40 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -12.0 x)) (pow (sqrt (exp 8.0)) (pow x 3))) (pow (sqrt (exp 8.0)) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) (pow (sqrt (exp 8.0)) (pow x 3)))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (exp 8.0)) (pow x 3)) (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (* (pow (sqrt (exp 8.0)) (pow x 3)) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 41 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -12.0 x)) (pow 1 (pow x 3))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) (pow 1 (pow x 3)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (exp (* -12.0 x))
* [exit]simplify:  Simplified to (exp (* -12.0 x))
* * * * [misc]progress:  [ 42 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -12.0 x)) (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))) (cbrt (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3)))) (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (* (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3)))) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 43 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -12.0 x)) (sqrt (pow (exp 8.0) (pow x 3)))) (sqrt (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) (sqrt (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (exp 8.0) (pow x 3))) (exp (* -12.0 x)))
* [exit]simplify:  Simplified to (* (sqrt (pow (exp 8.0) (pow x 3))) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 44 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -12.0 x)) 1) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) 1)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* -12.0 x))
* [exit]simplify:  Simplified to (exp (* -12.0 x))
* * * * [misc]progress:  [ 45 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (exp (* -12.0 x))) (cbrt (exp (* -12.0 x)))) (* (cbrt (exp (* -12.0 x))) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* -12.0 x))) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (exp (* -12.0 x))))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (exp (* -12.0 x))))
* * * * [misc]progress:  [ 46 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (exp (* -12.0 x))) (* (sqrt (exp (* -12.0 x))) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (sqrt (exp (* -12.0 x))) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (sqrt (exp (* -12.0 x))))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (sqrt (exp (* -12.0 x))))
* * * * [misc]progress:  [ 47 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 48 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 8.0) (pow x 3)) (exp (* -12.0 x)))))>
* * * * [misc]progress:  [ 49 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (* -12.0 x))) (log (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (exp (* -12.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (* -12.0 x)
* [exit]simplify:  Simplified to (* -12.0 x)
* [enter]simplify:  Simplifying (log (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 8.0 x))
* [exit]simplify:  Simplified to (* (* x x) (* 8.0 x))
* * * * [misc]progress:  [ 50 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 51 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (pow (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) 1))>
* * * * [misc]progress:  [ 52 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* * * * [misc]progress:  [ 53 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* (log (exp 8.0)) (pow x 3))))>
* * * * [misc]progress:  [ 54 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (log (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 55 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 56 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x 8.0) (* x x)) (* -12.0 x)))
* [exit]simplify:  Simplified to (log (+ (* (* x 8.0) (* x x)) (* -12.0 x)))
* * * * [misc]progress:  [ 57 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (exp (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (73 enodes)
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 58 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))) (cbrt (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))) (cbrt (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))) (cbrt (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))) (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x))))
* [enter]simplify:  Simplifying (cbrt (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 8.0) (* x x)) (* -12.0 x)))
* * * * [misc]progress:  [ 59 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (426 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 8.0) (* x x)) (* -12.0 x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 8.0) (* x x)) (* -12.0 x)) 3)
* * * * [misc]progress:  [ 60 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))) (sqrt (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 8.0) (* x x)) (* -12.0 x)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 8.0) (* x x)) (* -12.0 x)))
* [enter]simplify:  Simplifying (sqrt (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 8.0) (* x x)) (* -12.0 x)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 8.0) (* x x)) (* -12.0 x)))
* * * * [misc]progress:  [ 61 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))))>
* * * * [misc]progress:  [ 62 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (* (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (368 enodes)
* [exit]simplify:  Simplified to (+ (* (* 8.0 x) (* x x)) (log (- (* (* x x) 72.0) (- (* 12.0 x) 1))))
* * * * [misc]progress:  [ 63 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 64 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 65 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -12.0 x)) (+ 1 (+ (* 8.0 (pow x 3)) (* 32.0 (pow x 6)))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -12.0 x)) (+ 1 (+ (* 8.0 (pow x 3)) (* 32.0 (pow x 6))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (172 enodes)
* * [misc]simplify:  iters left: 2 (327 enodes)
* * [misc]simplify:  iters left: 1 (404 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (pow x 6) 32.0) (+ (* (* 8.0 x) (* x x)) 1))) (* -12.0 x))
* * * * [misc]progress:  [ 66 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -12.0 x)) (exp (* 8.0 (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -12.0 x)) (exp (* 8.0 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* x 8.0)))
* * * * [misc]progress:  [ 67 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (184 enodes)
* * [misc]simplify:  iters left: 1 (489 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* x 8.0)) (* -12.0 x))
* * * * [misc]progress:  [ 68 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x))))>
* [enter]simplify:  Simplifying (log (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (log (- (* (* x x) 72.0) (- (* 12.0 x) 1)))
* * * * [misc]progress:  [ 69 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 8.0 x)) (* -12.0 x))
* * * * [misc]progress:  [ 70 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (485 enodes)
* [exit]simplify:  Simplified to (+ (* x -12.0) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 71 / 73 ] simplifiying candidate #<alt-event (Î» (x) (- (* 8.0 (pow x 3)) (+ (* 3.2337589396370783e-13 (pow x 6)) (* 12.0 x))))>
* [enter]simplify:  Simplifying (- (* 8.0 (pow x 3)) (+ (* 3.2337589396370783e-13 (pow x 6)) (* 12.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (- (* (* 8.0 x) (* x x)) (+ (* 3.2337589396370783e-13 (pow x 6)) (* 12.0 x)))
* * * * [misc]progress:  [ 72 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 8.0 x)) (* -12.0 x))
* * * * [misc]progress:  [ 73 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (485 enodes)
* [exit]simplify:  Simplified to (+ (* x -12.0) (* (* x 8.0) (* x x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 8.0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 8.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 8.0 2) 2)) (* (/ (pow 0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (+ (* 32.0 (pow x 6)) (+ (* 8.0 (pow x 3)) 1)) into (+ 1 (+ (* 8.0 (pow x 3)) (* 32.0 (pow x 6))))
* [misc]approximate:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow (/ 1 x) 3))) into (exp (* 8.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -12.0 1)) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -12.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -12.0 0) (* 72.0 1))) into 72.0
* [misc]backup-simplify:  Simplify 72.0 into 72.0
* [misc]backup-simplify:  Simplify (+ (* 72.0 (pow x 2)) (+ (* (- 12.0) x) 1)) into (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (* (pow (exp -12.0) (/ 1 x)) (pow (exp 8.0) (pow (/ 1 x) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) (/ 1 x)) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) (/ 1 x)) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -12.0 x)) (exp (/ 8.0 (pow x 3)))) into (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) into (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (* 0 (exp (/ 8.0 (pow x 3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow (/ 1 x) 3))) (exp (/ -12.0 (/ 1 x)))) into (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x)))
* [misc]approximate:  Taking taylor expansion of (* (pow (exp -12.0) (/ 1 (- x))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) (/ 1 (- x))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) (/ 1 (- x))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 12.0 (/ 1 (- x)))) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))))) into (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -12.0 1)) into (- 12.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 12.0)) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -12.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -12.0 0) (* 72.0 1))) into 72.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 12.0)) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 72.0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 8.0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -12.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -12.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -12.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 3) 6)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -288.0
* [misc]backup-simplify:  Simplify (+ (* 1 8.0) (+ (* -12.0 0) (+ (* 72.0 0) (* -288.0 1)))) into (- 280.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- 12.0)) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 (- 12.0)) 1) (pow (* 2 72.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 (- 280.0)) 1)) (pow 1 1)))) 6) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -12.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -12.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -12.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -12.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -12.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 4) 24)) (* (/ (pow (- 12.0) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 864.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -12.0 8.0) (+ (* 72.0 0) (+ (* -288.0 0) (* 864.0 1))))) into 768.0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- 12.0)) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 (- 12.0)) 2) (pow (* 2 72.0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 72.0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 (- 12.0)) 1) 1 (pow (* 6 (- 280.0)) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 768.0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -12.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -12.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -12.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -12.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -12.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -12.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -12.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 5) 120)) (* (/ (pow (- 12.0) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -2073.6
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -12.0 0) (+ (* 72.0 8.0) (+ (* -288.0 0) (+ (* 864.0 0) (* -2073.6 1)))))) into (- 1497.6)
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 (- 12.0)) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 (- 12.0)) 3) (pow (* 2 72.0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 (- 12.0)) 1) (pow (* 2 72.0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 (- 12.0)) 2) 1 (pow (* 6 (- 280.0)) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 72.0) 1) (pow (* 6 (- 280.0)) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 (- 12.0)) 1) 1 1 (pow (* 24 768.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 (- 1497.6)) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 8.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 8.0 2) 2)) (* (/ (pow 0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -12.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -12.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -12.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -12.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -12.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -12.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -12.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -12.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -12.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -12.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -12.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 6) 720)) (* (/ (pow (- 12.0) 4) 24) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 2) 2) (/ (pow 0 2) 2)) (* (/ (pow (- 12.0) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 12.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 4147.2
* [misc]backup-simplify:  Simplify (+ (* 1 32.0) (+ (* -12.0 0) (+ (* 72.0 0) (+ (* -288.0 8.0) (+ (* 864.0 0) (+ (* -2073.6 0) (* 4147.2 1))))))) into 1875.1999999999998
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 (- 12.0)) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 (- 12.0)) 4) (pow (* 2 72.0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 (- 12.0)) 2) (pow (* 2 72.0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 (- 12.0)) 3) 1 (pow (* 6 (- 280.0)) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 72.0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 (- 12.0)) 1) (pow (* 2 72.0) 1) (pow (* 6 (- 280.0)) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 (- 12.0)) 2) 1 1 (pow (* 24 768.0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 (- 280.0)) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 72.0) 1) 1 (pow (* 24 768.0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 (- 12.0)) 1) 1 1 1 (pow (* 120 (- 1497.6)) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 1875.1999999999998) 1)) (pow 1 1)))) 720) into -3.2337589396370783e-13
* [misc]backup-simplify:  Simplify -3.2337589396370783e-13 into -3.2337589396370783e-13
* [misc]backup-simplify:  Simplify (+ (* -3.2337589396370783e-13 (pow x 6)) (+ (* 8.0 (pow x 3)) (* -12.0 x))) into (- (* 8.0 (pow x 3)) (+ (* 3.2337589396370783e-13 (pow x 6)) (* 12.0 x)))
* [misc]approximate:  Taking taylor expansion of (log (* (pow (exp -12.0) (/ 1 x)) (pow (exp 8.0) (pow (/ 1 x) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (exp -12.0) (/ 1 x)) (pow (exp 8.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) (/ 1 x)) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -12.0 x)) (exp (/ 8.0 (pow x 3)))) into (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))) into (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))))
* [misc]taylor:  Taking taylor expansion of (log (* (pow (exp -12.0) (/ 1 x)) (pow (exp 8.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) (/ 1 x)) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -12.0 x)) (exp (/ 8.0 (pow x 3)))) into (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))) into (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x)))) into (log (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (* 0 (exp (/ 8.0 (pow x 3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 8.0 (pow x 3))) (exp (/ -12.0 x))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 8.0 (pow (/ 1 x) 3))) (exp (/ -12.0 (/ 1 x))))) into (log (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x))))
* [misc]approximate:  Taking taylor expansion of (log (* (pow (exp -12.0) (/ 1 (- x))) (pow (exp 8.0) (pow (/ 1 (- x)) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (exp -12.0) (/ 1 (- x))) (pow (exp 8.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) (/ 1 (- x))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))
* [misc]taylor:  Taking taylor expansion of (log (* (pow (exp -12.0) (/ 1 (- x))) (pow (exp 8.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp -12.0) (/ 1 (- x))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into (log (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 12.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 12.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 12.0 (/ 1 (- x)))) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))))) into (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (exp -12.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -12.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify 72.0 into 72.0
* [misc]backup-simplify:  Simplify (+ (* 72.0 (pow x 2)) (+ (* -12.0 x) 1)) into (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (exp (/ -12.0 x)) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -12.0 (/ 1 x))) into (exp (* -12.0 x))
* [misc]approximate:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (exp (/ 12.0 x)) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 12.0 (/ 1 (- x)))) into (exp (* -12.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (exp (* 8.0 (pow x 3))))))>
* [enter]simplify:  Simplifying (* 8.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 8.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 8.0 x) (* x x))
* * * * [misc]progress:  [ 2 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (exp (* (log (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (log (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (* x 8.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 8.0) (* x x))
* * * * [misc]progress:  [ 3 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (exp 8.0) (* 1 (pow x 3))))))>
* [enter]simplify:  Simplifying (* 1 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 4 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (pow (exp 8.0) (* x x)) x))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* * * * [misc]progress:  [ 5 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (pow (exp 8.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* * * * [misc]progress:  [ 6 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (pow (exp 8.0) x) (* x x)))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) x)
* [exit]simplify:  Simplified to (pow (exp 8.0) x)
* * * * [misc]progress:  [ 7 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (pow (exp 8.0) (sqrt (pow x 3))) (sqrt (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp 8.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 8 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (pow (exp 8.0) 1) (pow x 3)))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp 8.0)
* [exit]simplify:  Simplified to (exp 8.0)
* * * * [misc]progress:  [ 9 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (* (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)) (pow (cbrt (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))
* [enter]simplify:  Simplifying (pow (cbrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (cbrt (exp 8.0)) (pow x 3))
* * * * [misc]progress:  [ 10 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (* (pow (sqrt (exp 8.0)) (pow x 3)) (pow (sqrt (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [enter]simplify:  Simplifying (pow (sqrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* * * * [misc]progress:  [ 11 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (* (pow 1 (pow x 3)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow 1 (pow x 3))
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp 8.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 8.0) (pow x 3))
* * * * [misc]progress:  [ 12 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (pow (exp 8.0) (pow x 3)) 1))))>
* * * * [misc]progress:  [ 13 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (exp (log (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 8.0 x))
* [exit]simplify:  Simplified to (* (* x x) (* 8.0 x))
* * * * [misc]progress:  [ 14 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (log (exp (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (exp (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (exp (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 15 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (* (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3)))) (cbrt (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (cbrt (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 16 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (cbrt (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 8.0) (pow x 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp 8.0) (pow x 3)) 3)
* * * * [misc]progress:  [ 17 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (* (sqrt (pow (exp 8.0) (pow x 3))) (sqrt (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* [enter]simplify:  Simplifying (sqrt (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 18 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (* 1 (pow (exp 8.0) (pow x 3))))))>
* * * * [misc]progress:  [ 19 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) 1)))>
* * * * [misc]progress:  [ 20 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -12.0 x) (* 8.0 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 21 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -12.0 x) (* (log (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (* (log (exp 8.0)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 8.0 x)) (* -12.0 x))
* [exit]simplify:  Simplified to (+ (* (* x x) (* 8.0 x)) (* -12.0 x))
* * * * [misc]progress:  [ 22 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -12.0 x) (log (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* -12.0 x) (log (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (33 enodes)
* [exit]simplify:  Simplified to (+ (* (* 8.0 x) (* x x)) (* -12.0 x))
* [exit]simplify:  Simplified to (+ (* (* 8.0 x) (* x x)) (* -12.0 x))
* * * * [misc]progress:  [ 23 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (exp -12.0)) x) (* 8.0 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (* (log (exp -12.0)) x) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (57 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* x 8.0)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* x 8.0)))
* * * * [misc]progress:  [ 24 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (exp -12.0)) x) (* (log (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (* (log (exp -12.0)) x) (* (log (exp 8.0)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* x 8.0)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* x 8.0)))
* * * * [misc]progress:  [ 25 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (exp -12.0)) x) (log (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (exp -12.0)) x) (log (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 26 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (exp -12.0) x)) (* 8.0 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (log (pow (exp -12.0) x)) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (34 enodes)
* * [misc]simplify:  iters left: 1 (35 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* x 8.0)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* x 8.0)))
* * * * [misc]progress:  [ 27 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (exp -12.0) x)) (* (log (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (log (pow (exp -12.0) x)) (* (log (exp 8.0)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* x 8.0)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* x 8.0)))
* * * * [misc]progress:  [ 28 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (exp -12.0) x)) (log (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (pow (exp -12.0) x)) (log (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (37 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 29 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* 8.0 x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* 8.0 x)))
* * * * [misc]progress:  [ 30 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (exp (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (exp (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (exp (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * * * [misc]progress:  [ 31 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (pow (exp -12.0) x) (pow (exp -12.0) x)) (pow (exp -12.0) x)) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (exp -12.0) x) (pow (exp -12.0) x)) (pow (exp -12.0) x)) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x)) 3)
* [exit]simplify:  Simplified to (pow (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x)) 3)
* * * * [misc]progress:  [ 32 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))) (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * * * [misc]progress:  [ 33 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) 3)
* * * * [misc]progress:  [ 34 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* [enter]simplify:  Simplifying (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * * * [misc]progress:  [ 35 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))))>
* * * * [misc]progress:  [ 36 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp -12.0) x) (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))) (pow (cbrt (exp 8.0)) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)) (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)) (pow (exp -12.0) x))
* * * * [misc]progress:  [ 37 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp -12.0) x) (pow (sqrt (exp 8.0)) (pow x 3))) (pow (sqrt (exp 8.0)) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) (pow (sqrt (exp 8.0)) (pow x 3)))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (exp 8.0)) (pow x 3)) (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (* (pow (sqrt (exp 8.0)) (pow x 3)) (pow (exp -12.0) x))
* * * * [misc]progress:  [ 38 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp -12.0) x) (pow 1 (pow x 3))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) (pow 1 (pow x 3)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (pow (exp -12.0) x)
* [exit]simplify:  Simplified to (pow (exp -12.0) x)
* * * * [misc]progress:  [ 39 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp -12.0) x) (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))) (cbrt (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3)))) (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (* (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3)))) (pow (exp -12.0) x))
* * * * [misc]progress:  [ 40 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp -12.0) x) (sqrt (pow (exp 8.0) (pow x 3)))) (sqrt (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) (sqrt (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (exp 8.0) (pow x 3))) (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (* (sqrt (pow (exp 8.0) (pow x 3))) (pow (exp -12.0) x))
* * * * [misc]progress:  [ 41 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp -12.0) x) 1) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) 1)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (pow (exp -12.0) x)
* [exit]simplify:  Simplified to (pow (exp -12.0) x)
* * * * [misc]progress:  [ 42 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x) (* (pow (cbrt (exp -12.0)) x) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (pow (cbrt (exp -12.0)) x) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (pow (cbrt (exp -12.0)) x))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (pow (cbrt (exp -12.0)) x))
* * * * [misc]progress:  [ 43 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (sqrt (exp -12.0)) x) (* (pow (sqrt (exp -12.0)) x) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (pow (sqrt (exp -12.0)) x) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (pow (sqrt (exp -12.0)) x))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (pow (sqrt (exp -12.0)) x))
* * * * [misc]progress:  [ 44 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow 1 x) (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* [exit]simplify:  Simplified to (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 45 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 46 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (pow (exp -12.0) x)) (* (sqrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (sqrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (sqrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (sqrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 47 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* [exit]simplify:  Simplified to (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 48 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))))>
* * * * [misc]progress:  [ 49 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (pow (exp -12.0) x)) (log (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (pow (exp -12.0) x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (8 enodes)
* [exit]simplify:  Simplified to (* -12.0 x)
* [exit]simplify:  Simplified to (* -12.0 x)
* [enter]simplify:  Simplifying (log (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 8.0 x))
* [exit]simplify:  Simplified to (* (* x x) (* 8.0 x))
* * * * [misc]progress:  [ 50 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* 8.0 x)))
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x x) (* 8.0 x)))
* * * * [misc]progress:  [ 51 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (pow (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) 1))>
* * * * [misc]progress:  [ 52 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (pow x 3))))>
* * * * [misc]progress:  [ 53 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (* (log (exp 8.0)) (pow x 3))))>
* * * * [misc]progress:  [ 54 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -12.0 x) (log (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 55 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (log (exp -12.0)) x) (* 8.0 (pow x 3))))>
* * * * [misc]progress:  [ 56 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (log (exp -12.0)) x) (* (log (exp 8.0)) (pow x 3))))>
* * * * [misc]progress:  [ 57 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (log (exp -12.0)) x) (log (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 58 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (pow (exp -12.0) x)) (* 8.0 (pow x 3))))>
* * * * [misc]progress:  [ 59 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (pow (exp -12.0) x)) (* (log (exp 8.0)) (pow x 3))))>
* * * * [misc]progress:  [ 60 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (pow (exp -12.0) x)) (log (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 61 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 62 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (36 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))
* [exit]simplify:  Simplified to (log (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))
* * * * [misc]progress:  [ 63 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (exp (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (65 enodes)
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 64 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))) (cbrt (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))) (cbrt (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))) (cbrt (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (36 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))) (cbrt (+ (* (* x x) (* 8.0 x)) (* -12.0 x))))
* [enter]simplify:  Simplifying (cbrt (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (36 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))
* * * * [misc]progress:  [ 65 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))) (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))) (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))) (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (427 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* 8.0 x) (* x x)) (* -12.0 x)) 3)
* * * * [misc]progress:  [ 66 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))) (sqrt (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (36 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))
* [enter]simplify:  Simplifying (sqrt (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (36 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* 8.0 x) (* x x)) (* -12.0 x)))
* * * * [misc]progress:  [ 67 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))))>
* * * * [misc]progress:  [ 68 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* -12.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* -12.0 x)
* [exit]simplify:  Simplified to (* -12.0 x)
* * * * [misc]progress:  [ 69 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (log (exp -12.0)) x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (log (exp -12.0)) x)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (* -12.0 x)
* [exit]simplify:  Simplified to (* -12.0 x)
* * * * [misc]progress:  [ 70 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -12.0) (* 1 x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* 1 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 71 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x) (pow (cbrt (exp -12.0)) x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x)
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x)
* [enter]simplify:  Simplifying (pow (cbrt (exp -12.0)) x)
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp -12.0)) x)
* [exit]simplify:  Simplified to (pow (cbrt (exp -12.0)) x)
* * * * [misc]progress:  [ 72 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (sqrt (exp -12.0)) x) (pow (sqrt (exp -12.0)) x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp -12.0)) x)
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp -12.0)) x)
* [exit]simplify:  Simplified to (pow (sqrt (exp -12.0)) x)
* [enter]simplify:  Simplifying (pow (sqrt (exp -12.0)) x)
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp -12.0)) x)
* [exit]simplify:  Simplified to (pow (sqrt (exp -12.0)) x)
* * * * [misc]progress:  [ 73 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow 1 x) (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (pow 1 x)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp -12.0) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (exp -12.0) x)
* [exit]simplify:  Simplified to (pow (exp -12.0) x)
* * * * [misc]progress:  [ 74 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp -12.0) x) 1) (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 75 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (log (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (pow (exp -12.0) x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (8 enodes)
* [exit]simplify:  Simplified to (* -12.0 x)
* [exit]simplify:  Simplified to (* -12.0 x)
* * * * [misc]progress:  [ 76 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (log (exp (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (exp (pow (exp -12.0) x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (exp (pow (exp -12.0) x))
* * * * [misc]progress:  [ 77 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* [enter]simplify:  Simplifying (cbrt (pow (exp -12.0) x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (cbrt (pow (exp -12.0) x))
* * * * [misc]progress:  [ 78 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (* (* (pow (exp -12.0) x) (pow (exp -12.0) x)) (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (* (pow (exp -12.0) x) (pow (exp -12.0) x)) (pow (exp -12.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp -12.0) x) 3)
* [exit]simplify:  Simplified to (pow (pow (exp -12.0) x) 3)
* * * * [misc]progress:  [ 79 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (sqrt (pow (exp -12.0) x)) (sqrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp -12.0) x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (sqrt (pow (exp -12.0) x))
* [enter]simplify:  Simplifying (sqrt (pow (exp -12.0) x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (sqrt (pow (exp -12.0) x))
* * * * [misc]progress:  [ 80 / 92 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* 1 (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))>
* * * * [misc]progress:  [ 81 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp -12.0) x) (+ 1 (+ (* 8.0 (pow x 3)) (* 32.0 (pow x 6)))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp -12.0) x) (+ 1 (+ (* 8.0 (pow x 3)) (* 32.0 (pow x 6))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (209 enodes)
* * [misc]simplify:  iters left: 2 (404 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (pow x 6) 32.0) (+ 1 (* (* x x) (* x 8.0))))) (* -12.0 x))
* * * * [misc]progress:  [ 82 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp -12.0) x) (exp (* 8.0 (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp -12.0) x) (exp (* 8.0 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* 8.0 x) (* x x)))
* * * * [misc]progress:  [ 83 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp -12.0) x) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp -12.0) x) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (178 enodes)
* * [misc]simplify:  iters left: 1 (485 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* x 8.0)) (* -12.0 x))
* * * * [misc]progress:  [ 84 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x))))>
* [enter]simplify:  Simplifying (log (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (log (- (* (* x x) 72.0) (- (* 12.0 x) 1)))
* * * * [misc]progress:  [ 85 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 8.0 x)) (* -12.0 x))
* * * * [misc]progress:  [ 86 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (485 enodes)
* [exit]simplify:  Simplified to (+ (* x -12.0) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 87 / 92 ] simplifiying candidate #<alt-event (Î» (x) (- (* 8.0 (pow x 3)) (+ (* 3.2337589396370783e-13 (pow x 6)) (* 12.0 x))))>
* [enter]simplify:  Simplifying (- (* 8.0 (pow x 3)) (+ (* 3.2337589396370783e-13 (pow x 6)) (* 12.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (- (* (* 8.0 x) (* x x)) (+ (* 3.2337589396370783e-13 (pow x 6)) (* 12.0 x)))
* * * * [misc]progress:  [ 88 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* 8.0 (pow x 3))) (exp (* -12.0 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 8.0 x)) (* -12.0 x))
* * * * [misc]progress:  [ 89 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -12.0 x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (485 enodes)
* [exit]simplify:  Simplified to (+ (* x -12.0) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 90 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (* (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (* (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (368 enodes)
* [exit]simplify:  Simplified to (+ (* (* 8.0 x) (* x x)) (log (- (* (* x x) 72.0) (- (* 12.0 x) 1))))
* * * * [misc]progress:  [ 91 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 92 / 92 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -12.0 x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* -12.0 x) (* (* x 8.0) (* x x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 8.0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 8.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 8.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 8.0 2) 2)) (* (/ (pow 0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (+ (* 32.0 (pow x 6)) (+ (* 8.0 (pow x 3)) 1)) into (+ 1 (+ (* 8.0 (pow x 3)) (* 32.0 (pow x 6))))
* [misc]approximate:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow (/ 1 x) 3))) into (exp (* 8.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 1) 1)))) into -4.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 1) 1)))) into -4.0
* [misc]backup-simplify:  Simplify (+ (* 1 -4.0) (* -4.0 1)) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -12.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 -12.0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 72.0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -12.0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -12.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 -12.0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 72.0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -12.0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify (+ (* 1 8.0) (+ (* -4.0 -4.0) (* 8.0 1))) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (+ (* 32.0 (pow x 2)) (+ (* (- 8.0) x) 1)) into (- (+ (* 32.0 (pow x 2)) 1) (* 8.0 x))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 x))) (cbrt (pow (exp -12.0) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 x))) (cbrt (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 x))) (cbrt (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (exp (/ -4.0 x))) into (pow (exp (/ -4.0 x)) 2)
* [misc]backup-simplify:  Simplify (pow (exp (/ -4.0 x)) 2) into (pow (exp (/ -4.0 x)) 2)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ -12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ -12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (* 0 (exp (/ -4.0 x)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ -12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ -12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ -4.0 x))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -4.0 x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ -12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ -12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -4.0 x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ -12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ -12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -4.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ -12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ -12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -4.0 x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (/ -4.0 (/ 1 x))) 2) into (pow (exp (* -4.0 x)) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (cbrt (pow (exp -12.0) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (cbrt (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (cbrt (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (exp (/ 4.0 x))) into (pow (exp (/ 4.0 x)) 2)
* [misc]backup-simplify:  Simplify (pow (exp (/ 4.0 x)) 2) into (pow (exp (/ 4.0 x)) 2)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ 12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ 12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (* 0 (exp (/ 4.0 x)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ 12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ 12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ 4.0 x))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 4.0 x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 4.0 x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ 12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ 12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 4.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ 12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ 12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 4.0 x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (/ 4.0 (/ 1 (- x)))) 2) into (pow (exp (* -4.0 x)) 2)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 1) 1)))) into -4.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -4.0 1)) into (- 4.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 1) 1)))) into -4.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 1) 1)))) into -4.0
* [misc]backup-simplify:  Simplify (+ (* 1 -4.0) (* -4.0 1)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (* 1 (- 4.0)) (* (- 8.0) 1)) into (- 12.0)
* [misc]backup-simplify:  Simplify (- 12.0) into (- 12.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -12.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 -12.0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 72.0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -12.0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -4.0 0) (* 8.0 1))) into 8.0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -12.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 -12.0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 72.0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -12.0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -12.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 -12.0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 72.0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -12.0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify (+ (* 1 8.0) (+ (* -4.0 -4.0) (* 8.0 1))) into 32.0
* [misc]backup-simplify:  Simplify (+ (* 1 8.0) (+ (* (- 8.0) (- 4.0)) (* 32.0 1))) into 72.0
* [misc]backup-simplify:  Simplify 72.0 into 72.0
* [misc]backup-simplify:  Simplify (+ (* 72.0 (pow x 2)) (+ (* (- 12.0) x) 1)) into (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (pow (exp -12.0) (/ 1 x))) (cbrt (pow (exp -12.0) (/ 1 x)))) (* (cbrt (pow (exp -12.0) (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (pow (exp -12.0) (/ 1 x))) (cbrt (pow (exp -12.0) (/ 1 x)))) (* (cbrt (pow (exp -12.0) (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 x))) (cbrt (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (pow (exp -12.0) (/ 1 x))) (cbrt (pow (exp -12.0) (/ 1 x)))) (* (cbrt (pow (exp -12.0) (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 x))) (cbrt (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (exp (/ -4.0 x))) into (pow (exp (/ -4.0 x)) 2)
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3)))) into (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (pow (exp (/ -4.0 x)) 2) (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3))))) into (* (pow (exp (/ -4.0 x)) 3) (exp (/ 8.0 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (pow (exp (/ -4.0 x)) 3) (exp (/ 8.0 (pow x 3)))) into (* (pow (exp (/ -4.0 x)) 3) (exp (/ 8.0 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ -12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (* 0 (exp (/ 8.0 (pow x 3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ -12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ -12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (* 0 (exp (/ -4.0 x)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ -4.0 x)) 2) 0) (* 0 (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ -12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ -12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ -12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ -4.0 x))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ -4.0 x)) 2) 0) (+ (* 0 0) (* 0 (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -4.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ -4.0 x)) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ -12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ -12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ -12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -4.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ -4.0 x)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ -12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ -12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ -12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -4.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ -4.0 x)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ -12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ -12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ -12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -4.0 x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ -4.0 x)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (pow (exp (/ -4.0 (/ 1 x))) 3) (exp (/ 8.0 (pow (/ 1 x) 3)))) into (* (pow (exp (* -4.0 x)) 3) (exp (* 8.0 (pow x 3))))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (cbrt (pow (exp -12.0) (/ 1 (- x))))) (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (cbrt (pow (exp -12.0) (/ 1 (- x))))) (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (cbrt (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (cbrt (pow (exp -12.0) (/ 1 (- x))))) (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (cbrt (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (exp (/ 4.0 x))) into (pow (exp (/ 4.0 x)) 2)
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* (pow (exp (/ 4.0 x)) 2) (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into (* (pow (exp (/ 4.0 x)) 3) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* (pow (exp (/ 4.0 x)) 3) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (pow (exp (/ 4.0 x)) 3) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ 12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ 12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ 12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (* 0 (exp (/ 4.0 x)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ 4.0 x)) 2) 0) (* 0 (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ 12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ 12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ 12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ 4.0 x))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ 4.0 x)) 2) 0) (+ (* 0 0) (* 0 (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 4.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ 4.0 x)) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 4.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ 4.0 x)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ 12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ 12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ 12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 4.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ 4.0 x)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ 12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ 12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ 12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 4.0 x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (/ 4.0 x)) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (pow (exp (/ 4.0 (/ 1 (- x)))) 3) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))))) into (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (pow (exp (* -4.0 x)) 3))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) x)) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 0 -12.0) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -12.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -12.0)) into (- 12.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1/3 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 1) 1)))) into -12.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 -12.0) 1)) (pow 1 1)))) 1) into -12.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -12.0) (* 0 0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* 1 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 1) 1)))) into -4.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -4.0 1)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -12.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -12.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -12.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -12.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 12.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 72.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 -12.0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 72.0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -12.0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 4.0) 2) 2)) (* (/ (pow 0 1) 1)))) into 8.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -4.0 0) (* 8.0 1))) into 8.0
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (+ (* 8.0 (pow x 2)) (+ (* (- 4.0) x) 1)) into (- (+ (* 8.0 (pow x 2)) 1) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 x))) (pow (exp 8.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* 1 -12.0) into -12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp -12.0)))) into (exp (/ -12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -12.0 x))) into (/ -12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ -12.0 x)) into (/ -4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ -4.0 x)) into (exp (/ -4.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 8.0) into (/ 8.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 8.0 (pow x 3))) into (exp (/ 8.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3)))) into (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3)))) into (* (exp (/ -4.0 x)) (exp (/ 8.0 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ -12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (* 0 (exp (/ 8.0 (pow x 3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ -12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ -12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ -12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 8.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ -12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ -12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ -12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ -12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ -12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ -12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ -12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 8.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -4.0 (/ 1 x))) (exp (/ 8.0 (pow (/ 1 x) 3)))) into (* (exp (* -4.0 x)) (exp (* 8.0 (pow x 3))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (pow (exp -12.0) (/ 1 (- x)))) (pow (exp 8.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (pow (exp -12.0) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (pow (exp -12.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (pow (exp -12.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (pow (exp -12.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp -12.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp -12.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp -12.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp -12.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -12.0) in x
* [misc]taylor:  Taking taylor expansion of -12.0 in x
* [misc]backup-simplify:  Simplify -12.0 into -12.0
* [misc]backup-simplify:  Simplify (exp -12.0) into (exp -12.0)
* [misc]backup-simplify:  Simplify (log (exp -12.0)) into -12.0
* [misc]backup-simplify:  Simplify (* -1 -12.0) into 12.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp -12.0)))) into (exp (/ 12.0 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 12.0 x))) into (/ 12.0 x)
* [misc]backup-simplify:  Simplify (* 1/3 (/ 12.0 x)) into (/ 4.0 x)
* [misc]backup-simplify:  Simplify (exp (/ 4.0 x)) into (exp (/ 4.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 8.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 8.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 8.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 8.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 8.0) in x
* [misc]taylor:  Taking taylor expansion of 8.0 in x
* [misc]backup-simplify:  Simplify 8.0 into 8.0
* [misc]backup-simplify:  Simplify (exp 8.0) into (exp 8.0)
* [misc]backup-simplify:  Simplify (log (exp 8.0)) into 8.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 8.0) into (* 8.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (/ 4.0 x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 8.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 8.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (/ 12.0 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 8.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 8.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (/ 12.0 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 8.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 8.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 8.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 8.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 8.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 12.0 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 8.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 8.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ 12.0 x)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 8.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 8.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 8.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 8.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 8.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 8.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 8.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 8.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 8.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 8.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 8.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 8.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 8.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ 12.0 x)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ 12.0 x)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ 12.0 x)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ 12.0 x)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ 12.0 x)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 12.0 x)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ 12.0 x)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 12.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 x)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 4.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 8.0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 4.0 (/ 1 (- x)))) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))))) into (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -4.0 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (exp (* 8.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* 8.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 8.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 8.0 x) (* x x))
* * * * [misc]progress:  [ 2 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (exp (* (log (exp 8.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (log (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (* x 8.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 8.0) (* x x))
* * * * [misc]progress:  [ 3 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (* 1 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* 1 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 4 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (pow (exp 8.0) (* x x)) x)))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* * * * [misc]progress:  [ 5 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (pow (exp 8.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 8.0) (* x x))
* * * * [misc]progress:  [ 6 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (pow (exp 8.0) x) (* x x))))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) x)
* [exit]simplify:  Simplified to (pow (exp 8.0) x)
* * * * [misc]progress:  [ 7 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (pow (exp 8.0) (sqrt (pow x 3))) (sqrt (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp 8.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 8 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (pow (exp 8.0) 1) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 8.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp 8.0)
* [exit]simplify:  Simplified to (exp 8.0)
* * * * [misc]progress:  [ 9 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (* (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)) (pow (cbrt (exp 8.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))
* [enter]simplify:  Simplifying (pow (cbrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (cbrt (exp 8.0)) (pow x 3))
* * * * [misc]progress:  [ 10 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (* (pow (sqrt (exp 8.0)) (pow x 3)) (pow (sqrt (exp 8.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [enter]simplify:  Simplifying (pow (sqrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* * * * [misc]progress:  [ 11 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (* (pow 1 (pow x 3)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow 1 (pow x 3))
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp 8.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 8.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 8.0) (pow x 3))
* * * * [misc]progress:  [ 12 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (pow (exp 8.0) (pow x 3)) 1)))))>
* * * * [misc]progress:  [ 13 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (exp (log (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (log (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 8.0 x))
* [exit]simplify:  Simplified to (* (* x x) (* 8.0 x))
* * * * [misc]progress:  [ 14 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (log (exp (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (exp (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (exp (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 15 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (* (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3)))) (cbrt (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (cbrt (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 16 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (cbrt (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 8.0) (pow x 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp 8.0) (pow x 3)) 3)
* * * * [misc]progress:  [ 17 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (* (sqrt (pow (exp 8.0) (pow x 3))) (sqrt (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* [enter]simplify:  Simplifying (sqrt (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 8.0) (pow x 3)))
* * * * [misc]progress:  [ 18 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (* 1 (pow (exp 8.0) (pow x 3)))))))>
* * * * [misc]progress:  [ 19 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp -12.0) x) (+ 1/3 1/3)) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 20 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (cbrt (pow (exp -12.0) x)) (+ 1 1)) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 21 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (pow (exp -12.0) x) (pow (exp -12.0) x)) 1/3) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) (pow (exp -12.0) x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* [exit]simplify:  Simplified to (* (pow (exp -12.0) x) (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (* (pow (exp -12.0) x) (pow (exp -12.0) x))
* * * * [misc]progress:  [ 22 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) 1) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 23 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (cbrt (pow (exp -12.0) x)) 2) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* * * * [misc]progress:  [ 24 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (cbrt (pow (exp -12.0) x)) (+ 1 1)) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 25 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) 1) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* * * * [misc]progress:  [ 26 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x))))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 27 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 28 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (log (exp (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (exp (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 29 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (* (pow (exp -12.0) x) (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) (pow (exp -12.0) x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* [exit]simplify:  Simplified to (* (pow (exp -12.0) x) (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (* (pow (exp -12.0) x) (pow (exp -12.0) x))
* * * * [misc]progress:  [ 30 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))) (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 31 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (* (pow (exp -12.0) x) (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (* (pow (exp -12.0) x) (pow (exp -12.0) x))
* * * * [misc]progress:  [ 32 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (sqrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (sqrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (fabs (cbrt (pow (exp -12.0) x)))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (fabs (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 33 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* 1 (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* * * * [misc]progress:  [ 34 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x))) (cbrt (pow (cbrt (exp -12.0)) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 35 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (sqrt (exp -12.0)) x))) (cbrt (pow (sqrt (exp -12.0)) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (sqrt (exp -12.0)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (sqrt (exp -12.0)) x)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (sqrt (exp -12.0)) x)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 36 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow 1 x))) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt (pow 1 x)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 37 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))) (cbrt (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 38 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (sqrt (pow (exp -12.0) x)))) (cbrt (sqrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt (sqrt (pow (exp -12.0) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 39 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt 1)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt 1))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 40 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (cbrt (pow (exp -12.0) x))))) (cbrt (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (cbrt (pow (exp -12.0) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x))) (cbrt (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x))) (cbrt (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 41 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (sqrt (cbrt (pow (exp -12.0) x)))) (sqrt (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (sqrt (cbrt (pow (exp -12.0) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 42 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) 1) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) 1)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (cbrt (pow (exp -12.0) x))
* * * * [misc]progress:  [ 43 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x)) (* (cbrt (pow (cbrt (exp -12.0)) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (cbrt (exp -12.0)) x)) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (cbrt (exp -12.0)) x)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (cbrt (exp -12.0)) x)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 44 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (sqrt (exp -12.0)) x)) (* (cbrt (pow (sqrt (exp -12.0)) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (sqrt (exp -12.0)) x)) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (sqrt (exp -12.0)) x)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (sqrt (exp -12.0)) x)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 45 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow 1 x)) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 46 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 47 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (sqrt (pow (exp -12.0) x))) (* (cbrt (sqrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (sqrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (sqrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 48 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt 1) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 49 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (cbrt (pow (exp -12.0) x)))) (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 50 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (sqrt (cbrt (pow (exp -12.0) x))) (* (sqrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 51 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* 1 (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 52 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* * * * [misc]progress:  [ 53 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) 1)))>
* [enter]simplify:  Simplifying (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))
* * * * [misc]progress:  [ 54 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) 1)))>
* [enter]simplify:  Simplifying (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))
* * * * [misc]progress:  [ 55 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) 1)))>
* * * * [misc]progress:  [ 56 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (* 8.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (* 8.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (* (* x x) (* 8.0 x))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (* (* x x) (* 8.0 x))))
* * * * [misc]progress:  [ 57 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (* (log (exp 8.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (* (log (exp 8.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (* (* x x) (* 8.0 x)) (log (cbrt (pow (exp -12.0) x)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (* (* x x) (* 8.0 x)) (log (cbrt (pow (exp -12.0) x)))))
* * * * [misc]progress:  [ 58 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (log (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (log (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (* (* x x) (* 8.0 x)) (log (cbrt (pow (exp -12.0) x)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (* (* x x) (* 8.0 x)) (log (cbrt (pow (exp -12.0) x)))))
* * * * [misc]progress:  [ 59 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (log (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (log (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (* (* x x) (* 8.0 x)) (log (cbrt (pow (exp -12.0) x)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (* (* x x) (* 8.0 x)) (log (cbrt (pow (exp -12.0) x)))))
* * * * [misc]progress:  [ 60 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (* 8.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (* 8.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (* (* x x) (* 8.0 x)) (log (cbrt (pow (exp -12.0) x)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (* (* x x) (* 8.0 x)) (log (cbrt (pow (exp -12.0) x)))))
* * * * [misc]progress:  [ 61 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (* (log (exp 8.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (* (log (exp 8.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 8.0 x) (* x x)) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))))
* [exit]simplify:  Simplified to (+ (+ (* (* 8.0 x) (* x x)) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))))
* * * * [misc]progress:  [ 62 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (log (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (log (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 8.0 x) (* x x)) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))))
* [exit]simplify:  Simplified to (+ (+ (* (* 8.0 x) (* x x)) (log (cbrt (pow (exp -12.0) x)))) (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))))
* * * * [misc]progress:  [ 63 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (log (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (log (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (49 enodes)
* * [misc]simplify:  iters left: 1 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (* (* 8.0 x) (* x x)) (log (cbrt (pow (exp -12.0) x)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (pow (exp -12.0) x))) (log (cbrt (pow (exp -12.0) x)))) (+ (* (* 8.0 x) (* x x)) (log (cbrt (pow (exp -12.0) x)))))
* * * * [misc]progress:  [ 64 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (* x (log (exp -12.0))) (* (* x 8.0) (* x x)))
* [exit]simplify:  Simplified to (+ (* x (log (exp -12.0))) (* (* x 8.0) (* x x)))
* * * * [misc]progress:  [ 65 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (exp (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (exp (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (exp (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * * * [misc]progress:  [ 66 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (pow (exp -12.0) x) (pow (exp -12.0) x)) (* (pow (exp -12.0) x) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp -12.0) x) (pow (exp -12.0) x)) (* (pow (exp -12.0) x) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (105 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x)) 3)
* [exit]simplify:  Simplified to (pow (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x)) 3)
* * * * [misc]progress:  [ 67 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (pow (exp -12.0) x) (pow (exp -12.0) x)) (* (* (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp -12.0) x) (pow (exp -12.0) x)) (* (* (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (195 enodes)
* [exit]simplify:  Simplified to (* (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x)) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x)) (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (* (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x)) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x)) (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 68 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (pow (exp -12.0) x) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (pow (exp -12.0) x) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp 8.0) (pow x 3)) 3) (pow (pow (exp -12.0) x) 3))
* [exit]simplify:  Simplified to (* (pow (pow (exp 8.0) (pow x 3)) 3) (pow (pow (exp -12.0) x) 3))
* * * * [misc]progress:  [ 69 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (* (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (* (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (354 enodes)
* [exit]simplify:  Simplified to (* (* (pow (exp 8.0) (pow x 3)) (* (pow (exp -12.0) x) (pow (exp -12.0) x))) (* (pow (exp 8.0) (pow x 3)) (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (* (* (pow (exp 8.0) (pow x 3)) (* (pow (exp -12.0) x) (pow (exp -12.0) x))) (* (pow (exp 8.0) (pow x 3)) (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 70 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))) (cbrt (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))) (cbrt (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))) (cbrt (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))) (cbrt (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))) (cbrt (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x))))
* [enter]simplify:  Simplifying (cbrt (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (cbrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * * * [misc]progress:  [ 71 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))) (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))) (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) 3)
* * * * [misc]progress:  [ 72 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))) (sqrt (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))))
* * * * [misc]progress:  [ 73 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))))>
* * * * [misc]progress:  [ 74 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp -12.0) x)
* [exit]simplify:  Simplified to (pow (exp -12.0) x)
* * * * [misc]progress:  [ 75 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (pow (exp -12.0) x)) (* (cbrt (pow (exp -12.0) x)) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* [exit]simplify:  Simplified to (* (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 76 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))))))>
* * * * [misc]progress:  [ 77 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (pow (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) 1))))>
* * * * [misc]progress:  [ 78 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (exp (+ (log (cbrt (pow (exp -12.0) x))) (* 8.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (pow (exp -12.0) x))) (* 8.0 (pow x 3)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 8.0) (* x x)) (log (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (+ (* (* x 8.0) (* x x)) (log (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 79 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (exp (+ (log (cbrt (pow (exp -12.0) x))) (* (log (exp 8.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (pow (exp -12.0) x))) (* (log (exp 8.0)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 8.0) (* x x)) (log (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (+ (* (* x 8.0) (* x x)) (log (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 80 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (exp (+ (log (cbrt (pow (exp -12.0) x))) (log (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (pow (exp -12.0) x))) (log (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* x 8.0)) (log (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (+ (* (* x x) (* x 8.0)) (log (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 81 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (exp (log (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (33 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 8.0) (* x x)) (log (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (+ (* (* x 8.0) (* x x)) (log (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 82 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (log (exp (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (exp (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (exp (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 83 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (cbrt (* (pow (exp -12.0) x) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (pow (exp -12.0) x) (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (36 enodes)
* [exit]simplify:  Simplified to (* (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (* (pow (exp -12.0) x) (pow (exp 8.0) (pow x 3))) (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))))
* * * * [misc]progress:  [ 84 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (* (cbrt (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (cbrt (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))) (cbrt (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (cbrt (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))) (cbrt (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))) (cbrt (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (cbrt (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 85 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (cbrt (* (* (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (* (pow (exp 8.0) (pow x 3)) (pow (exp 8.0) (pow x 3))) (* (pow (exp 8.0) (pow x 3)) (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 86 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (sqrt (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))) (sqrt (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (sqrt (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (sqrt (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 87 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* 1 (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))))>
* * * * [misc]progress:  [ 88 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (* (cbrt (pow (exp -12.0) x)) (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3))) (pow (cbrt (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp 8.0)) (cbrt (exp 8.0))) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 89 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (* (cbrt (pow (exp -12.0) x)) (pow (sqrt (exp 8.0)) (pow x 3))) (pow (sqrt (exp 8.0)) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (pow (sqrt (exp 8.0)) (pow x 3)))
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (exp 8.0)) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (pow (sqrt (exp 8.0)) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 90 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (* (cbrt (pow (exp -12.0) x)) (pow 1 (pow x 3))) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (pow 1 (pow x 3)))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (cbrt (pow (exp -12.0) x))
* * * * [misc]progress:  [ 91 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (* (cbrt (pow (exp -12.0) x)) (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3))))) (cbrt (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 8.0) (pow x 3))) (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 8.0) (pow x 3))) (* (cbrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 92 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (* (cbrt (pow (exp -12.0) x)) (sqrt (pow (exp 8.0) (pow x 3)))) (sqrt (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (sqrt (pow (exp 8.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (sqrt (pow (exp 8.0) (pow x 3))) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 93 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (* (cbrt (pow (exp -12.0) x)) 1) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) 1)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp -12.0) x))
* [exit]simplify:  Simplified to (cbrt (pow (exp -12.0) x))
* * * * [misc]progress:  [ 94 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (* (cbrt (exp -12.0)) (cbrt (exp -12.0))) x)) (* (cbrt (pow (cbrt (exp -12.0)) x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (cbrt (exp -12.0)) x)) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (cbrt (exp -12.0)) x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (cbrt (exp -12.0)) x)))
* * * * [misc]progress:  [ 95 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (sqrt (exp -12.0)) x)) (* (cbrt (pow (sqrt (exp -12.0)) x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (sqrt (exp -12.0)) x)) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (sqrt (exp -12.0)) x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (sqrt (exp -12.0)) x)))
* * * * [misc]progress:  [ 96 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow 1 x)) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 97 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (* (cbrt (cbrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 98 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (sqrt (pow (exp -12.0) x))) (* (cbrt (sqrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (sqrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (sqrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 99 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt 1) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 100 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (cbrt (pow (exp -12.0) x)))) (* (cbrt (cbrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 101 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (sqrt (cbrt (pow (exp -12.0) x))) (* (sqrt (cbrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (pow (exp -12.0) x))) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (sqrt (cbrt (pow (exp -12.0) x))))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (sqrt (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 102 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* 1 (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* [exit]simplify:  Simplified to (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 103 / 115 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (pow (exp 8.0) (pow x 3)) (cbrt (pow (exp -12.0) x))))))>
* * * * [misc]progress:  [ 104 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (+ 1 (+ (* 8.0 (pow x 3)) (* 32.0 (pow x 6))))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (+ 1 (+ (* 8.0 (pow x 3)) (* 32.0 (pow x 6)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (log (* (+ (+ (* 32.0 (pow x 6)) (* (* 8.0 x) (* x x))) 1) (pow (cbrt (pow (exp -12.0) x)) 3)))
* * * * [misc]progress:  [ 105 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (exp (* 8.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (exp (* 8.0 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* x 8.0)) (* x (log (exp -12.0))))
* * * * [misc]progress:  [ 106 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (exp -12.0) x)) (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (221 enodes)
* [exit]simplify:  Simplified to (+ (* (* 8.0 x) (* x x)) (log (pow (exp -12.0) x)))
* * * * [misc]progress:  [ 107 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (- (+ (* 32.0 (pow x 2)) 1) (* 8.0 x)) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (- (+ (* 32.0 (pow x 2)) 1) (* 8.0 x)) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (241 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* x 8.0)) (log (* (cbrt (pow (exp -12.0) x)) (+ (- 1 (* 8.0 x)) (* (* 32.0 x) x)))))
* * * * [misc]progress:  [ 108 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp (* -4.0 x)) 2) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp (* -4.0 x)) 2) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (100 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp -12.0) x))) (+ (* (* x x) (* 8.0 x)) (* -4.0 (+ x x))))
* * * * [misc]progress:  [ 109 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp (* -4.0 x)) 2) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp (* -4.0 x)) 2) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (100 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (182 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp -12.0) x))) (+ (* (* x x) (* 8.0 x)) (* -4.0 (+ x x))))
* * * * [misc]progress:  [ 110 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x))))>
* [enter]simplify:  Simplifying (log (- (+ (* 72.0 (pow x 2)) 1) (* 12.0 x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (log (- (* (* x x) 72.0) (- (* 12.0 x) 1)))
* * * * [misc]progress:  [ 111 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp (* -4.0 x)) 3) (exp (* 8.0 (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp (* -4.0 x)) 3) (exp (* 8.0 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (128 enodes)
* * [misc]simplify:  iters left: 1 (169 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 8.0 x)) (* (* -4.0 3) x))
* * * * [misc]progress:  [ 112 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (pow (exp (* -4.0 x)) 3))))>
* [enter]simplify:  Simplifying (log (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (pow (exp (* -4.0 x)) 3)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (139 enodes)
* * [misc]simplify:  iters left: 2 (271 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* x 8.0)) (* (* x -4.0) 3))
* * * * [misc]progress:  [ 113 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (- (+ (* 8.0 (pow x 2)) 1) (* 4.0 x)))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (- (+ (* 8.0 (pow x 2)) 1) (* 4.0 x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (235 enodes)
* [exit]simplify:  Simplified to (log (* (* (+ (* x (* x 8.0)) (- 1 (* x 4.0))) (cbrt (pow (exp -12.0) x))) (cbrt (pow (exp -12.0) x))))
* * * * [misc]progress:  [ 114 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (exp (* -4.0 x)) (exp (* 8.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (exp (* -4.0 x)) (exp (* 8.0 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (170 enodes)
* * [misc]simplify:  iters left: 1 (199 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp -12.0) x))) (+ (log (cbrt (pow (exp -12.0) x))) (+ (* (* x x) (* 8.0 x)) (* x -4.0))))
* * * * [misc]progress:  [ 115 / 115 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -4.0 x))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (exp (* 8.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (exp (* -4.0 x)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (285 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x)))) (+ (* (* x x) (* 8.0 x)) (* -4.0 x)))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (* (* (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))) (cbrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))> #<alt-delta (Î» (x) (exp (log (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))> #<alt-delta (Î» (x) (/ (- (* (* -12.0 x) (* -12.0 x)) (* (* 8.0 (* (* x x) x)) (* 8.0 (* (* x x) x)))) (- (* -12.0 x) (* 8.0 (* (* x x) x)))))> #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (* (pow (sqrt (exp 8.0)) (pow x 3)) (pow (sqrt (exp 8.0)) (pow x 3))))))> #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (* (cbrt (pow (sqrt (exp -12.0)) x)) (* (cbrt (pow (sqrt (exp -12.0)) x)) (pow (exp 8.0) (pow x 3)))))))> #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp -12.0) x)) (cbrt (pow (exp -12.0) x))) (log (exp (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))))> #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp -12.0) x)) (* (cbrt (cbrt (pow (exp -12.0) x))) (cbrt (cbrt (pow (exp -12.0) x))))) (cbrt (cbrt (pow (exp -12.0) x)))) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))> #<alt-delta (Î» (x) (+ (* -12.0 x) (* 8.0 (log (exp (pow x 3))))))> #<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (pow (pow (exp 8.0) (* x x)) x))))> #<alt-delta (Î» (x) (* (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x)))) (sqrt (+ (* -12.0 x) (* 8.0 (* (* x x) x))))))> #<alt-delta (Î» (x) (log (* (pow (pow (exp -12.0) x) (+ 1/3 1/3)) (* (cbrt (pow (exp -12.0) x)) (pow (exp 8.0) (pow x 3))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (* -12.0 x) (* 8.0 (* (* x x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (log (* (pow (exp -12.0) x) (* (pow (sqrt (exp 8.0)) (pow x 3)) (pow (sqrt (exp 8.0)) (pow x 3))))))>)
* [enter]simplify:  Simplifying (pow (sqrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [enter]simplify:  Simplifying (pow (sqrt (exp 8.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 8.0)) (pow x 3))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
