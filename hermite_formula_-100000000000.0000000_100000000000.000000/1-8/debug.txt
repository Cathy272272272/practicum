* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 x) x)) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 x) x)) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -3584.0 0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* 1 (- 3584.0)) into -3584.0
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]backup-simplify:  Simplify (+ (* 256.0 1) (* 0 0)) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 256.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (- 3584.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 1) (* 0 0))) into 256.0
* [misc]backup-simplify:  Simplify (+ 0 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 256.0) (+ (* 0 0) (* 0 (- 3584.0)))) into 256.0
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 (pow x 8)) (* -3584.0 (pow x 6))) into (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ -3584.0 (* (* 256.0 (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ -3584.0 (* (* 256.0 (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ -3584.0 (* (* 256.0 (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (+ 0 256.0) into 256.0
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) 256.0) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 256.0 (pow x 6)) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -3584.0 0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) (- 3584.0)) (+ (* 0 0) (* 0 256.0))) into (- (* 3584.0 (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (- (* 3584.0 (/ 1 (pow x 6)))) into (- (* 3584.0 (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 3584.0 (/ 1 (pow (/ 1 x) 6)))) (* (/ 256.0 (pow (/ 1 x) 6)) (pow (/ 1 (/ 1 x)) 2))) into (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ -3584.0 (* (* 256.0 (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ -3584.0 (* (* 256.0 (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ -3584.0 (* (* 256.0 (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -256.0 -1) into 256.0
* [misc]backup-simplify:  Simplify (+ 0 256.0) into 256.0
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 256.0) into (* 256.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 256.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (* 256.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -3584.0 0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (- 3584.0)) (+ (* 0 0) (* 0 256.0))) into (- (* 3584.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 3584.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (- (* 3584.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 3584.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2))) (* (* 256.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 256.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 2))) (* 3584.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* x (* x -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* x (* x -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* x (* x -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* 0 -13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -13440.0)) into (- 13440.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 13440.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 13440.0)) (* 0 0))) into (- 13440.0)
* [misc]backup-simplify:  Simplify (- 13440.0) into (- 13440.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 13440.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 13440.0) (pow x 2)) into (* -13440.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* 1 -13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* 1 -13440.0) into -13440.0
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -13440.0 (pow (/ 1 (/ 1 x)) 2)) into (* -13440.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* -1 -13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -13440.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* -13440.0 (pow x 2))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x 4)) into (* 13440.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (/ 13440.0 (pow x 3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (/ 13440.0 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) into (* 13440.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* -13440.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x)))) into (* 13440.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (pow (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) 1)))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))
* * * * [misc]progress:  [ 2 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (pow (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) 1)))>
* * * * [misc]progress:  [ 3 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (+ (+ (* (log x) 3) (* (log x) 3)) (log (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (* (log x) 3)) (log (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 3 3) (log x)) (log (+ -3584.0 (* (* x 256.0) x))))
* [exit]simplify:  Simplified to (+ (* (+ 3 3) (log x)) (log (+ -3584.0 (* (* x 256.0) x))))
* * * * [misc]progress:  [ 4 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (+ (+ (* (log x) 3) (log (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (log (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (106 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 3 3) (log x)) (log (+ (* 256.0 (* x x)) -3584.0)))
* [exit]simplify:  Simplified to (+ (* (+ 3 3) (log x)) (log (+ (* 256.0 (* x x)) -3584.0)))
* * * * [misc]progress:  [ 5 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (+ (+ (log (pow x 3)) (* (log x) 3)) (log (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (* (log x) 3)) (log (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (115 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ (* 256.0 (* x x)) -3584.0)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ (* 256.0 (* x x)) -3584.0)))
* * * * [misc]progress:  [ 6 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (+ (+ (log (pow x 3)) (log (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (log (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* * [misc]simplify:  iters left: 1 (109 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ -3584.0 (* (* x x) 256.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ -3584.0 (* (* x x) 256.0))))
* * * * [misc]progress:  [ 7 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (+ (log (* (pow x 3) (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (+ (log (* (pow x 3) (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (131 enodes)
* * [misc]simplify:  iters left: 1 (151 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ -3584.0 (* (* x x) 256.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ -3584.0 (* (* x x) 256.0))))
* * * * [misc]progress:  [ 8 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (log (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (log (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (278 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ (* x (* 256.0 x)) -3584.0)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ (* x (* 256.0 x)) -3584.0)))
* * * * [misc]progress:  [ 9 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (exp (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (283 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))
* * * * [misc]progress:  [ 10 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 11 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))) (* (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))) (* (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (232 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (pow (* (pow x 3) (pow x 3)) 3)))
* [exit]simplify:  Simplified to (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (pow (* (pow x 3) (pow x 3)) 3)))
* * * * [misc]progress:  [ 12 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))) (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))) (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))) (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))) (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))) (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))))
* [enter]simplify:  Simplifying (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* * * * [misc]progress:  [ 13 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (pow (* (* (pow x 3) (pow x 3)) (+ (* x (* 256.0 x)) -3584.0)) 3)
* [exit]simplify:  Simplified to (pow (* (* (pow x 3) (pow x 3)) (+ (* x (* 256.0 x)) -3584.0)) 3)
* * * * [misc]progress:  [ 14 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (sqrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))) (sqrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* * * * [misc]progress:  [ 15 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* 1 (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))))>
* * * * [misc]progress:  [ 16 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (* (* (pow x 3) (pow x 3)) -3584.0) (* (* (pow x 3) (pow x 3)) (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) -3584.0)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (111 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x -3584.0) x))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x -3584.0) x))
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (* (* 256.0 x) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (143 enodes)
* * [misc]simplify:  iters left: 2 (162 enodes)
* * [misc]simplify:  iters left: 1 (176 enodes)
* [exit]simplify:  Simplified to (* 256.0 (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (* 256.0 (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 17 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (* -3584.0 (* (pow x 3) (pow x 3))) (* (* (* 256.0 x) x) (* (pow x 3) (pow x 3))))))>
* [enter]simplify:  Simplifying (* -3584.0 (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* -3584.0 x) x))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* -3584.0 x) x))
* [enter]simplify:  Simplifying (* (* (* 256.0 x) x) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (151 enodes)
* * [misc]simplify:  iters left: 1 (157 enodes)
* [exit]simplify:  Simplified to (* (* 256.0 (* x x)) (pow (* x x) 3))
* [exit]simplify:  Simplified to (* (* 256.0 (* x x)) (pow (* x x) 3))
* * * * [misc]progress:  [ 18 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (pow x 3)) (* (cbrt (+ -3584.0 (* (* 256.0 x) x))) (cbrt (+ -3584.0 (* (* 256.0 x) x))))) (cbrt (+ -3584.0 (* (* 256.0 x) x))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (* (cbrt (+ -3584.0 (* (* 256.0 x) x))) (cbrt (+ -3584.0 (* (* 256.0 x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (193 enodes)
* * [misc]simplify:  iters left: 1 (294 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x (* 256.0 x)) -3584.0)) (* x x)) (* (cbrt (+ (* x (* 256.0 x)) -3584.0)) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x (* 256.0 x)) -3584.0)) (* x x)) (* (cbrt (+ (* x (* 256.0 x)) -3584.0)) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 19 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (pow x 3)) (sqrt (+ -3584.0 (* (* 256.0 x) x)))) (sqrt (+ -3584.0 (* (* 256.0 x) x))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (sqrt (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (126 enodes)
* * [misc]simplify:  iters left: 1 (136 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x (* 256.0 x)) -3584.0)) (pow (* x x) 3))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x (* 256.0 x)) -3584.0)) (pow (* x x) 3))
* * * * [misc]progress:  [ 20 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (pow x 3)) 1) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) 1)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (54 enodes)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* * * * [misc]progress:  [ 21 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x 3) (* (pow x 3) (+ -3584.0 (* (* 256.0 x) x))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ -3584.0 (* (* 256.0 x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (131 enodes)
* [exit]simplify:  Simplified to (* (+ (* -3584.0 x) (* (* x x) (* x 256.0))) (* x x))
* [exit]simplify:  Simplified to (* (+ (* -3584.0 x) (* (* x x) (* x 256.0))) (* x x))
* * * * [misc]progress:  [ 22 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (* (* (pow x 3) (pow x 3)) (+ (pow -3584.0 3) (pow (* (* 256.0 x) x) 3))) (+ (* -3584.0 -3584.0) (- (* (* (* 256.0 x) x) (* (* 256.0 x) x)) (* -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (+ (pow -3584.0 3) (pow (* (* 256.0 x) x) 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (* x 256.0) 3) (pow (pow x 3) 3)) (* (* (pow -3584.0 3) (* x x)) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (* (pow (* x 256.0) 3) (pow (pow x 3) 3)) (* (* (pow -3584.0 3) (* x x)) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 23 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (* (* (pow x 3) (pow x 3)) (- (* -3584.0 -3584.0) (* (* (* 256.0 x) x) (* (* 256.0 x) x)))) (- -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (- (* -3584.0 -3584.0) (* (* (* 256.0 x) x) (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (425 enodes)
* [exit]simplify:  Simplified to (* (* (- -3584.0 (* (* x 256.0) x)) (* x x)) (* (* (* x x) (* x x)) (+ -3584.0 (* (* x 256.0) x))))
* [exit]simplify:  Simplified to (* (* (- -3584.0 (* (* x 256.0) x)) (* x x)) (* (* (* x x) (* x x)) (+ -3584.0 (* (* x 256.0) x))))
* * * * [misc]progress:  [ 24 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (+ -3584.0 (* (* 256.0 x) x)) (* (pow x 3) (pow x 3)))))>
* * * * [misc]progress:  [ 25 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (pow (* x (* x -13440.0)) 1)) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 26 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (exp (log (* x (* x -13440.0))))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (log (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (log (* x (* x -13440.0)))
* * * * [misc]progress:  [ 27 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (log (exp (* x (* x -13440.0))))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (exp (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* x -13440.0))
* [exit]simplify:  Simplified to (pow (exp x) (* x -13440.0))
* * * * [misc]progress:  [ 28 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0)))) (cbrt (* x (* x -13440.0))))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* [enter]simplify:  Simplifying (cbrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x -13440.0)))
* * * * [misc]progress:  [ 29 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (cbrt (* (* (* x (* x -13440.0)) (* x (* x -13440.0))) (* x (* x -13440.0))))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* x (* x -13440.0)) (* x (* x -13440.0))) (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (246 enodes)
* * [misc]simplify:  iters left: 1 (355 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x -13440.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x -13440.0)) 3)
* * * * [misc]progress:  [ 30 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (sqrt (* x (* x -13440.0))) (sqrt (* x (* x -13440.0))))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (sqrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [enter]simplify:  Simplifying (sqrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* * * * [misc]progress:  [ 31 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* 1 (* x (* x -13440.0)))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 32 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* x x) -13440.0)) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 33 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* x -13440.0) x)) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 34 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x (+ 3 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 35 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (* x x) 3) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 36 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (pow x 3) 2) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 37 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (* (pow x 3) (pow x 3)) 1) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 38 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (exp (+ (* (log x) 3) (* (log x) 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 39 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (exp (+ (* (log x) 3) (log (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 40 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (exp (+ (log (pow x 3)) (* (log x) 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 41 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (exp (+ (log (pow x 3)) (log (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 42 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (exp (log (* (pow x 3) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 43 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (log (exp (* (pow x 3) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 44 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 45 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 46 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 47 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 48 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* 1 (* (pow x 3) (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 49 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (* x x)) x) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 50 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 51 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) x) (* x x)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 52 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 53 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) 1) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 54 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* x x) (* x (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 55 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 56 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* x (* (* x x) (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 57 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 58 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* 1 (* (pow x 3) (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 59 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 60 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (* (* x 13440.0) (pow x 3)) 1) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 61 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (+ (log (* x 13440.0)) (* (log x) 3))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (log (* x 13440.0)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 13440.0)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 13440.0)))
* * * * [misc]progress:  [ 62 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (+ (log (* x 13440.0)) (log (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (log (* x 13440.0)) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* * [misc]simplify:  iters left: 1 (56 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x 13440.0)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x 13440.0)))
* * * * [misc]progress:  [ 63 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (log (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (log (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 13440.0)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 13440.0)))
* * * * [misc]progress:  [ 64 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (log (exp (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (exp (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 13440.0)))
* * * * [misc]progress:  [ 65 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (cbrt (* (* (* (* x 13440.0) (* x 13440.0)) (* x 13440.0)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* (* x 13440.0) (* x 13440.0)) (* x 13440.0)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 13440.0) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 13440.0) 3))
* * * * [misc]progress:  [ 66 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 13440.0)))
* * * * [misc]progress:  [ 67 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (cbrt (* (* (* (* x 13440.0) (pow x 3)) (* (* x 13440.0) (pow x 3))) (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* (* x 13440.0) (pow x 3)) (* (* x 13440.0) (pow x 3))) (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (287 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 13440.0)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 13440.0)) 3)
* * * * [misc]progress:  [ 68 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* x 13440.0) (pow x 3))) (sqrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 13440.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 13440.0)))
* * * * [misc]progress:  [ 69 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* 1 (* (* x 13440.0) (pow x 3))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 70 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x 13440.0) (* x x)) x) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x 13440.0) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x 13440.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 13440.0) (* x x))
* * * * [misc]progress:  [ 71 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x 13440.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x 13440.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* x 13440.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 13440.0) (* x x))
* * * * [misc]progress:  [ 72 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x 13440.0) x) (* x x)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x 13440.0) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x 13440.0))
* [exit]simplify:  Simplified to (* x (* x 13440.0))
* * * * [misc]progress:  [ 73 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x 13440.0) (sqrt (pow x 3))) (sqrt (pow x 3))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x 13440.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (* x 13440.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (* x 13440.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 74 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x 13440.0) 1) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x 13440.0) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (19 enodes)
* [exit]simplify:  Simplified to (* x 13440.0)
* [exit]simplify:  Simplified to (* x 13440.0)
* * * * [misc]progress:  [ 75 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x (* 13440.0 (pow x 3))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* 13440.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 13440.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 13440.0 x) (* x x))
* * * * [misc]progress:  [ 76 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow x 3) (* x 13440.0)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 77 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* * [misc]simplify:  iters left: 2 (443 enodes)
* [exit]simplify:  Simplified to (- (+ (* 256.0 (pow x 8)) (- 1680.0 (* 3584.0 (pow x 6)))) (* (- (* x x)) (+ (* (* x x) 13440.0) -13440.0)))
* * * * [misc]progress:  [ 78 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* * [misc]simplify:  iters left: 2 (443 enodes)
* [exit]simplify:  Simplified to (- (+ (* 256.0 (pow x 8)) (- 1680.0 (* 3584.0 (pow x 6)))) (* (- (* x x)) (+ (* (* x x) 13440.0) -13440.0)))
* * * * [misc]progress:  [ 79 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 2))) (* 3584.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 2))) (* 3584.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x -13440.0) x) (+ (* (* x 13440.0) (pow x 3)) 1680.0)) (* (- (* (* 256.0 x) x) 3584.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 80 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ 1680.0 (+ (* (* x -13440.0) x) (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 81 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ 1680.0 (+ (* (* x -13440.0) x) (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 82 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ 1680.0 (+ (* (* x -13440.0) x) (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 83 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x 6) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x 6) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (237 enodes)
* * [misc]simplify:  iters left: 2 (436 enodes)
* [exit]simplify:  Simplified to (+ (+ 1680.0 (+ (* (pow x 6) -3584.0) (* (* x -13440.0) x))) (* (* x x) (+ (* x (* x 13440.0)) (* 256.0 (pow x 6)))))
* * * * [misc]progress:  [ 84 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x 6) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x 6) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (237 enodes)
* * [misc]simplify:  iters left: 2 (436 enodes)
* [exit]simplify:  Simplified to (+ (+ 1680.0 (+ (* (pow x 6) -3584.0) (* (* x -13440.0) x))) (* (* x x) (+ (* x (* x 13440.0)) (* 256.0 (pow x 6)))))
* * * * [misc]progress:  [ 85 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 3) (* 13440.0 x)) 1680.0) (* -13440.0 (* x x))) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* 256.0 (* x x)))))
* * * * [misc]progress:  [ 86 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* 13440.0 (pow x 4)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* 13440.0 (pow x 4)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (399 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* 256.0 (* x x)))) (+ (* (pow x 4) 13440.0) (+ 1680.0 (* (* x x) -13440.0))))
* * * * [misc]progress:  [ 87 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* 13440.0 (pow x 4)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* 13440.0 (pow x 4)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (399 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* 256.0 (* x x)))) (+ (* (pow x 4) 13440.0) (+ 1680.0 (* (* x x) -13440.0))))
* * * * [misc]progress:  [ 88 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* 13440.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* 13440.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -13440.0)) (+ 1680.0 (* (* x 13440.0) (pow x 3)))) (* (+ -3584.0 (* 256.0 (* x x))) (* (pow x 3) (pow x 3))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* (- 3584.0) (- 3584.0)) into 12845056.0
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 9)) into (pow x 18)
* [misc]backup-simplify:  Simplify (* (- 3584.0) (pow x 18)) into (* -3584.0 (pow x 18))
* [misc]backup-simplify:  Simplify (* 12845056.0 (* -3584.0 (pow x 18))) into (* -46036680704.0 (pow x 18))
* [misc]backup-simplify:  Simplify (log (* -46036680704.0 (pow x 18))) into (log (* -46036680704.0 (pow x 18)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* -46036680704.0 (pow x 18)))) into (* 1/3 (log (* -46036680704.0 (pow x 18))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* -46036680704.0 (pow x 18))))) into (pow (* -46036680704.0 (pow x 18)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* (- 3584.0) (- 3584.0)) into 12845056.0
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 9)) into (pow x 18)
* [misc]backup-simplify:  Simplify (* (- 3584.0) (pow x 18)) into (* -3584.0 (pow x 18))
* [misc]backup-simplify:  Simplify (* 12845056.0 (* -3584.0 (pow x 18))) into (* -46036680704.0 (pow x 18))
* [misc]backup-simplify:  Simplify (log (* -46036680704.0 (pow x 18))) into (log (* -46036680704.0 (pow x 18)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* -46036680704.0 (pow x 18)))) into (* 1/3 (log (* -46036680704.0 (pow x 18))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* -46036680704.0 (pow x 18))))) into (pow (* -46036680704.0 (pow x 18)) 1/3)
* [misc]backup-simplify:  Simplify (pow (* -46036680704.0 (pow x 18)) 1/3) into (pow (* -46036680704.0 (pow x 18)) 1/3)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (* 0 (pow x 9))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 1) (* 0 0)) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 0 256.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (* 0 (pow x 18))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 1) (* 0 0)) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 0 256.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 1) (* 0 0)) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 0 256.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (* 0 (- 3584.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 12845056.0 0) (* 0 (* -3584.0 (pow x 18)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -46036680704.0 (pow x 18)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (* -46036680704.0 (pow x 18))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* -46036680704.0 (pow x 18))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (* 0 (pow x 9)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 256.0) (* 0 0))) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (* 256.0 (pow x 18)))) into (* 256.0 (pow x 18))
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 256.0) (* 0 0))) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 256.0) (* 0 0))) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 256.0) (+ (* 0 0) (* 256.0 (- 3584.0)))) into (- 1835008.0)
* [misc]backup-simplify:  Simplify (+ (* 12845056.0 (* 256.0 (pow x 18))) (+ (* 0 0) (* (- 1835008.0) (* -3584.0 (pow x 18))))) into (* 9865003008.0 (pow x 18))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -46036680704.0 (pow x 18)) 2))) (* 1 (/ (* 1 (pow (* 2 (* 9865003008.0 (pow x 18))) 1)) (pow (* -46036680704.0 (pow x 18)) 1)))) 2) into -0.21428571428571427
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.21428571428571427) (+ (* 0 0) (* 0 (log (* -46036680704.0 (pow x 18)))))) into (- 0.07142857142857142)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* -46036680704.0 (pow x 18))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.07142857142857142) 1) 1)))) into (* -0.07142857142857142 (* (pow -46036680704.0 1/3) (pow x 6)))
* [misc]backup-simplify:  Simplify (* -0.07142857142857142 (* (pow -46036680704.0 1/3) (pow x 6))) into (* -0.07142857142857142 (* (pow -46036680704.0 1/3) (pow x 6)))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 256.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (* 0 (pow x 18))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 256.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 256.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 256.0) (+ (* 256.0 0) (* 0 (- 3584.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 12845056.0 0) (+ (* 0 (* 256.0 (pow x 18))) (+ (* (- 1835008.0) 0) (* 0 (* -3584.0 (pow x 18)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -46036680704.0 (pow x 18)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 9865003008.0 (pow x 18))) 1)) (pow (* -46036680704.0 (pow x 18)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -46036680704.0 (pow x 18)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.21428571428571427) (+ (* 0 0) (* 0 (log (* -46036680704.0 (pow x 18))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* -46036680704.0 (pow x 18))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.07142857142857142) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (* 0 (pow x 18)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 256.0) (+ (* 0 0) (* 0 (- 3584.0)))))) into 65536.0
* [misc]backup-simplify:  Simplify (+ (* 12845056.0 0) (+ (* 0 0) (+ (* (- 1835008.0) (* 256.0 (pow x 18))) (+ (* 0 0) (* 65536.0 (* -3584.0 (pow x 18))))))) into (- (* 704643072.0 (pow x 18)))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -46036680704.0 (pow x 18)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* 9865003008.0 (pow x 18))) 1)) (pow (* -46036680704.0 (pow x 18)) 3))) (* -3 (/ (* 1 (pow (* 2 (* 9865003008.0 (pow x 18))) 2)) (pow (* -46036680704.0 (pow x 18)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -46036680704.0 (pow x 18)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 704643072.0 (pow x 18)))) 1)) (pow (* -46036680704.0 (pow x 18)) 1)))) 24) into (* 1/24 (- 0.3673469387755102 (* 1.1678194121741886e+21 (/ 1 (pow -46036680704.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/24 (- 0.3673469387755102 (* 1.1678194121741886e+21 (/ 1 (pow -46036680704.0 2)))))) (+ (* 0 0) (+ (* 0 -0.21428571428571427) (+ (* 0 0) (* 0 (log (* -46036680704.0 (pow x 18)))))))) into (- 0.00510204081632653 (* 1.6219714057974841e+19 (/ 1 (pow -46036680704.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* -46036680704.0 (pow x 18))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.07142857142857142) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.07142857142857142) 2) 2)) (* (/ (pow (- 0.00510204081632653 (* 1.6219714057974841e+19 (/ 1 (pow -46036680704.0 2)))) 1) 1)))) into (* (* (- 0.007653061224489796 (* 1.6219714057974841e+19 (/ 1 (pow -46036680704.0 2)))) (pow x 6)) (pow -46036680704.0 1/3))
* [misc]backup-simplify:  Simplify (* (* (- 0.007653061224489796 (* 1.6219714057974841e+19 (/ 1 (pow -46036680704.0 2)))) (pow x 6)) (pow -46036680704.0 1/3)) into (* (* (- 0.007653061224489796 (* 1.6219714057974841e+19 (/ 1 (pow -46036680704.0 2)))) (pow x 6)) (pow -46036680704.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* (* (* (- 0.007653061224489796 (* 1.6219714057974841e+19 (/ 1 (pow -46036680704.0 2)))) (pow x 6)) (pow -46036680704.0 1/3)) (pow x 4)) (+ (* (* -0.07142857142857142 (* (pow -46036680704.0 1/3) (pow x 6))) (pow x 2)) (pow (* -46036680704.0 (pow x 18)) 1/3))) into (- (+ (* 0.007653061224489796 (* (pow -46036680704.0 1/3) (pow x 10))) (pow (* -46036680704.0 (pow x 18)) 1/3)) (+ (* 0.07142857142857142 (* (pow -46036680704.0 1/3) (pow x 8))) (* 1.6219714057974841e+19 (* (pow (/ 1 (pow -46036680704.0 5)) 1/3) (pow x 10)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 256.0) into 65536.0
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* (pow (pow x -3) 3) (pow (pow x -3) 3)) into (/ 1 (pow x 18))
* [misc]backup-simplify:  Simplify (* 256.0 (/ 1 (pow x 18))) into (/ 256.0 (pow x 18))
* [misc]backup-simplify:  Simplify (* 65536.0 (/ 256.0 (pow x 18))) into (/ 16777216.0 (pow x 18))
* [misc]backup-simplify:  Simplify (log (/ 16777216.0 (pow x 18))) into (log (/ 16777216.0 (pow x 18)))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 16777216.0 (pow x 18)))) into (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))) into (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) into (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 256.0) into 65536.0
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* (pow (pow x -3) 3) (pow (pow x -3) 3)) into (/ 1 (pow x 18))
* [misc]backup-simplify:  Simplify (* 256.0 (/ 1 (pow x 18))) into (/ 256.0 (pow x 18))
* [misc]backup-simplify:  Simplify (* 65536.0 (/ 256.0 (pow x 18))) into (/ 16777216.0 (pow x 18))
* [misc]backup-simplify:  Simplify (log (/ 16777216.0 (pow x 18))) into (log (/ 16777216.0 (pow x 18)))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 16777216.0 (pow x 18)))) into (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))) into (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) into (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) into (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (* 0 (pow (pow x -3) 3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 (/ 1 (pow x 18)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (* 0 (/ 256.0 (pow x 18)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 16777216.0 (pow x 18)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 16777216.0 (pow x 18)))) into (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* (- 3584.0) (/ 1 (pow x 18))))) into (- (* 3584.0 (/ 1 (pow x 18))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (+ (* 256.0 (- 3584.0)) (+ (* 0 0) (* (- 3584.0) 256.0))) into (- 1835008.0)
* [misc]backup-simplify:  Simplify (+ (* 65536.0 (- (* 3584.0 (/ 1 (pow x 18))))) (+ (* 0 0) (* (- 1835008.0) (/ 256.0 (pow x 18))))) into (- (* 704643072.0 (/ 1 (pow x 18))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 16777216.0 (pow x 18)) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 704643072.0 (/ 1 (pow x 18))))) 1)) (pow (/ 16777216.0 (pow x 18)) 1)))) 2) into -42.0
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 16777216.0 (pow x 18)))) into (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -42.0) (+ (* 0 0) (* 0 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))))) into (- 14.0)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 14.0) 1) 1)))) into (* -14.0 (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (* -14.0 (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))))) into (* -14.0 (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) 0) (* 0 (/ 1 (pow x 18)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 (- 3584.0)) (+ (* (- 3584.0) 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (+ (* 0 (- (* 3584.0 (/ 1 (pow x 18))))) (+ (* (- 1835008.0) 0) (* 0 (/ 256.0 (pow x 18)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 16777216.0 (pow x 18)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 704643072.0 (/ 1 (pow x 18))))) 1)) (pow (/ 16777216.0 (pow x 18)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 16777216.0 (pow x 18)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 16777216.0 (pow x 18)))) into (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -42.0) (+ (* 0 0) (* 0 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 14.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 18))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) (- 3584.0)) (+ (* 0 0) (* 0 256.0))))) into 12845056.0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (+ (* 0 0) (+ (* (- 1835008.0) (- (* 3584.0 (/ 1 (pow x 18))))) (+ (* 0 0) (* 12845056.0 (/ 256.0 (pow x 18))))))) into (* 9865003008.0 (/ 1 (pow x 18)))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 16777216.0 (pow x 18)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 704643072.0 (/ 1 (pow x 18))))) 1)) (pow (/ 16777216.0 (pow x 18)) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 704643072.0 (/ 1 (pow x 18))))) 2)) (pow (/ 16777216.0 (pow x 18)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 16777216.0 (pow x 18)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* 9865003008.0 (/ 1 (pow x 18)))) 1)) (pow (/ 16777216.0 (pow x 18)) 1)))) 24) into (* 1/24 (- 14112.0 (* 5.958262307011166e+18 (/ 1 (pow 16777216.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 16777216.0 (pow x 18)))) into (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/24 (- 14112.0 (* 5.958262307011166e+18 (/ 1 (pow 16777216.0 2)))))) (+ (* 0 0) (+ (* 0 -42.0) (+ (* 0 0) (* 0 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x)))))))) into (- 196.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 14.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 14.0) 2) 2)) (* (/ (pow (- 196.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) (- 294.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) (- 294.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2))))) into (* (exp (* 1/3 (- (log (/ 16777216.0 (pow x 18))) (* 6 (log x))))) (- 294.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (/ 16777216.0 (pow (/ 1 x) 18))) (* 6 (log (/ 1 x)))))) (- 294.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2))))) (pow (/ 1 x) 4)) (+ (* (* -14.0 (exp (* 1/3 (- (log (/ 16777216.0 (pow (/ 1 x) 18))) (* 6 (log (/ 1 x))))))) (pow (/ 1 x) 2)) (exp (* 1/3 (- (log (/ 16777216.0 (pow (/ 1 x) 18))) (* 6 (log (/ 1 x)))))))) into (- (+ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (* 294.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (pow x 4)))) (+ (* 14.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (pow x 2))) (* 8.275364315293286e+16 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (* (pow 16777216.0 2) (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 256.0) into 65536.0
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (exp (* 9 (- (log -1) (log x))))) into (pow (exp (* 9 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) into (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 65536.0 (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) into (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) into (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) into (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))) into (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))) into (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 256.0) into 65536.0
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (exp (* 9 (- (log -1) (log x))))) into (pow (exp (* 9 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) into (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 65536.0 (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) into (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) into (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) into (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))) into (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))) into (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))) into (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (* 0 (exp (* 9 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (* 0 (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) into (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* (- 3584.0) (pow (exp (* 9 (- (log -1) (log x)))) 2)))) into (- (* 3584.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (+ (* 256.0 (- 3584.0)) (+ (* 0 0) (* (- 3584.0) 256.0))) into (- 1835008.0)
* [misc]backup-simplify:  Simplify (+ (* 65536.0 (- (* 3584.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) (+ (* 0 0) (* (- 1835008.0) (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))))) into (- (* 704643072.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 704643072.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) 1)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 1)))) 2) into -42.0
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) into (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -42.0) (+ (* 0 0) (* 0 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))))) into (- 14.0)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 14.0) 1) 1)))) into (* -14.0 (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (* -14.0 (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))))) into (* -14.0 (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) 0) (* 0 (pow (exp (* 9 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 (- 3584.0)) (+ (* (- 3584.0) 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (+ (* 0 (- (* 3584.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) (+ (* (- 1835008.0) 0) (* 0 (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 704643072.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) 1)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) into (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -42.0) (+ (* 0 0) (* 0 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 14.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) 0) (+ (* 0 0) (* 0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) (- 3584.0)) (+ (* 0 0) (* 0 256.0))))) into 12845056.0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (+ (* 0 0) (+ (* (- 1835008.0) (- (* 3584.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) (+ (* 0 0) (* 12845056.0 (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))))))) into (* 9865003008.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 704643072.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) 1)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 704643072.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) 2)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* 9865003008.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) 1)) (pow (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) 1)))) 24) into (* 1/24 (- 14112.0 (* 5.958262307011166e+18 (/ 1 (pow 16777216.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) into (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/24 (- 14112.0 (* 5.958262307011166e+18 (/ 1 (pow 16777216.0 2)))))) (+ (* 0 0) (+ (* 0 -42.0) (+ (* 0 0) (* 0 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))))))) into (- 196.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 14.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 14.0) 2) 2)) (* (/ (pow (- 196.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2)))) 1) 1)))) into (* (- 294.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2)))) (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 294.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2)))) (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x)))))) into (* (- 294.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2)))) (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 294.0 (* 8.275364315293286e+16 (/ 1 (pow 16777216.0 2)))) (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) 2))) (* 6 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 4)) (+ (* (* -14.0 (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) 2))) (* 6 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) 2))) (* 6 (log (/ 1 (- x))))))))) into (- (+ (* 294.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x))))))) (+ (* 8.275364315293286e+16 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x)))))) (* (pow 16777216.0 2) (pow x 4)))) (* 14.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x)))))) (pow x 2)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow x 3) 3) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* (- 3584.0) (- 3584.0)) into 12845056.0
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 9)) into (pow x 18)
* [misc]backup-simplify:  Simplify (* (- 3584.0) (pow x 18)) into (* -3584.0 (pow x 18))
* [misc]backup-simplify:  Simplify (* 12845056.0 (* -3584.0 (pow x 18))) into (* -46036680704.0 (pow x 18))
* [misc]backup-simplify:  Simplify (* -46036680704.0 (pow x 18)) into (* -46036680704.0 (pow x 18))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (* 0 (pow x 9))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 1) (* 0 0)) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 0 256.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (* 0 (pow x 18))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 1) (* 0 0)) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 0 256.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 1) (* 0 0)) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 0 256.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (* 0 (- 3584.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 12845056.0 0) (* 0 (* -3584.0 (pow x 18)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (* 0 (pow x 9)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 256.0) (* 0 0))) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (* 256.0 (pow x 18)))) into (* 256.0 (pow x 18))
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 256.0) (* 0 0))) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 256.0) (* 0 0))) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 256.0) (+ (* 0 0) (* 256.0 (- 3584.0)))) into (- 1835008.0)
* [misc]backup-simplify:  Simplify (+ (* 12845056.0 (* 256.0 (pow x 18))) (+ (* 0 0) (* (- 1835008.0) (* -3584.0 (pow x 18))))) into (* 9865003008.0 (pow x 18))
* [misc]backup-simplify:  Simplify (* 9865003008.0 (pow x 18)) into (* 9865003008.0 (pow x 18))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 256.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (* 0 (pow x 18))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 256.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 256.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 256.0) (+ (* 256.0 0) (* 0 (- 3584.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 12845056.0 0) (+ (* 0 (* 256.0 (pow x 18))) (+ (* (- 1835008.0) 0) (* 0 (* -3584.0 (pow x 18)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (* 0 (pow x 18)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 256.0) (+ (* 0 0) (* 0 (- 3584.0)))))) into 65536.0
* [misc]backup-simplify:  Simplify (+ (* 12845056.0 0) (+ (* 0 0) (+ (* (- 1835008.0) (* 256.0 (pow x 18))) (+ (* 0 0) (* 65536.0 (* -3584.0 (pow x 18))))))) into (- (* 704643072.0 (pow x 18)))
* [misc]backup-simplify:  Simplify (- (* 704643072.0 (pow x 18))) into (- (* 704643072.0 (pow x 18)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 704643072.0 (pow x 18))) (pow x 4)) (+ (* (* 9865003008.0 (pow x 18)) (pow x 2)) (* -46036680704.0 (pow x 18)))) into (- (* 9865003008.0 (pow x 20)) (+ (* 704643072.0 (pow x 22)) (* 46036680704.0 (pow x 18))))
* [misc]approximate:  Taking taylor expansion of (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 x) 3) 3) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 256.0) into 65536.0
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* (pow (pow x -3) 3) (pow (pow x -3) 3)) into (/ 1 (pow x 18))
* [misc]backup-simplify:  Simplify (* 256.0 (/ 1 (pow x 18))) into (/ 256.0 (pow x 18))
* [misc]backup-simplify:  Simplify (* 65536.0 (/ 256.0 (pow x 18))) into (/ 16777216.0 (pow x 18))
* [misc]backup-simplify:  Simplify (/ 16777216.0 (pow x 18)) into (/ 16777216.0 (pow x 18))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (* 0 (pow (pow x -3) 3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 (/ 1 (pow x 18)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (* 0 (/ 256.0 (pow x 18)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* (- 3584.0) (/ 1 (pow x 18))))) into (- (* 3584.0 (/ 1 (pow x 18))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (+ (* 256.0 (- 3584.0)) (+ (* 0 0) (* (- 3584.0) 256.0))) into (- 1835008.0)
* [misc]backup-simplify:  Simplify (+ (* 65536.0 (- (* 3584.0 (/ 1 (pow x 18))))) (+ (* 0 0) (* (- 1835008.0) (/ 256.0 (pow x 18))))) into (- (* 704643072.0 (/ 1 (pow x 18))))
* [misc]backup-simplify:  Simplify (- (* 704643072.0 (/ 1 (pow x 18)))) into (- (* 704643072.0 (/ 1 (pow x 18))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) 0) (* 0 (/ 1 (pow x 18)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 (- 3584.0)) (+ (* (- 3584.0) 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (+ (* 0 (- (* 3584.0 (/ 1 (pow x 18))))) (+ (* (- 1835008.0) 0) (* 0 (/ 256.0 (pow x 18)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow x -3) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 18))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) (- 3584.0)) (+ (* 0 0) (* 0 256.0))))) into 12845056.0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (+ (* 0 0) (+ (* (- 1835008.0) (- (* 3584.0 (/ 1 (pow x 18))))) (+ (* 0 0) (* 12845056.0 (/ 256.0 (pow x 18))))))) into (* 9865003008.0 (/ 1 (pow x 18)))
* [misc]backup-simplify:  Simplify (* 9865003008.0 (/ 1 (pow x 18))) into (/ 9865003008.0 (pow x 18))
* [misc]backup-simplify:  Simplify (+ (* (/ 9865003008.0 (pow (/ 1 x) 18)) (pow (/ 1 (/ 1 x)) 2)) (+ (* (- (* 704643072.0 (/ 1 (pow (/ 1 x) 18)))) (pow (/ 1 (/ 1 x)) 4)) (* (/ 16777216.0 (pow (/ 1 x) 18)) (pow (/ 1 (/ 1 x)) 6)))) into (- (+ (* 16777216.0 (pow x 24)) (* 9865003008.0 (pow x 20))) (* 704643072.0 (pow x 22)))
* [misc]approximate:  Taking taylor expansion of (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (/ 1 (- x)) 3) 3) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 256.0) into 65536.0
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (exp (* 9 (- (log -1) (log x))))) into (pow (exp (* 9 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) into (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 65536.0 (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) into (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) into (* 16777216.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (* 0 (exp (* 9 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -256.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (* 0 (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* (- 3584.0) (pow (exp (* 9 (- (log -1) (log x)))) 2)))) into (- (* 3584.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -256.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (+ (* 256.0 (- 3584.0)) (+ (* 0 0) (* (- 3584.0) 256.0))) into (- 1835008.0)
* [misc]backup-simplify:  Simplify (+ (* 65536.0 (- (* 3584.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) (+ (* 0 0) (* (- 1835008.0) (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))))) into (- (* 704643072.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 704643072.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))) into (- (* 704643072.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) 0) (* 0 (pow (exp (* 9 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 (- 3584.0)) (+ (* (- 3584.0) 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (+ (* 0 (- (* 3584.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) (+ (* (- 1835008.0) 0) (* 0 (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 9 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) 0) (+ (* 0 0) (* 0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -256.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* (- 3584.0) (- 3584.0)) (+ (* 0 0) (* 0 256.0))))) into 12845056.0
* [misc]backup-simplify:  Simplify (+ (* 65536.0 0) (+ (* 0 0) (+ (* (- 1835008.0) (- (* 3584.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)))) (+ (* 0 0) (* 12845056.0 (* 256.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))))))) into (* 9865003008.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 9865003008.0 (pow (exp (* 9 (- (log -1) (log x)))) 2)) into (* 9865003008.0 (pow (exp (* 9 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ (* (* 9865003008.0 (pow (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) 2)) (pow (/ 1 (/ 1 (- x))) 2)) (+ (* (- (* 704643072.0 (pow (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) 2))) (pow (/ 1 (/ 1 (- x))) 4)) (* (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) 2)) (pow (/ 1 (/ 1 (- x))) 6)))) into (- (+ (* 16777216.0 (* (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2) (pow x 6))) (* 9865003008.0 (* (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2) (pow x 2)))) (* 704643072.0 (* (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2) (pow x 4))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* x (* x -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* x (* x -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* x (* x -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* 0 -13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -13440.0)) into (- 13440.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 13440.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 13440.0)) (* 0 0))) into (- 13440.0)
* [misc]backup-simplify:  Simplify (- 13440.0) into (- 13440.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 13440.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 13440.0) (pow x 2)) into (* -13440.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* 1 -13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* 1 -13440.0) into -13440.0
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -13440.0 (pow (/ 1 (/ 1 x)) 2)) into (* -13440.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* -1 -13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -13440.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* -13440.0 (pow x 2))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 2 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (pow x 3) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]backup-simplify:  Simplify (pow x 9) into (pow x 9)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 9) into (pow x 9)
* [misc]approximate:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (pow (pow x -3) 3) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x -3) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x -3) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x -3) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x -3) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x -3) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x -3) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x -3) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -3) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x -3) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x -3) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x -3) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (/ 1 x) -3) 3) into (pow (pow (/ 1 x) -3) 3)
* [misc]approximate:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) into (exp (* 9 (- (log -1) (log (/ -1 x)))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (pow (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) 1/3)))>
* * * * [misc]progress:  [ 2 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (pow (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) 1)))>
* * * * [misc]progress:  [ 3 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (log (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* [exit]simplify:  Simplified to (log (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* * * * [misc]progress:  [ 4 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* * * * [misc]progress:  [ 5 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (cbrt (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (cbrt (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* [enter]simplify:  Simplifying (cbrt (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (116 enodes)
* * [misc]simplify:  iters left: 2 (267 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* x x) 256.0) -3584.0) (+ (* (* x x) 256.0) -3584.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* x x) 256.0) -3584.0) (+ (* (* x x) 256.0) -3584.0)))
* [enter]simplify:  Simplifying (cbrt (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (* (pow x 3) (pow x 3)) 3) (+ (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow (* (pow x 3) (pow x 3)) 3) (+ (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 6 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))))
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0))))
* [exit]simplify:  Simplified to (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0))))
* * * * [misc]progress:  [ 7 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (225 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))))
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (- (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x))))) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x))))) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x))))))
* * * * [misc]progress:  [ 8 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ -3584.0 (* x (* x 256.0)))) (* (* (- (* x (* x 256.0)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ -3584.0 (* x (* x 256.0)))) (* (* (- (* x (* x 256.0)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))))
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0))))) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0))))) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0))))))
* * * * [misc]progress:  [ 9 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))))
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)) (- (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (447 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)) (+ (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0))) (* (* x (* x 256.0)) (* x (* x 256.0))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)) (+ (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0))) (* (* x (* x 256.0)) (* x (* x 256.0))))))
* * * * [misc]progress:  [ 10 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (244 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))))
* [enter]simplify:  Simplifying (cbrt (* (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (206 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* 256.0 (* x x)) -3584.0) (* (+ (- (* -3584.0 -3584.0) (* (* 256.0 -3584.0) (* x x))) (* (* 256.0 (* x x)) (* 256.0 (* x x)))) (+ (- (* -3584.0 -3584.0) (* (* 256.0 -3584.0) (* x x))) (* (* 256.0 (* x x)) (* 256.0 (* x x)))))))
* [exit]simplify:  Simplified to (cbrt (* (- (* 256.0 (* x x)) -3584.0) (* (+ (- (* -3584.0 -3584.0) (* (* 256.0 -3584.0) (* x x))) (* (* 256.0 (* x x)) (* 256.0 (* x x)))) (+ (- (* -3584.0 -3584.0) (* (* 256.0 -3584.0) (* x x))) (* (* 256.0 (* x x)) (* 256.0 (* x x)))))))
* * * * [misc]progress:  [ 11 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (248 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))))
* [enter]simplify:  Simplifying (cbrt (* (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (- (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -3584.0 -3584.0) (* (* x 256.0) (* x -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -3584.0 -3584.0) (* (* x 256.0) (* x -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 12 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3))) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3))) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))))
* [enter]simplify:  Simplifying (cbrt (* (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -3584.0 -3584.0) (* (* x x) (* 256.0 -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -3584.0 -3584.0) (* (* x x) (* 256.0 -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 13 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (* (- (* x (* x 256.0)) -3584.0) (+ -3584.0 (* x (* x 256.0))))) (* (* (- (* x (* x 256.0)) -3584.0) (+ -3584.0 (* x (* x 256.0)))) (* (- (* x (* x 256.0)) -3584.0) (+ -3584.0 (* x (* x 256.0)))))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (* (- (* x (* x 256.0)) -3584.0) (+ -3584.0 (* x (* x 256.0))))) (* (* (- (* x (* x 256.0)) -3584.0) (+ -3584.0 (* x (* x 256.0)))) (* (- (* x (* x 256.0)) -3584.0) (+ -3584.0 (* x (* x 256.0)))))))
* [enter]simplify:  Simplifying (cbrt (* (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)) (- (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (467 enodes)
* [exit]simplify:  Simplified to (- (* x (* x 256.0)) -3584.0)
* [exit]simplify:  Simplified to (- (* x (* x 256.0)) -3584.0)
* * * * [misc]progress:  [ 14 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3)) (* (+ (* x (* x 256.0)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3)) (* (+ (* x (* x 256.0)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x)))) (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x)))) (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x))))))
* * * * [misc]progress:  [ 15 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (244 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (+ (* 256.0 (* x x)) -3584.0)) (+ (pow -3584.0 3) (pow (* 256.0 (* x x)) 3))) (* (* (pow (pow x 3) 3) (+ (* 256.0 (* x x)) -3584.0)) (- (* 256.0 (* x x)) -3584.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (+ (* 256.0 (* x x)) -3584.0)) (+ (pow -3584.0 3) (pow (* 256.0 (* x x)) 3))) (* (* (pow (pow x 3) 3) (+ (* 256.0 (* x x)) -3584.0)) (- (* 256.0 (* x x)) -3584.0))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0))))))
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0))))))
* * * * [misc]progress:  [ 16 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* x (* x 256.0)) -3584.0) (* (+ (* x (* x 256.0)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* x (* x 256.0)) -3584.0) (* (+ (* x (* x 256.0)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (* x (* x 256.0)) -3584.0))))
* [enter]simplify:  Simplifying (cbrt (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -3584.0 -3584.0) (* (* x 256.0) (* x -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -3584.0 -3584.0) (* (* x 256.0) (* x -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 17 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))))
* [enter]simplify:  Simplifying (cbrt (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (153 enodes)
* * [misc]simplify:  iters left: 1 (362 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 18 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ -3584.0 (* x (* x 256.0)))) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ -3584.0 (* x (* x 256.0)))) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x)))) (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x)))) (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x))))))
* * * * [misc]progress:  [ 19 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (232 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow (* (* x x) 256.0) 3) (pow -3584.0 3))) (* (* (+ -3584.0 (* (* x x) 256.0)) (+ -3584.0 (* (* x x) 256.0))) (- (* (* x x) 256.0) -3584.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow (* (* x x) 256.0) 3) (pow -3584.0 3))) (* (* (+ -3584.0 (* (* x x) 256.0)) (+ -3584.0 (* (* x x) 256.0))) (- (* (* x x) 256.0) -3584.0))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0))))))
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0))))))
* * * * [misc]progress:  [ 20 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (233 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow x 3) 3) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (* (* (pow (pow x 3) 3) (+ -3584.0 (* x (* x 256.0)))) (* (- (* x (* x 256.0)) -3584.0) (+ -3584.0 (* x (* x 256.0)))))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow x 3) 3) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (* (* (pow (pow x 3) 3) (+ -3584.0 (* x (* x 256.0)))) (* (- (* x (* x 256.0)) -3584.0) (+ -3584.0 (* x (* x 256.0)))))))
* [enter]simplify:  Simplifying (cbrt (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -3584.0 -3584.0) (* (* x 256.0) (* x -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -3584.0 -3584.0) (* (* x 256.0) (* x -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 21 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* x (* x 256.0)) -3584.0) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0))))) (* (- (* x (* x 256.0)) -3584.0) (* (+ -3584.0 (* x (* x 256.0))) (+ -3584.0 (* x (* x 256.0)))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* x (* x 256.0)) -3584.0) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0))))) (* (- (* x (* x 256.0)) -3584.0) (* (+ -3584.0 (* x (* x 256.0))) (+ -3584.0 (* x (* x 256.0)))))))
* [enter]simplify:  Simplifying (cbrt (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (153 enodes)
* * [misc]simplify:  iters left: 1 (362 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 22 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (162 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x)))))
* * * * [misc]progress:  [ 23 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (- (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* x (* x 256.0)) -3584.0) (* (- (* x (* x 256.0)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* x (* x 256.0)) -3584.0) (* (- (* x (* x 256.0)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* [enter]simplify:  Simplifying (cbrt (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* x (* x 256.0)) -3584.0))
* [exit]simplify:  Simplified to (cbrt (- (* x (* x 256.0)) -3584.0))
* * * * [misc]progress:  [ 24 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0)))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0)))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x)))) (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x)))) (+ (* (* 256.0 (* x x)) (* 256.0 (* x x))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x))))))
* * * * [misc]progress:  [ 25 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* (* x x) 256.0) -3584.0) (+ -3584.0 (* (* x x) 256.0))) (* (* (+ -3584.0 (* (* x x) 256.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (+ (pow (* (* x x) 256.0) 3) (pow -3584.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* (* x x) 256.0) -3584.0) (+ -3584.0 (* (* x x) 256.0))) (* (* (+ -3584.0 (* (* x x) 256.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (+ (pow (* (* x x) 256.0) 3) (pow -3584.0 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0))))))
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0))))))
* * * * [misc]progress:  [ 26 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (247 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ -3584.0 (* 256.0 (* x x))) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (- (* 256.0 (* x x)) -3584.0) (+ -3584.0 (* 256.0 (* x x))))) (+ (pow (* 256.0 (* x x)) 3) (pow -3584.0 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ -3584.0 (* 256.0 (* x x))) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (- (* 256.0 (* x x)) -3584.0) (+ -3584.0 (* 256.0 (* x x))))) (+ (pow (* 256.0 (* x x)) 3) (pow -3584.0 3))))
* [enter]simplify:  Simplifying (cbrt (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -3584.0 -3584.0) (* (* x 256.0) (* x -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -3584.0 -3584.0) (* (* x 256.0) (* x -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 27 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0)) (* (- (* x (* x 256.0)) -3584.0) (* (+ -3584.0 (* x (* x 256.0))) (+ -3584.0 (* x (* x 256.0)))))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0)) (* (- (* x (* x 256.0)) -3584.0) (* (+ -3584.0 (* x (* x 256.0))) (+ -3584.0 (* x (* x 256.0)))))))
* [enter]simplify:  Simplifying (cbrt (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (153 enodes)
* * [misc]simplify:  iters left: 1 (362 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (cbrt (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 28 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (162 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x)))))
* * * * [misc]progress:  [ 29 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (- (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3))) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))) (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3))) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))) (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* x (* x 256.0)) -3584.0))
* [exit]simplify:  Simplified to (cbrt (- (* x (* x 256.0)) -3584.0))
* * * * [misc]progress:  [ 30 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (200 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (162 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x)))))
* * * * [misc]progress:  [ 31 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (- (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3))) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))) (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3))) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))) (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* x (* x 256.0)) -3584.0))
* [exit]simplify:  Simplified to (cbrt (- (* x (* x 256.0)) -3584.0))
* * * * [misc]progress:  [ 32 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (cbrt (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))) (cbrt (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))) (cbrt (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))) (cbrt (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))) (cbrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))) (cbrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* * * * [misc]progress:  [ 33 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 34 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (sqrt (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))) (sqrt (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* * * * [misc]progress:  [ 35 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* 1 (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))))>
* * * * [misc]progress:  [ 36 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (pow (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) 1))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 37 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (pow (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) 1))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 38 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (pow (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) 1))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 39 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (pow (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) 1))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 40 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (pow (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) 1))))>
* * * * [misc]progress:  [ 41 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (* (log x) 3) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (* (log x) 3) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (85 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (* 3 3) (+ (log x) (log x)))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (* 3 3) (+ (log x) (log x)))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 42 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (237 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 43 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (237 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 44 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* (* x x) 256.0) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* (* x x) 256.0) -3584.0))))
* * * * [misc]progress:  [ 45 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (116 enodes)
* * [misc]simplify:  iters left: 2 (249 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (* (+ (log x) (log x)) (* 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (* (+ (log x) (log x)) (* 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 46 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (260 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (+ 3 3) (* 3 (log x)))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (+ 3 3) (* 3 (log x)))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 47 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (260 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (+ 3 3) (* 3 (log x)))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (+ 3 3) (* 3 (log x)))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 48 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (217 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) 3) (log x)) (log (+ (* (* x x) 256.0) -3584.0))) (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) 3) (log x)) (log (+ (* (* x x) 256.0) -3584.0))) (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))))
* * * * [misc]progress:  [ 49 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (116 enodes)
* * [misc]simplify:  iters left: 2 (249 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (* (+ (log x) (log x)) (* 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (* (+ (log x) (log x)) (* 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 50 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (260 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (+ 3 3) (* 3 (log x)))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (+ 3 3) (* 3 (log x)))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 51 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (260 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (+ 3 3) (* 3 (log x)))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (+ 3 3) (* 3 (log x)))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 52 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (217 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) 3) (log x)) (log (+ (* (* x x) 256.0) -3584.0))) (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) 3) (log x)) (log (+ (* (* x x) 256.0) -3584.0))) (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))))
* * * * [misc]progress:  [ 53 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (220 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))) (+ (* (* 3 (log x)) (+ 3 3)) (log (+ (* (* x x) 256.0) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))) (+ (* (* 3 (log x)) (+ 3 3)) (log (+ (* (* x x) 256.0) -3584.0))))
* * * * [misc]progress:  [ 54 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) 3) (log (+ (* (* x x) 256.0) -3584.0))) (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) 3) (log (+ (* (* x x) 256.0) -3584.0))) (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))))
* * * * [misc]progress:  [ 55 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) 3) (log (+ (* (* x x) 256.0) -3584.0))) (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) 3) (log (+ (* (* x x) 256.0) -3584.0))) (+ (log (+ (* (* x x) 256.0) -3584.0)) (log (+ (* (* x x) 256.0) -3584.0))))
* * * * [misc]progress:  [ 56 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (204 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (+ 3 3) (* (log x) 3))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (+ 3 3) (* (log x) 3))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 57 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (251 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (* 3 (log x)) (+ 3 3))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (* (* 3 (log x)) (+ 3 3))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 58 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (log (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (+ (* x (* 256.0 x)) -3584.0))) (log (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (361 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 59 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (* (log x) 3) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (* (log x) 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (189 enodes)
* * [misc]simplify:  iters left: 2 (342 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (+ 3 3) (* 3 (log x))) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (+ 3 3) (* 3 (log x))) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 60 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 61 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 62 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (* (log x) 3) 3) (log (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (340 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* (* x x) 256.0) -3584.0) (+ (* (* x x) 256.0) -3584.0))) (+ (* (* 3 3) (log (* x x))) (log (+ (* (* x x) 256.0) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* (* x x) 256.0) -3584.0) (+ (* (* x x) 256.0) -3584.0))) (+ (* (* 3 3) (log (* x x))) (log (+ (* (* x x) 256.0) -3584.0))))
* * * * [misc]progress:  [ 63 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 64 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (213 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 65 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (213 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 66 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (317 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 67 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (* (log x) 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 68 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (213 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 69 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (213 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 70 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (* (log (pow x 3)) 3) (log (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (317 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (* (log x) 3) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 71 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (* (log x) 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (127 enodes)
* * [misc]simplify:  iters left: 3 (346 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 72 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (318 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 73 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (* (log (pow x 3)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (318 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 74 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (+ (log (pow (pow x 3) 3)) (log (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (322 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (+ (* (log x) (* 3 3)) (* (log x) (* 3 3))) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 75 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (+ (log (+ (* x (* 256.0 x)) -3584.0)) (log (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (+ 3 3) (* (log x) 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (log (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) (+ (* (+ 3 3) (* (log x) 3)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 76 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (log (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (+ (log (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (log (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (474 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 (log x)) (+ 3 3)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 77 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (exp (log (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (log (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (+ (* 3 (log (pow x 3))) (* 3 (log (pow x 3))))))
* [exit]simplify:  Simplified to (+ (+ (log (+ (* x (* x 256.0)) -3584.0)) (log (+ (* x (* x 256.0)) -3584.0))) (+ (log (+ (* x (* x 256.0)) -3584.0)) (+ (* 3 (log (pow x 3))) (* 3 (log (pow x 3))))))
* * * * [misc]progress:  [ 78 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (log (exp (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (exp (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (exp (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (exp (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 79 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (cbrt (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (327 enodes)
* [exit]simplify:  Simplified to (* (* (pow (+ (* x (* x 256.0)) -3584.0) (+ 3 1)) (pow (+ (* x (* x 256.0)) -3584.0) (+ 3 1))) (* (* (pow (pow (pow x 3) 3) 3) (+ (* x (* x 256.0)) -3584.0)) (pow (pow (pow x 3) 3) 3)))
* [exit]simplify:  Simplified to (* (* (pow (+ (* x (* x 256.0)) -3584.0) (+ 3 1)) (pow (+ (* x (* x 256.0)) -3584.0) (+ 3 1))) (* (* (pow (pow (pow x 3) 3) 3) (+ (* x (* x 256.0)) -3584.0)) (pow (pow (pow x 3) 3) 3)))
* * * * [misc]progress:  [ 80 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (cbrt (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (337 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* x (* x 256.0)) -3584.0) (pow (pow (pow x 3) 3) 3)) (pow (pow (pow x 3) 3) 3)) (* (pow (+ (* x (* x 256.0)) -3584.0) (+ 3 1)) (pow (+ (* x (* x 256.0)) -3584.0) (+ 3 1))))
* [exit]simplify:  Simplified to (* (* (* (+ (* x (* x 256.0)) -3584.0) (pow (pow (pow x 3) 3) 3)) (pow (pow (pow x 3) 3) 3)) (* (pow (+ (* x (* x 256.0)) -3584.0) (+ 3 1)) (pow (+ (* x (* x 256.0)) -3584.0) (+ 3 1))))
* * * * [misc]progress:  [ 81 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (cbrt (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (314 enodes)
* [exit]simplify:  Simplified to (* (pow (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)) 3) (pow (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) 3))
* [exit]simplify:  Simplified to (* (pow (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)) 3) (pow (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) 3))
* * * * [misc]progress:  [ 82 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (cbrt (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (349 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow (pow x 3) 3) 3) (* (+ (* x (* x 256.0)) -3584.0) (pow (pow (pow x 3) 3) 3))) (pow (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)) (+ 3 1)))
* [exit]simplify:  Simplified to (* (* (pow (pow (pow x 3) 3) 3) (* (+ (* x (* x 256.0)) -3584.0) (pow (pow (pow x 3) 3) 3))) (pow (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)) (+ 3 1)))
* * * * [misc]progress:  [ 83 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (cbrt (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (357 enodes)
* [exit]simplify:  Simplified to (* (pow (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)) (+ 3 1)) (* (* (+ (* x (* x 256.0)) -3584.0) (pow (pow (pow x 3) 3) 3)) (pow (pow (pow x 3) 3) 3)))
* [exit]simplify:  Simplified to (* (pow (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)) (+ 3 1)) (* (* (+ (* x (* x 256.0)) -3584.0) (pow (pow (pow x 3) 3) 3)) (pow (pow (pow x 3) 3) 3)))
* * * * [misc]progress:  [ 84 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (cbrt (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))) (* (* (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (284 enodes)
* [exit]simplify:  Simplified to (* (pow (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)) 3) (pow (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) 3))
* [exit]simplify:  Simplified to (* (pow (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)) 3) (pow (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) 3))
* * * * [misc]progress:  [ 85 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))) (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))) (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))))
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 86 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (cbrt (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (222 enodes)
* [exit]simplify:  Simplified to (pow (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) 3)
* [exit]simplify:  Simplified to (pow (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))) 3)
* * * * [misc]progress:  [ 87 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (sqrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))) (sqrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* [enter]simplify:  Simplifying (sqrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))))
* * * * [misc]progress:  [ 88 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [exit]simplify:  Simplified to (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [enter]simplify:  Simplifying (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* (* x x) 256.0) (* (* x x) 256.0)) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0)))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* (* x x) 256.0) (* (* x x) 256.0)) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0)))) 3)
* * * * [misc]progress:  [ 89 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (224 enodes)
* [exit]simplify:  Simplified to (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))))
* [exit]simplify:  Simplified to (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))))
* [enter]simplify:  Simplifying (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x)))) (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x))))))
* [exit]simplify:  Simplified to (* (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x)))) (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x))))))
* * * * [misc]progress:  [ 90 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0))))
* [enter]simplify:  Simplifying (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* [exit]simplify:  Simplified to (* (- (* x (* x 256.0)) -3584.0) (* (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x)))) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x))))))
* [exit]simplify:  Simplified to (* (- (* x (* x 256.0)) -3584.0) (* (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x)))) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 256.0) (* x x))))))
* * * * [misc]progress:  [ 91 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (* (* (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0))))
* [enter]simplify:  Simplifying (* (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0)) (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (444 enodes)
* [exit]simplify:  Simplified to (* (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x)))))
* [exit]simplify:  Simplified to (* (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x 256.0) (* -3584.0 x)))))
* * * * [misc]progress:  [ 92 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (243 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [enter]simplify:  Simplifying (* (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (205 enodes)
* [exit]simplify:  Simplified to (* (* (+ (- (* -3584.0 -3584.0) (* (* x x) (* 256.0 -3584.0))) (* (* 256.0 (* x x)) (* 256.0 (* x x)))) (+ (- (* -3584.0 -3584.0) (* (* x x) (* 256.0 -3584.0))) (* (* 256.0 (* x x)) (* 256.0 (* x x))))) (- (* 256.0 (* x x)) -3584.0))
* [exit]simplify:  Simplified to (* (* (+ (- (* -3584.0 -3584.0) (* (* x x) (* 256.0 -3584.0))) (* (* 256.0 (* x x)) (* 256.0 (* x x)))) (+ (- (* -3584.0 -3584.0) (* (* x x) (* 256.0 -3584.0))) (* (* 256.0 (* x x)) (* 256.0 (* x x))))) (- (* 256.0 (* x x)) -3584.0))
* * * * [misc]progress:  [ 93 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (247 enodes)
* [exit]simplify:  Simplified to (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))))
* [exit]simplify:  Simplified to (* (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))))
* [enter]simplify:  Simplifying (* (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))) (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* -3584.0 -3584.0) (* (* 256.0 -3584.0) (* x x))) (* (* 256.0 (* x x)) (* 256.0 (* x x)))) (* (- (* 256.0 (* x x)) -3584.0) (- (* 256.0 (* x x)) -3584.0)))
* [exit]simplify:  Simplified to (* (+ (- (* -3584.0 -3584.0) (* (* 256.0 -3584.0) (* x x))) (* (* 256.0 (* x x)) (* 256.0 (* x x)))) (* (- (* 256.0 (* x x)) -3584.0) (- (* 256.0 (* x x)) -3584.0)))
* * * * [misc]progress:  [ 94 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3))) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3))) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))))
* [enter]simplify:  Simplifying (* (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (127 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* -3584.0 -3584.0) (* (* x x) (* 256.0 -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (* (+ (- (* -3584.0 -3584.0) (* (* x x) (* 256.0 -3584.0))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 95 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (- (* x (* x 256.0)) -3584.0)) (+ -3584.0 (* x (* x 256.0)))) (* (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0)) (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (* (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (- (* x (* x 256.0)) -3584.0)) (+ -3584.0 (* x (* x 256.0)))) (* (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0)) (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0))))
* [enter]simplify:  Simplifying (* (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0)) (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (476 enodes)
* [exit]simplify:  Simplified to (pow (- (* x (* x 256.0)) -3584.0) 3)
* [exit]simplify:  Simplified to (pow (- (* x (* x 256.0)) -3584.0) 3)
* * * * [misc]progress:  [ 96 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (211 enodes)
* [exit]simplify:  Simplified to (* (* (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3))))
* [exit]simplify:  Simplified to (* (* (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3))))
* [enter]simplify:  Simplifying (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0)))) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0)))))
* [exit]simplify:  Simplified to (* (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0)))) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0)))))
* * * * [misc]progress:  [ 97 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (243 enodes)
* [exit]simplify:  Simplified to (* (* (+ (pow -3584.0 3) (pow (* (* x x) 256.0) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (* (+ (* (* x x) 256.0) -3584.0) (+ (* (* x x) 256.0) -3584.0)) (- (* (* x x) 256.0) -3584.0)))
* [exit]simplify:  Simplified to (* (* (+ (pow -3584.0 3) (pow (* (* x x) 256.0) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (* (+ (* (* x x) 256.0) -3584.0) (+ (* (* x x) 256.0) -3584.0)) (- (* (* x x) 256.0) -3584.0)))
* [enter]simplify:  Simplifying (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (281 enodes)
* [exit]simplify:  Simplified to (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0)))))
* [exit]simplify:  Simplified to (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0)))))
* * * * [misc]progress:  [ 98 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* 256.0 (* x x)) -3584.0) (+ (* 256.0 (* x x)) -3584.0)) (* (- (* 256.0 (* x x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (+ (pow (* 256.0 (* x x)) 3) (pow -3584.0 3)))
* [exit]simplify:  Simplified to (* (* (* (+ (* 256.0 (* x x)) -3584.0) (+ (* 256.0 (* x x)) -3584.0)) (* (- (* 256.0 (* x x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (+ (pow (* 256.0 (* x x)) 3) (pow -3584.0 3)))
* [enter]simplify:  Simplifying (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (463 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* -3584.0 -3584.0) (* (* 256.0 -3584.0) (* x x))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0))
* [exit]simplify:  Simplified to (* (+ (- (* -3584.0 -3584.0) (* (* 256.0 -3584.0) (* x x))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0))
* * * * [misc]progress:  [ 99 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0)) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0))))
* [enter]simplify:  Simplifying (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (153 enodes)
* * [misc]simplify:  iters left: 1 (357 enodes)
* [exit]simplify:  Simplified to (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0))
* [exit]simplify:  Simplified to (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0))
* * * * [misc]progress:  [ 100 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (200 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0)))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0)))) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [enter]simplify:  Simplifying (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0)))) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0)))))
* [exit]simplify:  Simplified to (* (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0)))) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* x x) (* -3584.0 256.0)))))
* * * * [misc]progress:  [ 101 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (231 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ -3584.0 (* x (* x 256.0))) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (- (* x (* x 256.0)) -3584.0)) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ -3584.0 (* x (* x 256.0)))))
* [exit]simplify:  Simplified to (* (* (* (+ -3584.0 (* x (* x 256.0))) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (- (* x (* x 256.0)) -3584.0)) (* (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)) (+ -3584.0 (* x (* x 256.0)))))
* [enter]simplify:  Simplifying (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (281 enodes)
* [exit]simplify:  Simplified to (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0)))))
* [exit]simplify:  Simplified to (* (- (* x (* x 256.0)) -3584.0) (+ (* (* x (* x 256.0)) (* x (* x 256.0))) (- (* -3584.0 -3584.0) (* (* -3584.0 x) (* x 256.0)))))
* * * * [misc]progress:  [ 102 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (232 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (* (+ -3584.0 (* 256.0 (* x x))) (- (* 256.0 (* x x)) -3584.0))) (* (+ (pow (* 256.0 (* x x)) 3) (pow -3584.0 3)) (+ -3584.0 (* 256.0 (* x x)))))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (* (+ -3584.0 (* 256.0 (* x x))) (- (* 256.0 (* x x)) -3584.0))) (* (+ (pow (* 256.0 (* x x)) 3) (pow -3584.0 3)) (+ -3584.0 (* 256.0 (* x x)))))
* [enter]simplify:  Simplifying (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (463 enodes)
* [exit]simplify:  Simplified to (* (+ (- (* -3584.0 -3584.0) (* (* 256.0 -3584.0) (* x x))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0))
* [exit]simplify:  Simplified to (* (+ (- (* -3584.0 -3584.0) (* (* 256.0 -3584.0) (* x x))) (* (* x (* x 256.0)) (* x (* x 256.0)))) (- (* x (* x 256.0)) -3584.0))
* * * * [misc]progress:  [ 103 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (202 enodes)
* [exit]simplify:  Simplified to (* (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0)) (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0)))) (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0))))
* [exit]simplify:  Simplified to (* (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0)) (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0)))) (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0))))
* [enter]simplify:  Simplifying (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (153 enodes)
* * [misc]simplify:  iters left: 1 (357 enodes)
* [exit]simplify:  Simplified to (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0))
* [exit]simplify:  Simplified to (* (- (* x (* x 256.0)) -3584.0) (- (* x (* x 256.0)) -3584.0))
* * * * [misc]progress:  [ 104 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* 1 (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))))>
* * * * [misc]progress:  [ 105 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (369 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x (* x 256.0)) -3584.0) 3)
* [exit]simplify:  Simplified to (pow (+ (* x (* x 256.0)) -3584.0) 3)
* * * * [misc]progress:  [ 106 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (+ (* x (* 256.0 x)) -3584.0) (* (+ (* x (* 256.0 x)) -3584.0) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))))>
* [enter]simplify:  Simplifying (* (+ (* x (* 256.0 x)) -3584.0) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (490 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (+ (* x (* x 256.0)) -3584.0)) (* (pow (pow x 3) 3) (+ (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (+ (* x (* x 256.0)) -3584.0)) (* (pow (pow x 3) 3) (+ (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 107 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 108 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (- (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (* (* (- (* x (* x 256.0)) -3584.0) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0))) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* [exit]simplify:  Simplified to (* (* (- (* x (* x 256.0)) -3584.0) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0))) (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0)))
* * * * [misc]progress:  [ 109 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (* (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0)))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))
* [exit]simplify:  Simplified to (* (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0)))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))
* * * * [misc]progress:  [ 110 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ -3584.0 (* x (* x 256.0))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* [exit]simplify:  Simplified to (* (* (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ -3584.0 (* x (* x 256.0))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3))))
* * * * [misc]progress:  [ 111 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (- (* x (* 256.0 x)) -3584.0) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0))))))))>
* [enter]simplify:  Simplifying (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (246 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (* (+ -3584.0 (* (* x x) 256.0)) (- (* (* x x) 256.0) -3584.0))) (* (+ (pow (* (* x x) 256.0) 3) (pow -3584.0 3)) (+ -3584.0 (* (* x x) 256.0))))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (* (+ -3584.0 (* (* x x) 256.0)) (- (* (* x x) 256.0) -3584.0))) (* (+ (pow (* (* x x) 256.0) 3) (pow -3584.0 3)) (+ -3584.0 (* (* x x) 256.0))))
* * * * [misc]progress:  [ 112 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (* (- (* x (* 256.0 x)) -3584.0) (- (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0))))))
* [exit]simplify:  Simplified to (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (* (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -3584.0 (* x (* x 256.0))))))
* * * * [misc]progress:  [ 113 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (211 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3)))
* [exit]simplify:  Simplified to (* (* (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ (pow -3584.0 3) (pow (* x (* x 256.0)) 3)))
* * * * [misc]progress:  [ 114 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (- (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (* (+ (* x (* 256.0 x)) -3584.0) (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0))) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))
* [exit]simplify:  Simplified to (* (* (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ (* x (* x 256.0)) -3584.0) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (- (* (* x (* x 256.0)) (* x (* x 256.0))) (* -3584.0 -3584.0)))
* * * * [misc]progress:  [ 115 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (+ (* (* x (* 256.0 x)) (* x (* 256.0 x))) (- (* -3584.0 -3584.0) (* (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (* x (* 256.0 x)) 3) (pow -3584.0 3)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))
* [exit]simplify:  Simplified to (* (* (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ (pow (* x (* x 256.0)) 3) (pow -3584.0 3)))
* * * * [misc]progress:  [ 116 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (/ (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))) (- (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (* (- (* (* x (* 256.0 x)) (* x (* 256.0 x))) (* -3584.0 -3584.0)) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (* (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0)) (* (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3)))))
* [exit]simplify:  Simplified to (* (* (+ -3584.0 (* x (* x 256.0))) (- (* x (* x 256.0)) -3584.0)) (* (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (+ -3584.0 (* x (* x 256.0))) (* (* (pow x 3) (pow x 3)) (pow x 3)))))
* * * * [misc]progress:  [ 117 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))))))>
* * * * [misc]progress:  [ 118 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (pow (* x (* x -13440.0)) 1)) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* * * * [misc]progress:  [ 119 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (exp (log (* x (* x -13440.0))))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* [enter]simplify:  Simplifying (log (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (log (* x (* x -13440.0)))
* * * * [misc]progress:  [ 120 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (log (exp (* x (* x -13440.0))))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* [enter]simplify:  Simplifying (exp (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* x -13440.0))
* [exit]simplify:  Simplified to (pow (exp x) (* x -13440.0))
* * * * [misc]progress:  [ 121 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0)))) (cbrt (* x (* x -13440.0))))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* [enter]simplify:  Simplifying (cbrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x -13440.0)))
* * * * [misc]progress:  [ 122 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (cbrt (* (* (* x (* x -13440.0)) (* x (* x -13440.0))) (* x (* x -13440.0))))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* [enter]simplify:  Simplifying (* (* (* x (* x -13440.0)) (* x (* x -13440.0))) (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (246 enodes)
* * [misc]simplify:  iters left: 1 (355 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x -13440.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x -13440.0)) 3)
* * * * [misc]progress:  [ 123 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (sqrt (* x (* x -13440.0))) (sqrt (* x (* x -13440.0))))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* [enter]simplify:  Simplifying (sqrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [enter]simplify:  Simplifying (sqrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* * * * [misc]progress:  [ 124 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* 1 (* x (* x -13440.0)))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* * * * [misc]progress:  [ 125 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* x x) -13440.0)) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 126 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* x -13440.0) x)) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* * * * [misc]progress:  [ 127 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (exp (* (* (log x) 3) 3))))))))>
* [enter]simplify:  Simplifying (* (* (log x) 3) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* * * * [misc]progress:  [ 128 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (exp (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (* (log (pow x 3)) 3)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* * * * [misc]progress:  [ 129 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (exp (* (log (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (* (log (pow x 3)) 3)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* [exit]simplify:  Simplified to (* (log x) (* 3 3))
* * * * [misc]progress:  [ 130 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow x (* 3 3))))))))>
* [enter]simplify:  Simplifying (* 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* 3 3)
* [exit]simplify:  Simplified to (* 3 3)
* * * * [misc]progress:  [ 131 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow (* x x) 3) (pow x 3))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 132 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3) (pow (cbrt (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (162 enodes)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [enter]simplify:  Simplifying (pow (cbrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 133 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow x 3) (pow (* x x) 3))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 134 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow (sqrt (pow x 3)) 3) (pow (sqrt (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 135 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow 1 3) (pow (pow x 3) 3))))))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow x 3) 3)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 136 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (* (pow x 3) (pow x 3)) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 137 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow (pow x 3) 3) 1)))))))>
* * * * [misc]progress:  [ 138 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (exp (log (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (log (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (41 enodes)
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* [exit]simplify:  Simplified to (* (* 3 3) (log x))
* * * * [misc]progress:  [ 139 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (log (exp (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (exp (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (exp (pow (pow x 3) 3))
* * * * [misc]progress:  [ 140 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (* (cbrt (pow (pow x 3) 3)) (cbrt (pow (pow x 3) 3))) (cbrt (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow x 3) 3)) (cbrt (pow (pow x 3) 3)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (cbrt (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 141 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (cbrt (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow x 3) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (pow x 3) 3) 3)
* * * * [misc]progress:  [ 142 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow (* x x) 3) (pow x 3))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 143 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3) (pow (cbrt (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow x 3)) (cbrt (pow x 3))) 3)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (162 enodes)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [enter]simplify:  Simplifying (pow (cbrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 144 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow x 3) (pow (* x x) 3))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 145 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow (sqrt (pow x 3)) 3) (pow (sqrt (pow x 3)) 3))))))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (pow x 3)) 3)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 146 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow 1 3) (pow (pow x 3) 3))))))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow x 3) 3)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 147 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (pow x 3) (* (pow x 3) (pow x 3)))))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 148 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (* (pow x 3) (pow x 3)) (pow x 3))))))))>
* * * * [misc]progress:  [ 149 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* (sqrt (pow (pow x 3) 3)) (sqrt (pow (pow x 3) 3)))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* [enter]simplify:  Simplifying (sqrt (pow (pow x 3) 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (sqrt (pow (pow x 3) 3))
* * * * [misc]progress:  [ 150 / 162 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (* 1 (pow (pow x 3) 3))))))))>
* * * * [misc]progress:  [ 151 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (+ (* 0.007653061224489796 (* (pow -46036680704.0 1/3) (pow x 10))) (pow (* -46036680704.0 (pow x 18)) 1/3)) (+ (* 0.07142857142857142 (* (pow -46036680704.0 1/3) (pow x 8))) (* 1.6219714057974841e+19 (* (pow (/ 1 (pow -46036680704.0 5)) 1/3) (pow x 10)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (+ (* 0.007653061224489796 (* (pow -46036680704.0 1/3) (pow x 10))) (pow (* -46036680704.0 (pow x 18)) 1/3)) (+ (* 0.07142857142857142 (* (pow -46036680704.0 1/3) (pow x 8))) (* 1.6219714057974841e+19 (* (pow (/ 1 (pow -46036680704.0 5)) 1/3) (pow x 10))))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (200 enodes)
* [exit]simplify:  Simplified to (- (+ (+ 1680.0 (cbrt (* -46036680704.0 (pow x 18)))) (* (cbrt -46036680704.0) (- (* (pow x 10) 0.007653061224489796) (* 0.07142857142857142 (pow x 8))))) (- (* (cbrt (/ 1 (pow -46036680704.0 5))) (* 1.6219714057974841e+19 (pow x 10))) (+ (* (pow x 3) (* x 13440.0)) (* (* x -13440.0) x))))
* * * * [misc]progress:  [ 152 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (+ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (* 294.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (pow x 4)))) (+ (* 14.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (pow x 2))) (* 8.275364315293286e+16 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (* (pow 16777216.0 2) (pow x 4))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (+ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (* 294.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (pow x 4)))) (+ (* 14.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (pow x 2))) (* 8.275364315293286e+16 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow x 18))) (* 6 (log (/ 1 x)))))) (* (pow 16777216.0 2) (pow x 4)))))))
* * [misc]simplify:  iters left: 6 (45 enodes)
* * [misc]simplify:  iters left: 5 (101 enodes)
* * [misc]simplify:  iters left: 4 (259 enodes)
* [exit]simplify:  Simplified to (- (+ (* (/ 294.0 (pow x 4)) (pow (exp 1/3) (+ (+ (* (log x) 6) (log 16777216.0)) (* (log x) 18)))) (+ (+ (* (* x x) -13440.0) (+ (* (pow x 3) (* x 13440.0)) 1680.0)) (pow (exp 1/3) (+ (+ (* (log x) 6) (log 16777216.0)) (* (log x) 18))))) (+ (* (/ 8.275364315293286e+16 (* (pow x 4) (* 16777216.0 16777216.0))) (pow (exp 1/3) (+ (+ (* (log x) 6) (log 16777216.0)) (* (log x) 18)))) (* (/ 14.0 (* x x)) (pow (exp 1/3) (+ (+ (* (log x) 6) (log 16777216.0)) (* (log x) 18))))))
* * * * [misc]progress:  [ 153 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (+ (* 294.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x))))))) (+ (* 8.275364315293286e+16 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x)))))) (* (pow 16777216.0 2) (pow x 4)))) (* 14.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x)))))) (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (+ (* 294.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x))))))) (+ (* 8.275364315293286e+16 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x)))))) (* (pow 16777216.0 2) (pow x 4)))) (* 14.0 (/ (exp (* 1/3 (- (log (* 16777216.0 (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2))) (* 6 (log (/ -1 x)))))) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (- (+ (* (/ 294.0 (pow x 4)) (pow (exp 1/3) (+ (- (* (+ 0 (log x)) (+ 9 9)) (* (log (/ -1 x)) 6)) (log 16777216.0)))) (+ (pow (exp 1/3) (+ (- (* (+ 0 (log x)) (+ 9 9)) (* (log (/ -1 x)) 6)) (log 16777216.0))) (+ (+ (* (* x -13440.0) x) 1680.0) (* (pow x 3) (* x 13440.0))))) (+ (* (/ 14.0 (* x x)) (pow (exp 1/3) (+ (- (* (+ 0 (log x)) (+ 9 9)) (* (log (/ -1 x)) 6)) (log 16777216.0)))) (* (/ 8.275364315293286e+16 (* (pow x 4) (* 16777216.0 16777216.0))) (pow (exp 1/3) (+ (- (* (+ 0 (log x)) (+ 9 9)) (* (log (/ -1 x)) 6)) (log 16777216.0))))))
* * * * [misc]progress:  [ 154 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (- (* 9865003008.0 (pow x 20)) (+ (* 704643072.0 (pow x 22)) (* 46036680704.0 (pow x 18)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (- (* 9865003008.0 (pow x 20)) (+ (* 704643072.0 (pow x 22)) (* 46036680704.0 (pow x 18))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (173 enodes)
* * [misc]simplify:  iters left: 2 (239 enodes)
* * [misc]simplify:  iters left: 1 (344 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (- (- (* 9865003008.0 (pow x 20)) (* (pow x 18) 46036680704.0)) (* 704643072.0 (pow x 22)))) (+ (* (pow x 3) (* x 13440.0)) (+ (* (* x -13440.0) x) 1680.0)))
* * * * [misc]progress:  [ 155 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (- (+ (* 16777216.0 (pow x 24)) (* 9865003008.0 (pow x 20))) (* 704643072.0 (pow x 22))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (- (+ (* 16777216.0 (pow x 24)) (* 9865003008.0 (pow x 20))) (* 704643072.0 (pow x 22)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (159 enodes)
* * [misc]simplify:  iters left: 2 (218 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (+ (* 9865003008.0 (pow x 20)) (- (* 16777216.0 (pow x 24)) (* 704643072.0 (pow x 22))))) (+ (* (pow x 3) (* x 13440.0)) (+ (* (* x -13440.0) x) 1680.0)))
* * * * [misc]progress:  [ 156 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (- (+ (* 16777216.0 (* (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2) (pow x 6))) (* 9865003008.0 (* (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2) (pow x 2)))) (* 704643072.0 (* (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2) (pow x 4)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (- (+ (* 16777216.0 (* (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2) (pow x 6))) (* 9865003008.0 (* (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2) (pow x 2)))) (* 704643072.0 (* (pow (exp (* 9 (- (log -1) (log (/ -1 x))))) 2) (pow x 4))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* * [misc]simplify:  iters left: 3 (399 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 3) (* x 13440.0)) 1680.0) (* (* x -13440.0) x)) (cbrt (* (exp (* (log x) (+ 9 9))) (+ (* (* 9865003008.0 x) x) (- (* (pow x 6) 16777216.0) (* (pow x 4) 704643072.0))))))
* * * * [misc]progress:  [ 157 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (+ -3584.0 (* (* 256.0 x) x)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))))) (+ 1680.0 (+ (* x (* x -13440.0)) (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 158 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (+ -3584.0 (* (* 256.0 x) x)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))))) (+ 1680.0 (+ (* x (* x -13440.0)) (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 159 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (+ -3584.0 (* (* 256.0 x) x)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))))) (+ 1680.0 (+ (* x (* x -13440.0)) (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 160 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow x 9)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow x 9))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (* (* (pow x 3) (pow x 9)) (* (pow x 3) (pow x 3))) (+ (* (* x x) 256.0) -3584.0)) (* (+ (* (* x x) 256.0) -3584.0) (+ (* (* x x) 256.0) -3584.0)))) (+ (* (pow x 3) (* x 13440.0)) (+ (* (* x -13440.0) x) 1680.0)))
* * * * [misc]progress:  [ 161 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow (/ 1 x) -3) 3)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow (/ 1 x) -3) 3))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (72 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 3) (* x 13440.0)) (* (* x -13440.0) x)) 1680.0) (cbrt (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (pow (/ 1 x) -3) 3)) (pow (+ (* (* x x) 256.0) -3584.0) 3))))
* * * * [misc]progress:  [ 162 / 162 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (exp (* 9 (- (log -1) (log (/ -1 x)))))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (exp (* 9 (- (log -1) (log (/ -1 x))))))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (233 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (pow (exp 9) (+ 0 (log x)))) (pow (+ (* 256.0 (* x x)) -3584.0) 3))) (+ (+ (* (pow x 3) (* x 13440.0)) (* (* x -13440.0) x)) 1680.0))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1 1 1 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* -13440.0 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -13440.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -13440.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -13440.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -13440.0 1) (+ (* 0 0) (* 0 0))) into (- 13440.0)
* [misc]backup-simplify:  Simplify (- 13440.0) into (- 13440.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 13440.0) (pow x 2)) into (* -13440.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* -13440.0 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -13440.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -13440.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -13440.0 1) into -13440.0
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -13440.0 (pow (/ 1 (/ 1 x)) 2)) into (* -13440.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* -13440.0 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -13440.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -13440.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -13440.0 1) into -13440.0
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -13440.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* -13440.0 (pow x 2))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -3584.0 (* (* (* (* (* x x) x) x) x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -3584.0 (* (* (* (* (* x x) x) x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* x x) x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -3584.0 (* (* (* (* (* x x) x) x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* x x) x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3584.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]approximate:  Taking taylor expansion of (* -3584.0 (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -3584.0 (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -3584.0 (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3584.0 1) into -3584.0
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -3584.0 (pow (/ 1 (/ 1 x)) 6)) into (* -3584.0 (pow x 6))
* [misc]approximate:  Taking taylor expansion of (* -3584.0 (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -3584.0 (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -3584.0 (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3584.0 1) into -3584.0
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3584.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -3584.0 (pow (/ 1 (/ 1 (- x))) 6)) into (* -3584.0 (pow x 6))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* 13440.0 (* (* (* x x) x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 13440.0 (* (* (* x x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 13440.0 (* (* (* x x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 13440.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 13440.0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 13440.0
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x 4)) into (* 13440.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* 13440.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 13440.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 13440.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 13440.0 1) into 13440.0
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow (/ 1 (/ 1 x)) 4)) into (* 13440.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* 13440.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 13440.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 13440.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 13440.0 1) into 13440.0
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow (/ 1 (/ 1 (- x))) 4)) into (* 13440.0 (pow x 4))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1 1 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (pow (* -13440.0 (* x x)) 1)) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* * * * [misc]progress:  [ 2 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (exp (log (* -13440.0 (* x x))))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* -13440.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* -13440.0 (* x x)))
* [exit]simplify:  Simplified to (log (* -13440.0 (* x x)))
* * * * [misc]progress:  [ 3 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (log (exp (* -13440.0 (* x x))))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* -13440.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp -13440.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp -13440.0) (* x x))
* * * * [misc]progress:  [ 4 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* (* (cbrt (* -13440.0 (* x x))) (cbrt (* -13440.0 (* x x)))) (cbrt (* -13440.0 (* x x))))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* -13440.0 (* x x))) (cbrt (* -13440.0 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* -13440.0 (* x x))) (cbrt (* -13440.0 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* -13440.0 (* x x))) (cbrt (* -13440.0 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -13440.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* -13440.0 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* -13440.0 (* x x)))
* * * * [misc]progress:  [ 5 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (cbrt (* (* (* -13440.0 (* x x)) (* -13440.0 (* x x))) (* -13440.0 (* x x))))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* -13440.0 (* x x)) (* -13440.0 (* x x))) (* -13440.0 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* -13440.0 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* -13440.0 (* x x)) 3)
* * * * [misc]progress:  [ 6 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* (sqrt (* -13440.0 (* x x))) (sqrt (* -13440.0 (* x x))))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* -13440.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* -13440.0 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -13440.0 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -13440.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* -13440.0 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -13440.0 (* x x)))
* * * * [misc]progress:  [ 7 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* 1 (* -13440.0 (* x x)))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* * * * [misc]progress:  [ 8 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* (* -13440.0 x) x)) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* -13440.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* -13440.0 x)
* [exit]simplify:  Simplified to (* -13440.0 x)
* * * * [misc]progress:  [ 9 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* (* x x) -13440.0)) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* * * * [misc]progress:  [ 10 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (pow (* -3584.0 (* (* (* (* (* x x) x) x) x) x)) 1)) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* * * * [misc]progress:  [ 11 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (exp (log (* -3584.0 (* (* (* (* (* x x) x) x) x) x))))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* -3584.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (206 enodes)
* * [misc]simplify:  iters left: 1 (228 enodes)
* [exit]simplify:  Simplified to (+ (log -3584.0) (* (log x) (+ 3 3)))
* [exit]simplify:  Simplified to (+ (log -3584.0) (* (log x) (+ 3 3)))
* * * * [misc]progress:  [ 12 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (log (exp (* -3584.0 (* (* (* (* (* x x) x) x) x) x))))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* -3584.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (101 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (pow (exp -3584.0) (pow (* x x) 3))
* [exit]simplify:  Simplified to (pow (exp -3584.0) (pow (* x x) 3))
* * * * [misc]progress:  [ 13 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* (* (cbrt (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (cbrt (* -3584.0 (* (* (* (* (* x x) x) x) x) x)))) (cbrt (* -3584.0 (* (* (* (* (* x x) x) x) x) x))))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (cbrt (* -3584.0 (* (* (* (* (* x x) x) x) x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (111 enodes)
* * [misc]simplify:  iters left: 1 (126 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x (* -3584.0 x)) (* (* x x) (* x x)))) (cbrt (* (* x (* -3584.0 x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x (* -3584.0 x)) (* (* x x) (* x x)))) (cbrt (* (* x (* -3584.0 x)) (* (* x x) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (* -3584.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (115 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -3584.0 (* x x)) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (cbrt (* (* -3584.0 (* x x)) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 14 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (cbrt (* (* (* -3584.0 (* (* (* (* (* x x) x) x) x) x)) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* -3584.0 (* (* (* (* (* x x) x) x) x) x)) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (384 enodes)
* [exit]simplify:  Simplified to (pow (* (* (* x x) (* x x)) (* -3584.0 (* x x))) 3)
* [exit]simplify:  Simplified to (pow (* (* (* x x) (* x x)) (* -3584.0 (* x x))) 3)
* * * * [misc]progress:  [ 15 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* (sqrt (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (sqrt (* -3584.0 (* (* (* (* (* x x) x) x) x) x))))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* -3584.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (115 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -3584.0 (* x x)) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (sqrt (* (* -3584.0 (* x x)) (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (sqrt (* -3584.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (115 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -3584.0 (* x x)) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (sqrt (* (* -3584.0 (* x x)) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 16 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* 1 (* -3584.0 (* (* (* (* (* x x) x) x) x) x)))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* * * * [misc]progress:  [ 17 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* (* -3584.0 (* (* (* (* x x) x) x) x)) x)) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* -3584.0 (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (77 enodes)
* * [misc]simplify:  iters left: 1 (80 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (* x x) (* -3584.0 x)))
* [exit]simplify:  Simplified to (* (* x x) (* (* x x) (* -3584.0 x)))
* * * * [misc]progress:  [ 18 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* (* (* (* (* (* x x) x) x) x) x) -3584.0)) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* * * * [misc]progress:  [ 19 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (pow (* 13440.0 (* (* (* x x) x) x)) 1)) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* * * * [misc]progress:  [ 20 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (exp (log (* 13440.0 (* (* (* x x) x) x))))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* 13440.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (107 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ (log (* 13440.0 x)) (* 3 (log x)))
* [exit]simplify:  Simplified to (+ (log (* 13440.0 x)) (* 3 (log x)))
* * * * [misc]progress:  [ 21 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (log (exp (* 13440.0 (* (* (* x x) x) x))))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* 13440.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (pow (exp 13440.0) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (pow (exp 13440.0) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 22 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* (* (cbrt (* 13440.0 (* (* (* x x) x) x))) (cbrt (* 13440.0 (* (* (* x x) x) x)))) (cbrt (* 13440.0 (* (* (* x x) x) x))))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* 13440.0 (* (* (* x x) x) x))) (cbrt (* 13440.0 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* 13440.0 x) (pow x 3))) (cbrt (* (* 13440.0 x) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (* (* 13440.0 x) (pow x 3))) (cbrt (* (* 13440.0 x) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (* 13440.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* 13440.0 x)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* 13440.0 x)))
* * * * [misc]progress:  [ 23 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (cbrt (* (* (* 13440.0 (* (* (* x x) x) x)) (* 13440.0 (* (* (* x x) x) x))) (* 13440.0 (* (* (* x x) x) x))))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* 13440.0 (* (* (* x x) x) x)) (* 13440.0 (* (* (* x x) x) x))) (* 13440.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* 13440.0 x)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* 13440.0 x)) 3)
* * * * [misc]progress:  [ 24 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* (sqrt (* 13440.0 (* (* (* x x) x) x))) (sqrt (* 13440.0 (* (* (* x x) x) x))))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* 13440.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* 13440.0 x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* 13440.0 x)))
* [enter]simplify:  Simplifying (sqrt (* 13440.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* 13440.0 x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* 13440.0 x)))
* * * * [misc]progress:  [ 25 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 1 (* 13440.0 (* (* (* x x) x) x)))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* * * * [misc]progress:  [ 26 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* (* 13440.0 (* (* x x) x)) x)) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* 13440.0 (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (* 13440.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 13440.0 x) (* x x))
* * * * [misc]progress:  [ 27 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* (* (* (* x x) x) x) 13440.0)) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* * * * [misc]progress:  [ 28 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (pow x 3) x) x) x) x) x))))>
* * * * [misc]progress:  [ 29 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (pow x (+ 2 1)) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 30 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (pow (* (* x x) x) 1) x) x) x) x) x))))>
* * * * [misc]progress:  [ 31 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (exp (log (* (* x x) x))) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 32 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (log (exp (* (* x x) x))) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 33 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 34 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 35 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 36 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* 1 (* (* x x) x)) x) x) x) x) x))))>
* * * * [misc]progress:  [ 37 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* x (* x x)) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 38 / 50 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* x (* x x)) x) x) x) x) x))))>
* * * * [misc]progress:  [ 39 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (pow x 2))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (pow x 2))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (394 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (* x x) -3584.0) 13440.0)) (+ (* (pow (* x x) (+ 3 1)) 256.0) (+ 1680.0 (* x (* x -13440.0)))))
* * * * [misc]progress:  [ 40 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (pow x 2))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (pow x 2))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (394 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (* x x) -3584.0) 13440.0)) (+ (* (pow (* x x) (+ 3 1)) 256.0) (+ 1680.0 (* x (* x -13440.0)))))
* * * * [misc]progress:  [ 41 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (pow x 2))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (pow x 2))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (394 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (* x x) -3584.0) 13440.0)) (+ (* (pow (* x x) (+ 3 1)) 256.0) (+ 1680.0 (* x (* x -13440.0)))))
* * * * [misc]progress:  [ 42 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) 0) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) 0) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ 13440.0 (* (pow x 3) (* 256.0 x)))) (+ (* (* x -13440.0) x) 1680.0))
* * * * [misc]progress:  [ 43 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (pow x 6))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (pow x 6))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (283 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -13440.0)) (+ (* -3584.0 (pow x 6)) 1680.0)) (* (* (* x x) (* x x)) (+ (* (pow x 3) (* 256.0 x)) 13440.0)))
* * * * [misc]progress:  [ 44 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (pow x 6))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (pow x 6))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (283 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -13440.0)) (+ (* -3584.0 (pow x 6)) 1680.0)) (* (* (* x x) (* x x)) (+ (* (pow x 3) (* 256.0 x)) 13440.0)))
* * * * [misc]progress:  [ 45 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (pow x 4))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (pow x 4))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 4) 13440.0) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * * * [misc]progress:  [ 46 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (pow x 4))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (pow x 4))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 4) 13440.0) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * * * [misc]progress:  [ 47 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (pow x 4))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (pow x 4))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 4) 13440.0) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * * * [misc]progress:  [ 48 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (pow x 3) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (pow x 3) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ (+ (* (* x 13440.0) (pow x 3)) 1680.0) (* x (* x -13440.0))))
* * * * [misc]progress:  [ 49 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (pow x 3) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (pow x 3) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ (+ (* (* x 13440.0) (pow x 3)) 1680.0) (* x (* x -13440.0))))
* * * * [misc]progress:  [ 50 / 50 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (pow x 3) x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (pow x 3) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ (+ (* (* x 13440.0) (pow x 3)) 1680.0) (* x (* x -13440.0))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* 256.0 x)) -3584.0) (log (exp (pow (* x x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (log (exp (pow (* x x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* x x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (exp (pow x 6)) into (exp (pow x 6))
* [misc]backup-simplify:  Simplify (log (exp (pow x 6))) into (pow x 6)
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* (- 3584.0) (pow x 6)) into (* -3584.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* -3584.0 (pow x 6))) into (exp (* -3584.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (log (exp (* -3584.0 (pow x 6)))) into (* -3584.0 (pow x 6))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* 256.0 x)) -3584.0) (log (exp (pow (* x x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (log (exp (pow (* x x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* x x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (exp (pow x 6)) into (exp (pow x 6))
* [misc]backup-simplify:  Simplify (log (exp (pow x 6))) into (pow x 6)
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* (- 3584.0) (pow x 6)) into (* -3584.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* -3584.0 (pow x 6))) into (exp (* -3584.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (log (exp (* -3584.0 (pow x 6)))) into (* -3584.0 (pow x 6))
* [misc]backup-simplify:  Simplify (* -3584.0 (pow x 6)) into (* -3584.0 (pow x 6))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (pow x 6)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 1) (* 0 0)) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 0 256.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (* 0 (pow x 6))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (pow x 6)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (pow x 6)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 256.0) (* 0 0))) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (* 256.0 (pow x 6)))) into (* 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (* 256.0 (pow x 6)) 1) 1)))) into (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* 1 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 1)))) 2) into (* 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (* 256.0 (pow x 6)) into (* 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (pow x 6)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (pow x 6)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (pow x 6)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 256.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (* 0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (* 256.0 (pow x 6)) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (pow x 6)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (pow x 6)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (pow x 6)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (pow x 6)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (pow x 6)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (* 0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (* 256.0 (pow x 6)) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (* 256.0 (pow x 6)) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* -3 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 2)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (pow x 6)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (pow x 6)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (pow x 6)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (pow x 6)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (pow x 6)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (pow x 6)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (pow x 6)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow (* 256.0 (pow x 6)) 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (* 256.0 (pow x 6)) 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* -3584.0 (pow x 6))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 2)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* -10 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (pow x 6)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (pow x 6)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (pow x 6)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (pow x 6)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (pow x 6)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (pow x 6)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (pow x 6)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (pow x 6)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (pow x 6)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (pow x 6)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (pow x 6)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow (* 256.0 (pow x 6)) 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow (* 256.0 (pow x 6)) 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (* 256.0 (pow x 6)) 3) 6)) (* (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into (* 2796202.6666666665 (* (exp (* -3584.0 (pow x 6))) (pow x 18)))
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* -3584.0 (pow x 6))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 2)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* 30 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 3)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* -15 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) 1 (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 (* 2796202.6666666665 (* (exp (* -3584.0 (pow x 6))) (pow x 18)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow (exp (pow x 6)) 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow (exp (pow x 6)) 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow (exp (pow x 6)) 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow (exp (pow x 6)) 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow (exp (pow x 6)) 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (pow x 6)) 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow (exp (pow x 6)) 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow (exp (pow x 6)) 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow (exp (pow x 6)) 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (pow x 6)) 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow (exp (pow x 6)) 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow (exp (pow x 6)) 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow (exp (pow x 6)) 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (pow x 6)) 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow (exp (pow x 6)) 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow (* 256.0 (pow x 6)) 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow (* 256.0 (pow x 6)) 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (* 256.0 (pow x 6)) 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (* 256.0 (pow x 6)) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow (exp (* -3584.0 (pow x 6))) 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 2)) (pow (exp (* -3584.0 (pow x 6))) 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 3)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* 210 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 2) (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) 1 (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* -21 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) 1 1 (pow (* 120 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 (* 2796202.6666666665 (* (exp (* -3584.0 (pow x 6))) (pow x 18)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow (exp (pow x 6)) 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow (exp (pow x 6)) 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow (exp (pow x 6)) 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow (exp (pow x 6)) 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow (exp (pow x 6)) 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (pow x 6)) 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow (exp (pow x 6)) 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow (exp (pow x 6)) 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow (exp (pow x 6)) 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow (exp (pow x 6)) 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (pow x 6)) 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow (exp (pow x 6)) 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow (exp (pow x 6)) 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow (exp (pow x 6)) 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow (exp (pow x 6)) 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow (exp (pow x 6)) 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (pow x 6)) 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow (exp (pow x 6)) 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow (exp (pow x 6)) 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow (exp (pow x 6)) 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow (exp (pow x 6)) 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow (exp (pow x 6)) 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow (* 256.0 (pow x 6)) 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow (* 256.0 (pow x 6)) 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow (* 256.0 (pow x 6)) 3) 6)) (* (/ (pow 0 2) 2) (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (* 256.0 (pow x 6)) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (* 256.0 (pow x 6)) 4) 24)) (* (/ (pow (* 256.0 (pow x 6)) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (* 256.0 (pow x 6)) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into (* 178956970.66666666 (* (exp (* -3584.0 (pow x 6))) (pow x 24)))
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow (exp (* -3584.0 (pow x 6))) 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 2)) (pow (exp (* -3584.0 (pow x 6))) 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 3)) (pow (exp (* -3584.0 (pow x 6))) 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 5))) (* -630 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 4)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 2) (pow (* 6 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) 1 (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 4))) (* 560 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) (pow (* 6 0) 2)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* 420 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 2) 1 (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) 1 1 (pow (* 120 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 (* 2796202.6666666665 (* (exp (* -3584.0 (pow x 6))) (pow x 18)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 3))) (* -35 (/ (* 1 1 1 (pow (* 24 (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))) 2)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* -28 (/ (* 1 (pow (* 2 (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))) 1) 1 1 1 (pow (* 720 (* 2796202.6666666665 (* (exp (* -3584.0 (pow x 6))) (pow x 18)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow (exp (* -3584.0 (pow x 6))) 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 (* 178956970.66666666 (* (exp (* -3584.0 (pow x 6))) (pow x 24)))) 1)) (pow (exp (* -3584.0 (pow x 6))) 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (* 256.0 (pow x 6)) (pow x 2)) (* -3584.0 (pow x 6))) into (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (log (pow (exp (pow (* (/ 1 x) (/ 1 x)) 3)) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (pow (* (/ 1 x) (/ 1 x)) 3)) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* (/ 1 x) (/ 1 x)) 3)) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (exp (pow x -6)) into (exp (pow x -6))
* [misc]backup-simplify:  Simplify (log (exp (pow x -6))) into (pow x -6)
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 (pow x -6)) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))))) into (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))) into (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (pow (* (/ 1 x) (/ 1 x)) 3)) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* (/ 1 x) (/ 1 x)) 3)) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (exp (pow x -6)) into (exp (pow x -6))
* [misc]backup-simplify:  Simplify (log (exp (pow x -6))) into (pow x -6)
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 (pow x -6)) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))))) into (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))) into (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))
* [misc]backup-simplify:  Simplify (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)) into (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (- (* 256.0 (/ 1 (pow (/ 1 x) 2))) 3584.0) (pow (/ 1 x) 6)) into (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6))
* [misc]approximate:  Taking taylor expansion of (log (pow (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (exp (pow x -6)) into (exp (pow x -6))
* [misc]backup-simplify:  Simplify (log (exp (pow x -6))) into (pow x -6)
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 (pow x -6)) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))))) into (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))) into (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (exp (pow x -6)) into (exp (pow x -6))
* [misc]backup-simplify:  Simplify (log (exp (pow x -6))) into (pow x -6)
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 (pow x -6)) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))))) into (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))) into (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))
* [misc]backup-simplify:  Simplify (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)) into (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (- (* 256.0 (/ 1 (pow (/ 1 (- x)) 2))) 3584.0) (pow (/ 1 (- x)) 6)) into (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* 256.0 x)) -3584.0) (log (exp (pow (* x x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (log (exp (pow (* x x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* x x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (exp (pow x 6)) into (exp (pow x 6))
* [misc]backup-simplify:  Simplify (log (exp (pow x 6))) into (pow x 6)
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* (- 3584.0) (pow x 6)) into (* -3584.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* -3584.0 (pow x 6))) into (exp (* -3584.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* 256.0 x)) -3584.0) (log (exp (pow (* x x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* 256.0 x)) -3584.0) (log (exp (pow (* x x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 256.0 x)) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 256.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* x x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (exp (pow x 6)) into (exp (pow x 6))
* [misc]backup-simplify:  Simplify (log (exp (pow x 6))) into (pow x 6)
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -3584.0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* (- 3584.0) (pow x 6)) into (* -3584.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* -3584.0 (pow x 6))) into (exp (* -3584.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (* -3584.0 (pow x 6))) into (exp (* -3584.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (pow x 6)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 1) (* 0 0)) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 0 256.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (* 0 (pow x 6))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (pow x 6)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (pow x 6)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 256.0) (* 0 0))) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (* 256.0 (pow x 6)))) into (* 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (* 256.0 (pow x 6)) 1) 1)))) into (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))
* [misc]backup-simplify:  Simplify (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6))) into (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (pow x 6)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (pow x 6)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (pow x 6)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 256.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (* 0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (* 256.0 (pow x 6)) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (pow x 6)) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (pow x 6)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (pow x 6)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (pow x 6)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (pow x 6)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (pow x 6)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 256.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3584.0) 0) (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (* 0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3584.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (* 256.0 (pow x 6)) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (* 256.0 (pow x 6)) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))
* [misc]backup-simplify:  Simplify (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12))) into (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12)))
* [misc]backup-simplify:  Simplify (+ (* (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 12))) (pow x 4)) (+ (* (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 6))) (pow x 2)) (exp (* -3584.0 (pow x 6))))) into (+ (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 16))) (+ (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 8))) (exp (* -3584.0 (pow x 6)))))
* [misc]approximate:  Taking taylor expansion of (pow (exp (pow (* (/ 1 x) (/ 1 x)) 3)) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* (/ 1 x) (/ 1 x)) 3)) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (exp (pow x -6)) into (exp (pow x -6))
* [misc]backup-simplify:  Simplify (log (exp (pow x -6))) into (pow x -6)
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 (pow x -6)) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))))) into (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* (/ 1 x) (/ 1 x)) 3)) (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 256.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (exp (pow x -6)) into (exp (pow x -6))
* [misc]backup-simplify:  Simplify (log (exp (pow x -6))) into (pow x -6)
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 1 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 (pow x -6)) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* 256.0 (/ 1 x))) -3584.0) (log (exp (pow (* (/ 1 x) (/ 1 x)) 3))))) into (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) into (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- (* 256.0 (/ 1 (pow (/ 1 x) 2))) 3584.0) (pow (/ 1 x) 6))) into (exp (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (exp (pow x -6)) into (exp (pow x -6))
* [misc]backup-simplify:  Simplify (log (exp (pow x -6))) into (pow x -6)
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 (pow x -6)) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))))) into (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (exp (pow x -6)) into (exp (pow x -6))
* [misc]backup-simplify:  Simplify (log (exp (pow x -6))) into (pow x -6)
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -1 -256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ 256.0 0) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 (pow x -6)) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* 256.0 (/ 1 (- x)))) -3584.0) (log (exp (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))))) into (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6))) into (exp (/ (- (* 256.0 (/ 1 (pow x 2))) 3584.0) (pow x 6)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- (* 256.0 (/ 1 (pow (/ 1 (- x)) 2))) 3584.0) (pow (/ 1 (- x)) 6))) into (exp (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* x (* x -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* x (* x -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* x (* x -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* 0 -13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -13440.0)) into (- 13440.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 13440.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 13440.0)) (* 0 0))) into (- 13440.0)
* [misc]backup-simplify:  Simplify (- 13440.0) into (- 13440.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 13440.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 13440.0) (pow x 2)) into (* -13440.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* 1 -13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* 1 -13440.0) into -13440.0
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -13440.0 (pow (/ 1 (/ 1 x)) 2)) into (* -13440.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* -1 -13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -13440.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* -13440.0 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (log (pow (exp (pow (* x x) 3)) (* x (* 256.0 x)))) (log (pow (exp (pow (* x x) 3)) -3584.0)))))>
* [enter]simplify:  Simplifying (log (pow (exp (pow (* x x) 3)) (* x (* 256.0 x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (261 enodes)
* * [misc]simplify:  iters left: 1 (477 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) 256.0)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) 256.0)
* [enter]simplify:  Simplifying (log (pow (exp (pow (* x x) 3)) -3584.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (117 enodes)
* * [misc]simplify:  iters left: 1 (237 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* -3584.0 x) x))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* -3584.0 x) x))
* * * * [misc]progress:  [ 2 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (log (pow (* (cbrt (exp (pow (* x x) 3))) (cbrt (exp (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0))) (log (pow (cbrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (log (pow (* (cbrt (exp (pow (* x x) 3))) (cbrt (exp (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (184 enodes)
* [exit]simplify:  Simplified to (* (log (cbrt (exp (pow (* x x) 3)))) (+ (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)))
* [exit]simplify:  Simplified to (* (log (cbrt (exp (pow (* x x) 3)))) (+ (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)))
* [enter]simplify:  Simplifying (log (pow (cbrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (97 enodes)
* [exit]simplify:  Simplified to (* (log (cbrt (exp (pow (* x x) 3)))) (+ (* (* x 256.0) x) -3584.0))
* [exit]simplify:  Simplified to (* (log (cbrt (exp (pow (* x x) 3)))) (+ (* (* x 256.0) x) -3584.0))
* * * * [misc]progress:  [ 3 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (log (pow (sqrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))) (log (pow (sqrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (log (pow (sqrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (97 enodes)
* [exit]simplify:  Simplified to (* (log (sqrt (exp (pow (* x x) 3)))) (+ (* (* x 256.0) x) -3584.0))
* [exit]simplify:  Simplified to (* (log (sqrt (exp (pow (* x x) 3)))) (+ (* (* x 256.0) x) -3584.0))
* [enter]simplify:  Simplifying (log (pow (sqrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (97 enodes)
* [exit]simplify:  Simplified to (* (log (sqrt (exp (pow (* x x) 3)))) (+ (* (* x 256.0) x) -3584.0))
* [exit]simplify:  Simplified to (* (log (sqrt (exp (pow (* x x) 3)))) (+ (* (* x 256.0) x) -3584.0))
* * * * [misc]progress:  [ 4 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (log (pow 1 (+ (* x (* 256.0 x)) -3584.0))) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (log (pow 1 (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (317 enodes)
* [exit]simplify:  Simplified to (log 1)
* [exit]simplify:  Simplified to (log 1)
* [enter]simplify:  Simplifying (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* [exit]simplify:  Simplified to (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 5 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (log (* (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))) (log (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))) (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))))))
* [exit]simplify:  Simplified to (log (* (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))) (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))))))
* [enter]simplify:  Simplifying (log (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (log (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))))
* [exit]simplify:  Simplified to (log (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))))
* * * * [misc]progress:  [ 6 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (log (sqrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))) (log (sqrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (log (sqrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))))
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))))
* [enter]simplify:  Simplifying (log (sqrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))))
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))))
* * * * [misc]progress:  [ 7 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (log 1) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (log 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (log 1)
* [exit]simplify:  Simplified to (log 1)
* [enter]simplify:  Simplifying (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* [exit]simplify:  Simplified to (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 8 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (+ (* x (* 256.0 x)) -3584.0) (log (exp (pow (* x x) 3))))))>
* [enter]simplify:  Simplifying (log (exp (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* * * * [misc]progress:  [ 9 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (pow (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) 1)))>
* * * * [misc]progress:  [ 10 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))))>
* * * * [misc]progress:  [ 11 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (log (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))))>
* * * * [misc]progress:  [ 12 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* * * * [misc]progress:  [ 13 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (log (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (log (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (102 enodes)
* * [misc]simplify:  iters left: 2 (278 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -3584.0 (* x (* 256.0 x)))) (+ (* (log x) 3) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (log (+ -3584.0 (* x (* 256.0 x)))) (+ (* (log x) 3) (* (log x) 3)))
* * * * [misc]progress:  [ 14 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (exp (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (230 enodes)
* [exit]simplify:  Simplified to (pow (exp (* (pow x 3) (pow x 3))) (+ -3584.0 (* x (* 256.0 x))))
* [exit]simplify:  Simplified to (pow (exp (* (pow x 3) (pow x 3))) (+ -3584.0 (* x (* 256.0 x))))
* * * * [misc]progress:  [ 15 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (cbrt (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))) (cbrt (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))) (cbrt (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))) (cbrt (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (214 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3)))) (cbrt (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3)))) (cbrt (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (219 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ -3584.0 (* x (* 256.0 x))) (pow (* x x) 3)))
* [exit]simplify:  Simplified to (cbrt (* (+ -3584.0 (* x (* 256.0 x))) (pow (* x x) 3)))
* * * * [misc]progress:  [ 16 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (* (* (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (146 enodes)
* [exit]simplify:  Simplified to (pow (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3))) 3)
* * * * [misc]progress:  [ 17 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (sqrt (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))) (sqrt (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (sqrt (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (219 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ -3584.0 (* x (* 256.0 x))) (pow (* x x) 3)))
* [exit]simplify:  Simplified to (sqrt (* (+ -3584.0 (* x (* 256.0 x))) (pow (* x x) 3)))
* [enter]simplify:  Simplifying (sqrt (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (219 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ -3584.0 (* x (* 256.0 x))) (pow (* x x) 3)))
* [exit]simplify:  Simplified to (sqrt (* (+ -3584.0 (* x (* 256.0 x))) (pow (* x x) 3)))
* * * * [misc]progress:  [ 18 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* 1 (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))))>
* * * * [misc]progress:  [ 19 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (228 enodes)
* * [misc]simplify:  iters left: 2 (405 enodes)
* * [misc]simplify:  iters left: 1 (474 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x 256.0) x)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x 256.0) x)))
* * * * [misc]progress:  [ 20 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (* (log (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (log (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (273 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 256.0) x) -3584.0) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (* (+ (* (* x 256.0) x) -3584.0) (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 21 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow (* x x) 3)) (* 1 (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* 1 (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* 256.0 (* x x)) -3584.0)
* [exit]simplify:  Simplified to (+ (* 256.0 (* x x)) -3584.0)
* * * * [misc]progress:  [ 22 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow x 3)) (* (pow x 3) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (102 enodes)
* * [misc]simplify:  iters left: 2 (133 enodes)
* * [misc]simplify:  iters left: 1 (152 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x x) (* 256.0 x)) (* x -3584.0)) (* x x))
* [exit]simplify:  Simplified to (* (+ (* (* x x) (* 256.0 x)) (* x -3584.0)) (* x x))
* * * * [misc]progress:  [ 23 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* (* x x) (* x x))) (* (* x x) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* x 256.0)) (* -3584.0 (* x x)))
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* x 256.0)) (* -3584.0 (* x x)))
* * * * [misc]progress:  [ 24 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))) (* (cbrt (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (101 enodes)
* * [misc]simplify:  iters left: 1 (106 enodes)
* [exit]simplify:  Simplified to (+ (* -3584.0 (* x x)) (* (pow x 3) (* 256.0 x)))
* [exit]simplify:  Simplified to (+ (* -3584.0 (* x x)) (* (pow x 3) (* 256.0 x)))
* * * * [misc]progress:  [ 25 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow x 3)) (* (pow x 3) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (102 enodes)
* * [misc]simplify:  iters left: 2 (133 enodes)
* * [misc]simplify:  iters left: 1 (152 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x x) (* 256.0 x)) (* x -3584.0)) (* x x))
* [exit]simplify:  Simplified to (* (+ (* (* x x) (* 256.0 x)) (* x -3584.0)) (* x x))
* * * * [misc]progress:  [ 26 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* x x)) (* (* (* x x) (* x x)) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* * [misc]simplify:  iters left: 2 (245 enodes)
* * [misc]simplify:  iters left: 1 (285 enodes)
* [exit]simplify:  Simplified to (* (+ -3584.0 (* x (* 256.0 x))) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ -3584.0 (* x (* 256.0 x))) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 27 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (sqrt (pow (* x x) 3))) (* (sqrt (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (sqrt (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (86 enodes)
* * [misc]simplify:  iters left: 1 (91 enodes)
* [exit]simplify:  Simplified to (* (+ -3584.0 (* x (* 256.0 x))) (fabs (pow x 3)))
* [exit]simplify:  Simplified to (* (+ -3584.0 (* x (* 256.0 x))) (fabs (pow x 3)))
* * * * [misc]progress:  [ 28 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp 1) (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (228 enodes)
* * [misc]simplify:  iters left: 2 (405 enodes)
* * [misc]simplify:  iters left: 1 (474 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x 256.0) x)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x 256.0) x)))
* * * * [misc]progress:  [ 29 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (pow (exp (pow (* x x) 3)) (* (cbrt (+ (* x (* 256.0 x)) -3584.0)) (cbrt (+ (* x (* 256.0 x)) -3584.0)))) (cbrt (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (pow (exp (pow (* x x) 3)) (* (cbrt (+ (* x (* 256.0 x)) -3584.0)) (cbrt (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) (* (cbrt (+ -3584.0 (* x (* 256.0 x)))) (cbrt (+ -3584.0 (* x (* 256.0 x))))))
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) (* (cbrt (+ -3584.0 (* x (* 256.0 x)))) (cbrt (+ -3584.0 (* x (* 256.0 x))))))
* * * * [misc]progress:  [ 30 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (pow (exp (pow (* x x) 3)) (sqrt (+ (* x (* 256.0 x)) -3584.0))) (sqrt (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (pow (exp (pow (* x x) 3)) (sqrt (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) (sqrt (+ -3584.0 (* x (* 256.0 x)))))
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) (sqrt (+ -3584.0 (* x (* 256.0 x)))))
* * * * [misc]progress:  [ 31 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (pow (exp (pow (* x x) 3)) 1) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (pow (exp (pow (* x x) 3)) 1)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 32 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (* (pow (exp (pow (* x x) 3)) (* x (* 256.0 x))) (pow (exp (pow (* x x) 3)) -3584.0)))))>
* [enter]simplify:  Simplifying (pow (exp (pow (* x x) 3)) (* x (* 256.0 x)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (pow (exp (* (pow x 3) (pow x 3))) (* x (* 256.0 x)))
* [exit]simplify:  Simplified to (pow (exp (* (pow x 3) (pow x 3))) (* x (* 256.0 x)))
* [enter]simplify:  Simplifying (pow (exp (pow (* x x) 3)) -3584.0)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) -3584.0)
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) -3584.0)
* * * * [misc]progress:  [ 33 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (* (pow (* (cbrt (exp (pow (* x x) 3))) (cbrt (exp (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0)) (pow (cbrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp (pow (* x x) 3))) (cbrt (exp (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (pow (* x x) 3))) (cbrt (exp (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (pow (* x x) 3))) (cbrt (exp (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0))
* [enter]simplify:  Simplifying (pow (cbrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp (pow (* x x) 3))) (+ (* (* x 256.0) x) -3584.0))
* [exit]simplify:  Simplified to (pow (cbrt (exp (pow (* x x) 3))) (+ (* (* x 256.0) x) -3584.0))
* * * * [misc]progress:  [ 34 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (* (pow (sqrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0)) (pow (sqrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (pow (* x x) 3))) (+ (* (* x 256.0) x) -3584.0))
* [exit]simplify:  Simplified to (pow (sqrt (exp (pow (* x x) 3))) (+ (* (* x 256.0) x) -3584.0))
* [enter]simplify:  Simplifying (pow (sqrt (exp (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (pow (* x x) 3))) (+ (* (* x 256.0) x) -3584.0))
* [exit]simplify:  Simplified to (pow (sqrt (exp (pow (* x x) 3))) (+ (* (* x 256.0) x) -3584.0))
* * * * [misc]progress:  [ 35 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (* (pow 1 (+ (* x (* 256.0 x)) -3584.0)) (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))))>
* [enter]simplify:  Simplifying (pow 1 (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (47 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (57 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))
* * * * [misc]progress:  [ 36 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)) 1))))>
* * * * [misc]progress:  [ 37 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* [exit]simplify:  Simplified to (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (* (+ -3584.0 (* x (* 256.0 x))) (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 38 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (log (exp (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (exp (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))))
* [exit]simplify:  Simplified to (exp (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))))
* * * * [misc]progress:  [ 39 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (* (* (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))) (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))) (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))) (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x))))))
* [enter]simplify:  Simplifying (cbrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))))
* [exit]simplify:  Simplified to (cbrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))))
* * * * [misc]progress:  [ 40 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (cbrt (* (* (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)) (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)) (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* * [misc]simplify:  iters left: 1 (63 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))) 3)
* [exit]simplify:  Simplified to (pow (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))) 3)
* * * * [misc]progress:  [ 41 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (* (sqrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))) (sqrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))))
* [exit]simplify:  Simplified to (sqrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))))
* [enter]simplify:  Simplifying (sqrt (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))))
* [exit]simplify:  Simplified to (sqrt (pow (exp (pow (* x x) 3)) (+ -3584.0 (* x (* 256.0 x)))))
* * * * [misc]progress:  [ 42 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (* 1 (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))))>
* * * * [misc]progress:  [ 43 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (exp (* (log (* x x)) 3))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 44 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (exp (* (log (* x x)) 3))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 45 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow x (* 2 3))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 46 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow (* x x) (* 1 3))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 47 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* (pow x 3) (pow x 3))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 48 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* (* (* x x) (* x x)) (* x x))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 49 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow (pow (* x x) 3) 1)) (+ (* x (* 256.0 x)) -3584.0)))))>
* * * * [misc]progress:  [ 50 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (exp (log (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 51 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (log (exp (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 52 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 53 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 54 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* (pow x 3) (pow x 3))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 55 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* (* x x) (* (* x x) (* x x)))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 56 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* (* (* x x) (* x x)) (* x x))) (+ (* x (* 256.0 x)) -3584.0)))))>
* * * * [misc]progress:  [ 57 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3)))) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 58 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (* 1 (pow (* x x) 3))) (+ (* x (* 256.0 x)) -3584.0)))))>
* * * * [misc]progress:  [ 59 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (pow (* x (* x -13440.0)) 1)) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* * * * [misc]progress:  [ 60 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (exp (log (* x (* x -13440.0))))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (log (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (log (* x (* x -13440.0)))
* * * * [misc]progress:  [ 61 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (log (exp (* x (* x -13440.0))))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (exp (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* x -13440.0))
* [exit]simplify:  Simplified to (pow (exp x) (* x -13440.0))
* * * * [misc]progress:  [ 62 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0)))) (cbrt (* x (* x -13440.0))))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* [enter]simplify:  Simplifying (cbrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x -13440.0)))
* * * * [misc]progress:  [ 63 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (cbrt (* (* (* x (* x -13440.0)) (* x (* x -13440.0))) (* x (* x -13440.0))))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* (* (* x (* x -13440.0)) (* x (* x -13440.0))) (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (246 enodes)
* * [misc]simplify:  iters left: 1 (355 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x -13440.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x -13440.0)) 3)
* * * * [misc]progress:  [ 64 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (sqrt (* x (* x -13440.0))) (sqrt (* x (* x -13440.0))))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (sqrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [enter]simplify:  Simplifying (sqrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* * * * [misc]progress:  [ 65 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* 1 (* x (* x -13440.0)))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* * * * [misc]progress:  [ 66 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* x x) -13440.0)) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 67 / 79 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* x -13440.0) x)) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* * * * [misc]progress:  [ 68 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* * [misc]simplify:  iters left: 2 (443 enodes)
* [exit]simplify:  Simplified to (- (+ (* 256.0 (pow x 8)) (- 1680.0 (* 3584.0 (pow x 6)))) (* (- (* x x)) (+ (* (* x x) 13440.0) -13440.0)))
* * * * [misc]progress:  [ 69 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6)))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (199 enodes)
* * [misc]simplify:  iters left: 2 (399 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* x (* x 13440.0)) (* (pow x 6) 256.0))) (- (+ (* (* x x) -13440.0) 1680.0) (* 3584.0 (pow x 6))))
* * * * [misc]progress:  [ 70 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6)))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (199 enodes)
* * [misc]simplify:  iters left: 2 (399 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* x (* x 13440.0)) (* (pow x 6) 256.0))) (- (+ (* (* x x) -13440.0) 1680.0) (* 3584.0 (pow x 6))))
* * * * [misc]progress:  [ 71 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (+ (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 16))) (+ (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 8))) (exp (* -3584.0 (pow x 6))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (+ (* 32768.0 (* (exp (* -3584.0 (pow x 6))) (pow x 16))) (+ (* 256.0 (* (exp (* -3584.0 (pow x 6))) (pow x 8))) (exp (* -3584.0 (pow x 6)))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (179 enodes)
* * [misc]simplify:  iters left: 2 (263 enodes)
* * [misc]simplify:  iters left: 1 (409 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 6) -3584.0) (+ (log (+ (* 256.0 (pow x 8)) (+ 1 (* (pow x 16) 32768.0)))) (+ (* (pow x 3) (* x 13440.0)) (+ (* -13440.0 (* x x)) 1680.0))))
* * * * [misc]progress:  [ 72 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* * [misc]simplify:  iters left: 2 (489 enodes)
* [exit]simplify:  Simplified to (+ (+ (- 1680.0 (* 3584.0 (pow x 6))) (* (* x x) -13440.0)) (* x (+ (* (* x x) (* x 13440.0)) (* (pow x 6) (* x 256.0)))))
* * * * [misc]progress:  [ 73 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (* (- (* 256.0 (pow x 2)) 3584.0) (pow x 6)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* * [misc]simplify:  iters left: 2 (489 enodes)
* [exit]simplify:  Simplified to (+ (+ (- 1680.0 (* 3584.0 (pow x 6))) (* (* x x) -13440.0)) (* x (+ (* (* x x) (* x 13440.0)) (* (pow x 6) (* x 256.0)))))
* * * * [misc]progress:  [ 74 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow x 6)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow x 6)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (143 enodes)
* * [misc]simplify:  iters left: 2 (319 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* (* x x) 13440.0) (* (pow x 6) 256.0))) (+ 1680.0 (+ (* -13440.0 (* x x)) (* (pow x 6) -3584.0))))
* * * * [misc]progress:  [ 75 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow (/ 1 x) -6)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow (/ 1 x) -6)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (145 enodes)
* * [misc]simplify:  iters left: 2 (316 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 3) (* x 13440.0)) (* -13440.0 (* x x))) 1680.0) (* (+ -3584.0 (* 256.0 (* x x))) (pow (/ 1 x) -6)))
* * * * [misc]progress:  [ 76 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow (/ -1 x) -6)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow (/ -1 x) -6)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (145 enodes)
* * [misc]simplify:  iters left: 2 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 3) (* x 13440.0)) (* -13440.0 (* x x))) 1680.0) (* (+ -3584.0 (* 256.0 (* x x))) (pow (/ -1 x) -6)))
* * * * [misc]progress:  [ 77 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (204 enodes)
* [exit]simplify:  Simplified to (+ (+ 1680.0 (+ (* (* x x) -13440.0) (* (pow x 3) (* x 13440.0)))) (* (* (pow x 3) (pow x 3)) (+ (* 256.0 (* x x)) -3584.0)))
* * * * [misc]progress:  [ 78 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (204 enodes)
* [exit]simplify:  Simplified to (+ (+ 1680.0 (+ (* (* x x) -13440.0) (* (pow x 3) (* x 13440.0)))) (* (* (pow x 3) (pow x 3)) (+ (* 256.0 (* x x)) -3584.0)))
* * * * [misc]progress:  [ 79 / 79 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (204 enodes)
* [exit]simplify:  Simplified to (+ (+ 1680.0 (+ (* (* x x) -13440.0) (* (pow x 3) (* x 13440.0)))) (* (* (pow x 3) (pow x 3)) (+ (* 256.0 (* x x)) -3584.0)))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0)))))> #<alt-event (Î» (x) (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))> #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))))))>)
* [enter]simplify:  Simplifying (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))
* [exit]simplify:  Simplified to (* (+ (* x (* x 256.0)) -3584.0) (+ (* x (* x 256.0)) -3584.0))
* [enter]simplify:  Simplifying (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0))
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* x 256.0)) -3584.0))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
